ARM GAS  /tmp/ccA36XgO.s 			page 1


   1              		.cpu cortex-m3
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 1
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"usart.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.MX_USART2_UART_Init,"ax",%progbits
  16              		.align	1
  17              		.global	MX_USART2_UART_Init
  18              		.syntax unified
  19              		.thumb
  20              		.thumb_func
  21              		.fpu softvfp
  23              	MX_USART2_UART_Init:
  24              	.LFB66:
  25              		.file 1 "Src/usart.c"
   1:Src/usart.c   **** /**
   2:Src/usart.c   ****   ******************************************************************************
   3:Src/usart.c   ****   * File Name          : USART.c
   4:Src/usart.c   ****   * Description        : This file provides code for the configuration
   5:Src/usart.c   ****   *                      of the USART instances.
   6:Src/usart.c   ****   ******************************************************************************
   7:Src/usart.c   ****   ** This notice applies to any and all portions of this file
   8:Src/usart.c   ****   * that are not between comment pairs USER CODE BEGIN and
   9:Src/usart.c   ****   * USER CODE END. Other portions of this file, whether 
  10:Src/usart.c   ****   * inserted by the user or by software development tools
  11:Src/usart.c   ****   * are owned by their respective copyright owners.
  12:Src/usart.c   ****   *
  13:Src/usart.c   ****   * COPYRIGHT(c) 2018 STMicroelectronics
  14:Src/usart.c   ****   *
  15:Src/usart.c   ****   * Redistribution and use in source and binary forms, with or without modification,
  16:Src/usart.c   ****   * are permitted provided that the following conditions are met:
  17:Src/usart.c   ****   *   1. Redistributions of source code must retain the above copyright notice,
  18:Src/usart.c   ****   *      this list of conditions and the following disclaimer.
  19:Src/usart.c   ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
  20:Src/usart.c   ****   *      this list of conditions and the following disclaimer in the documentation
  21:Src/usart.c   ****   *      and/or other materials provided with the distribution.
  22:Src/usart.c   ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
  23:Src/usart.c   ****   *      may be used to endorse or promote products derived from this software
  24:Src/usart.c   ****   *      without specific prior written permission.
  25:Src/usart.c   ****   *
  26:Src/usart.c   ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  27:Src/usart.c   ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  28:Src/usart.c   ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  29:Src/usart.c   ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
  30:Src/usart.c   ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  31:Src/usart.c   ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
  32:Src/usart.c   ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  33:Src/usart.c   ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
ARM GAS  /tmp/ccA36XgO.s 			page 2


  34:Src/usart.c   ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
  35:Src/usart.c   ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  36:Src/usart.c   ****   *
  37:Src/usart.c   ****   ******************************************************************************
  38:Src/usart.c   ****   */
  39:Src/usart.c   **** 
  40:Src/usart.c   **** /* Includes ------------------------------------------------------------------*/
  41:Src/usart.c   **** #include "usart.h"
  42:Src/usart.c   **** 
  43:Src/usart.c   **** #include "gpio.h"
  44:Src/usart.c   **** #include "dma.h"
  45:Src/usart.c   **** 
  46:Src/usart.c   **** /* USER CODE BEGIN 0 */
  47:Src/usart.c   **** 
  48:Src/usart.c   **** /* USER CODE END 0 */
  49:Src/usart.c   **** 
  50:Src/usart.c   **** UART_HandleTypeDef huart2;
  51:Src/usart.c   **** DMA_HandleTypeDef hdma_usart2_tx;
  52:Src/usart.c   **** 
  53:Src/usart.c   **** /* USART2 init function */
  54:Src/usart.c   **** 
  55:Src/usart.c   **** void MX_USART2_UART_Init(void)
  56:Src/usart.c   **** {
  26              		.loc 1 56 0
  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 0
  29              		@ frame_needed = 0, uses_anonymous_args = 0
  30 0000 08B5     		push	{r3, lr}
  31              	.LCFI0:
  32              		.cfi_def_cfa_offset 8
  33              		.cfi_offset 3, -8
  34              		.cfi_offset 14, -4
  57:Src/usart.c   **** 
  58:Src/usart.c   ****   huart2.Instance = USART2;
  35              		.loc 1 58 0
  36 0002 0B48     		ldr	r0, .L5
  37 0004 0B4B     		ldr	r3, .L5+4
  38 0006 0360     		str	r3, [r0]
  59:Src/usart.c   ****   huart2.Init.BaudRate = 115200;
  39              		.loc 1 59 0
  40 0008 4FF4E133 		mov	r3, #115200
  41 000c 4360     		str	r3, [r0, #4]
  60:Src/usart.c   ****   huart2.Init.WordLength = UART_WORDLENGTH_8B;
  42              		.loc 1 60 0
  43 000e 0023     		movs	r3, #0
  44 0010 8360     		str	r3, [r0, #8]
  61:Src/usart.c   ****   huart2.Init.StopBits = UART_STOPBITS_1;
  45              		.loc 1 61 0
  46 0012 C360     		str	r3, [r0, #12]
  62:Src/usart.c   ****   huart2.Init.Parity = UART_PARITY_NONE;
  47              		.loc 1 62 0
  48 0014 0361     		str	r3, [r0, #16]
  63:Src/usart.c   ****   huart2.Init.Mode = UART_MODE_TX_RX;
  49              		.loc 1 63 0
  50 0016 0C22     		movs	r2, #12
  51 0018 4261     		str	r2, [r0, #20]
  64:Src/usart.c   ****   huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
ARM GAS  /tmp/ccA36XgO.s 			page 3


  52              		.loc 1 64 0
  53 001a 8361     		str	r3, [r0, #24]
  65:Src/usart.c   ****   huart2.Init.OverSampling = UART_OVERSAMPLING_16;
  54              		.loc 1 65 0
  55 001c C361     		str	r3, [r0, #28]
  66:Src/usart.c   ****   if (HAL_UART_Init(&huart2) != HAL_OK)
  56              		.loc 1 66 0
  57 001e FFF7FEFF 		bl	HAL_UART_Init
  58              	.LVL0:
  59 0022 00B9     		cbnz	r0, .L4
  60              	.L1:
  67:Src/usart.c   ****   {
  68:Src/usart.c   ****     _Error_Handler(__FILE__, __LINE__);
  69:Src/usart.c   ****   }
  70:Src/usart.c   **** 
  71:Src/usart.c   **** }
  61              		.loc 1 71 0
  62 0024 08BD     		pop	{r3, pc}
  63              	.L4:
  68:Src/usart.c   ****   }
  64              		.loc 1 68 0
  65 0026 4421     		movs	r1, #68
  66 0028 0348     		ldr	r0, .L5+8
  67 002a FFF7FEFF 		bl	_Error_Handler
  68              	.LVL1:
  69              		.loc 1 71 0
  70 002e F9E7     		b	.L1
  71              	.L6:
  72              		.align	2
  73              	.L5:
  74 0030 00000000 		.word	huart2
  75 0034 00440040 		.word	1073759232
  76 0038 00000000 		.word	.LC0
  77              		.cfi_endproc
  78              	.LFE66:
  80              		.section	.text.HAL_UART_MspInit,"ax",%progbits
  81              		.align	1
  82              		.global	HAL_UART_MspInit
  83              		.syntax unified
  84              		.thumb
  85              		.thumb_func
  86              		.fpu softvfp
  88              	HAL_UART_MspInit:
  89              	.LFB67:
  72:Src/usart.c   **** 
  73:Src/usart.c   **** void HAL_UART_MspInit(UART_HandleTypeDef* uartHandle)
  74:Src/usart.c   **** {
  90              		.loc 1 74 0
  91              		.cfi_startproc
  92              		@ args = 0, pretend = 0, frame = 24
  93              		@ frame_needed = 0, uses_anonymous_args = 0
  94              	.LVL2:
  75:Src/usart.c   **** 
  76:Src/usart.c   ****   GPIO_InitTypeDef GPIO_InitStruct;
  77:Src/usart.c   ****   if(uartHandle->Instance==USART2)
  95              		.loc 1 77 0
  96 0000 0268     		ldr	r2, [r0]
ARM GAS  /tmp/ccA36XgO.s 			page 4


  97 0002 204B     		ldr	r3, .L16
  98 0004 9A42     		cmp	r2, r3
  99 0006 00D0     		beq	.L14
 100 0008 7047     		bx	lr
 101              	.L14:
  74:Src/usart.c   **** 
 102              		.loc 1 74 0
 103 000a 70B5     		push	{r4, r5, r6, lr}
 104              	.LCFI1:
 105              		.cfi_def_cfa_offset 16
 106              		.cfi_offset 4, -16
 107              		.cfi_offset 5, -12
 108              		.cfi_offset 6, -8
 109              		.cfi_offset 14, -4
 110 000c 86B0     		sub	sp, sp, #24
 111              	.LCFI2:
 112              		.cfi_def_cfa_offset 40
 113 000e 0446     		mov	r4, r0
 114              	.LBB2:
  78:Src/usart.c   ****   {
  79:Src/usart.c   ****   /* USER CODE BEGIN USART2_MspInit 0 */
  80:Src/usart.c   **** 
  81:Src/usart.c   ****   /* USER CODE END USART2_MspInit 0 */
  82:Src/usart.c   ****     /* USART2 clock enable */
  83:Src/usart.c   ****     __HAL_RCC_USART2_CLK_ENABLE();
 115              		.loc 1 83 0
 116 0010 03F5E633 		add	r3, r3, #117760
 117 0014 DA69     		ldr	r2, [r3, #28]
 118 0016 42F40032 		orr	r2, r2, #131072
 119 001a DA61     		str	r2, [r3, #28]
 120 001c DB69     		ldr	r3, [r3, #28]
 121 001e 03F40033 		and	r3, r3, #131072
 122 0022 0193     		str	r3, [sp, #4]
 123 0024 019B     		ldr	r3, [sp, #4]
 124              	.LBE2:
  84:Src/usart.c   ****   
  85:Src/usart.c   ****     /**USART2 GPIO Configuration    
  86:Src/usart.c   ****     PA2     ------> USART2_TX
  87:Src/usart.c   ****     PA3     ------> USART2_RX 
  88:Src/usart.c   ****     */
  89:Src/usart.c   ****     GPIO_InitStruct.Pin = GPIO_PIN_2;
 125              		.loc 1 89 0
 126 0026 0423     		movs	r3, #4
 127 0028 0293     		str	r3, [sp, #8]
  90:Src/usart.c   ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 128              		.loc 1 90 0
 129 002a 0223     		movs	r3, #2
 130 002c 0393     		str	r3, [sp, #12]
  91:Src/usart.c   ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 131              		.loc 1 91 0
 132 002e 0323     		movs	r3, #3
 133 0030 0593     		str	r3, [sp, #20]
  92:Src/usart.c   ****     HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 134              		.loc 1 92 0
 135 0032 154E     		ldr	r6, .L16+4
 136 0034 02A9     		add	r1, sp, #8
 137 0036 3046     		mov	r0, r6
ARM GAS  /tmp/ccA36XgO.s 			page 5


 138              	.LVL3:
 139 0038 FFF7FEFF 		bl	HAL_GPIO_Init
 140              	.LVL4:
  93:Src/usart.c   **** 
  94:Src/usart.c   ****     GPIO_InitStruct.Pin = GPIO_PIN_3;
 141              		.loc 1 94 0
 142 003c 0823     		movs	r3, #8
 143 003e 0293     		str	r3, [sp, #8]
  95:Src/usart.c   ****     GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 144              		.loc 1 95 0
 145 0040 0025     		movs	r5, #0
 146 0042 0395     		str	r5, [sp, #12]
  96:Src/usart.c   ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 147              		.loc 1 96 0
 148 0044 0495     		str	r5, [sp, #16]
  97:Src/usart.c   ****     HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 149              		.loc 1 97 0
 150 0046 0DEB0301 		add	r1, sp, r3
 151 004a 3046     		mov	r0, r6
 152 004c FFF7FEFF 		bl	HAL_GPIO_Init
 153              	.LVL5:
  98:Src/usart.c   **** 
  99:Src/usart.c   ****     /* USART2 DMA Init */
 100:Src/usart.c   ****     /* USART2_TX Init */
 101:Src/usart.c   ****     hdma_usart2_tx.Instance = DMA1_Channel7;
 154              		.loc 1 101 0
 155 0050 0E48     		ldr	r0, .L16+8
 156 0052 0F4B     		ldr	r3, .L16+12
 157 0054 0360     		str	r3, [r0]
 102:Src/usart.c   ****     hdma_usart2_tx.Init.Direction = DMA_MEMORY_TO_PERIPH;
 158              		.loc 1 102 0
 159 0056 1023     		movs	r3, #16
 160 0058 4360     		str	r3, [r0, #4]
 103:Src/usart.c   ****     hdma_usart2_tx.Init.PeriphInc = DMA_PINC_DISABLE;
 161              		.loc 1 103 0
 162 005a 8560     		str	r5, [r0, #8]
 104:Src/usart.c   ****     hdma_usart2_tx.Init.MemInc = DMA_MINC_ENABLE;
 163              		.loc 1 104 0
 164 005c 8023     		movs	r3, #128
 165 005e C360     		str	r3, [r0, #12]
 105:Src/usart.c   ****     hdma_usart2_tx.Init.PeriphDataAlignment = DMA_PDATAALIGN_BYTE;
 166              		.loc 1 105 0
 167 0060 0561     		str	r5, [r0, #16]
 106:Src/usart.c   ****     hdma_usart2_tx.Init.MemDataAlignment = DMA_MDATAALIGN_BYTE;
 168              		.loc 1 106 0
 169 0062 4561     		str	r5, [r0, #20]
 107:Src/usart.c   ****     hdma_usart2_tx.Init.Mode = DMA_NORMAL;
 170              		.loc 1 107 0
 171 0064 8561     		str	r5, [r0, #24]
 108:Src/usart.c   ****     hdma_usart2_tx.Init.Priority = DMA_PRIORITY_LOW;
 172              		.loc 1 108 0
 173 0066 C561     		str	r5, [r0, #28]
 109:Src/usart.c   ****     if (HAL_DMA_Init(&hdma_usart2_tx) != HAL_OK)
 174              		.loc 1 109 0
 175 0068 FFF7FEFF 		bl	HAL_DMA_Init
 176              	.LVL6:
 177 006c 20B9     		cbnz	r0, .L15
ARM GAS  /tmp/ccA36XgO.s 			page 6


 178              	.L9:
 110:Src/usart.c   ****     {
 111:Src/usart.c   ****       _Error_Handler(__FILE__, __LINE__);
 112:Src/usart.c   ****     }
 113:Src/usart.c   **** 
 114:Src/usart.c   ****     __HAL_LINKDMA(uartHandle,hdmatx,hdma_usart2_tx);
 179              		.loc 1 114 0
 180 006e 074B     		ldr	r3, .L16+8
 181 0070 2363     		str	r3, [r4, #48]
 182 0072 5C62     		str	r4, [r3, #36]
 115:Src/usart.c   **** 
 116:Src/usart.c   ****   /* USER CODE BEGIN USART2_MspInit 1 */
 117:Src/usart.c   **** 
 118:Src/usart.c   ****   /* USER CODE END USART2_MspInit 1 */
 119:Src/usart.c   ****   }
 120:Src/usart.c   **** }
 183              		.loc 1 120 0
 184 0074 06B0     		add	sp, sp, #24
 185              	.LCFI3:
 186              		.cfi_remember_state
 187              		.cfi_def_cfa_offset 16
 188              		@ sp needed
 189 0076 70BD     		pop	{r4, r5, r6, pc}
 190              	.LVL7:
 191              	.L15:
 192              	.LCFI4:
 193              		.cfi_restore_state
 111:Src/usart.c   ****     }
 194              		.loc 1 111 0
 195 0078 6F21     		movs	r1, #111
 196 007a 0648     		ldr	r0, .L16+16
 197 007c FFF7FEFF 		bl	_Error_Handler
 198              	.LVL8:
 199 0080 F5E7     		b	.L9
 200              	.L17:
 201 0082 00BF     		.align	2
 202              	.L16:
 203 0084 00440040 		.word	1073759232
 204 0088 00080140 		.word	1073809408
 205 008c 00000000 		.word	hdma_usart2_tx
 206 0090 80000240 		.word	1073873024
 207 0094 00000000 		.word	.LC0
 208              		.cfi_endproc
 209              	.LFE67:
 211              		.section	.text.HAL_UART_MspDeInit,"ax",%progbits
 212              		.align	1
 213              		.global	HAL_UART_MspDeInit
 214              		.syntax unified
 215              		.thumb
 216              		.thumb_func
 217              		.fpu softvfp
 219              	HAL_UART_MspDeInit:
 220              	.LFB68:
 121:Src/usart.c   **** 
 122:Src/usart.c   **** void HAL_UART_MspDeInit(UART_HandleTypeDef* uartHandle)
 123:Src/usart.c   **** {
 221              		.loc 1 123 0
ARM GAS  /tmp/ccA36XgO.s 			page 7


 222              		.cfi_startproc
 223              		@ args = 0, pretend = 0, frame = 0
 224              		@ frame_needed = 0, uses_anonymous_args = 0
 225              	.LVL9:
 124:Src/usart.c   **** 
 125:Src/usart.c   ****   if(uartHandle->Instance==USART2)
 226              		.loc 1 125 0
 227 0000 0268     		ldr	r2, [r0]
 228 0002 094B     		ldr	r3, .L25
 229 0004 9A42     		cmp	r2, r3
 230 0006 00D0     		beq	.L24
 231 0008 7047     		bx	lr
 232              	.L24:
 123:Src/usart.c   **** 
 233              		.loc 1 123 0
 234 000a 10B5     		push	{r4, lr}
 235              	.LCFI5:
 236              		.cfi_def_cfa_offset 8
 237              		.cfi_offset 4, -8
 238              		.cfi_offset 14, -4
 239 000c 0446     		mov	r4, r0
 126:Src/usart.c   ****   {
 127:Src/usart.c   ****   /* USER CODE BEGIN USART2_MspDeInit 0 */
 128:Src/usart.c   **** 
 129:Src/usart.c   ****   /* USER CODE END USART2_MspDeInit 0 */
 130:Src/usart.c   ****     /* Peripheral clock disable */
 131:Src/usart.c   ****     __HAL_RCC_USART2_CLK_DISABLE();
 240              		.loc 1 131 0
 241 000e 074A     		ldr	r2, .L25+4
 242 0010 D369     		ldr	r3, [r2, #28]
 243 0012 23F40033 		bic	r3, r3, #131072
 244 0016 D361     		str	r3, [r2, #28]
 132:Src/usart.c   ****   
 133:Src/usart.c   ****     /**USART2 GPIO Configuration    
 134:Src/usart.c   ****     PA2     ------> USART2_TX
 135:Src/usart.c   ****     PA3     ------> USART2_RX 
 136:Src/usart.c   ****     */
 137:Src/usart.c   ****     HAL_GPIO_DeInit(GPIOA, GPIO_PIN_2|GPIO_PIN_3);
 245              		.loc 1 137 0
 246 0018 0C21     		movs	r1, #12
 247 001a 0548     		ldr	r0, .L25+8
 248              	.LVL10:
 249 001c FFF7FEFF 		bl	HAL_GPIO_DeInit
 250              	.LVL11:
 138:Src/usart.c   **** 
 139:Src/usart.c   ****     /* USART2 DMA DeInit */
 140:Src/usart.c   ****     HAL_DMA_DeInit(uartHandle->hdmatx);
 251              		.loc 1 140 0
 252 0020 206B     		ldr	r0, [r4, #48]
 253 0022 FFF7FEFF 		bl	HAL_DMA_DeInit
 254              	.LVL12:
 141:Src/usart.c   ****   /* USER CODE BEGIN USART2_MspDeInit 1 */
 142:Src/usart.c   **** 
 143:Src/usart.c   ****   /* USER CODE END USART2_MspDeInit 1 */
 144:Src/usart.c   ****   }
 145:Src/usart.c   **** } 
 255              		.loc 1 145 0
ARM GAS  /tmp/ccA36XgO.s 			page 8


 256 0026 10BD     		pop	{r4, pc}
 257              	.LVL13:
 258              	.L26:
 259              		.align	2
 260              	.L25:
 261 0028 00440040 		.word	1073759232
 262 002c 00100240 		.word	1073876992
 263 0030 00080140 		.word	1073809408
 264              		.cfi_endproc
 265              	.LFE68:
 267              		.comm	hdma_usart2_tx,68,4
 268              		.comm	huart2,64,4
 269              		.section	.rodata.MX_USART2_UART_Init.str1.4,"aMS",%progbits,1
 270              		.align	2
 271              	.LC0:
 272 0000 5372632F 		.ascii	"Src/usart.c\000"
 272      75736172 
 272      742E6300 
 273              		.text
 274              	.Letext0:
 275              		.file 2 "/home/logic/STM32Toolchain/gcc-arm/arm-none-eabi/include/machine/_default_types.h"
 276              		.file 3 "/home/logic/STM32Toolchain/gcc-arm/arm-none-eabi/include/sys/_stdint.h"
 277              		.file 4 "Drivers/CMSIS/Include/core_cm3.h"
 278              		.file 5 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/system_stm32f1xx.h"
 279              		.file 6 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f103xb.h"
 280              		.file 7 "/home/logic/STM32Toolchain/gcc-arm/arm-none-eabi/include/sys/lock.h"
 281              		.file 8 "/home/logic/STM32Toolchain/gcc-arm/arm-none-eabi/include/sys/_types.h"
 282              		.file 9 "/home/logic/STM32Toolchain/gcc-arm/lib/gcc/arm-none-eabi/7.3.1/include/stddef.h"
 283              		.file 10 "/home/logic/STM32Toolchain/gcc-arm/arm-none-eabi/include/sys/reent.h"
 284              		.file 11 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_def.h"
 285              		.file 12 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_gpio.h"
 286              		.file 13 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_dma.h"
 287              		.file 14 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_uart.h"
 288              		.file 15 "Inc/usart.h"
 289              		.file 16 "Inc/dma.h"
ARM GAS  /tmp/ccA36XgO.s 			page 9


DEFINED SYMBOLS
                            *ABS*:0000000000000000 usart.c
     /tmp/ccA36XgO.s:16     .text.MX_USART2_UART_Init:0000000000000000 $t
     /tmp/ccA36XgO.s:23     .text.MX_USART2_UART_Init:0000000000000000 MX_USART2_UART_Init
     /tmp/ccA36XgO.s:74     .text.MX_USART2_UART_Init:0000000000000030 $d
                            *COM*:0000000000000040 huart2
     /tmp/ccA36XgO.s:81     .text.HAL_UART_MspInit:0000000000000000 $t
     /tmp/ccA36XgO.s:88     .text.HAL_UART_MspInit:0000000000000000 HAL_UART_MspInit
     /tmp/ccA36XgO.s:203    .text.HAL_UART_MspInit:0000000000000084 $d
                            *COM*:0000000000000044 hdma_usart2_tx
     /tmp/ccA36XgO.s:212    .text.HAL_UART_MspDeInit:0000000000000000 $t
     /tmp/ccA36XgO.s:219    .text.HAL_UART_MspDeInit:0000000000000000 HAL_UART_MspDeInit
     /tmp/ccA36XgO.s:261    .text.HAL_UART_MspDeInit:0000000000000028 $d
     /tmp/ccA36XgO.s:270    .rodata.MX_USART2_UART_Init.str1.4:0000000000000000 $d

UNDEFINED SYMBOLS
HAL_UART_Init
_Error_Handler
HAL_GPIO_Init
HAL_DMA_Init
HAL_GPIO_DeInit
HAL_DMA_DeInit
