ARM GAS  /tmp/ccFvwKFW.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"usart.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.MX_USART2_UART_Init,"ax",%progbits
  18              		.align	1
  19              		.global	MX_USART2_UART_Init
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv4-sp-d16
  25              	MX_USART2_UART_Init:
  26              	.LFB126:
  27              		.file 1 "Src/usart.c"
   1:Src/usart.c   **** /**
   2:Src/usart.c   ****   ******************************************************************************
   3:Src/usart.c   ****   * File Name          : USART.c
   4:Src/usart.c   ****   * Description        : This file provides code for the configuration
   5:Src/usart.c   ****   *                      of the USART instances.
   6:Src/usart.c   ****   ******************************************************************************
   7:Src/usart.c   ****   ** This notice applies to any and all portions of this file
   8:Src/usart.c   ****   * that are not between comment pairs USER CODE BEGIN and
   9:Src/usart.c   ****   * USER CODE END. Other portions of this file, whether 
  10:Src/usart.c   ****   * inserted by the user or by software development tools
  11:Src/usart.c   ****   * are owned by their respective copyright owners.
  12:Src/usart.c   ****   *
  13:Src/usart.c   ****   * COPYRIGHT(c) 2018 STMicroelectronics
  14:Src/usart.c   ****   *
  15:Src/usart.c   ****   * Redistribution and use in source and binary forms, with or without modification,
  16:Src/usart.c   ****   * are permitted provided that the following conditions are met:
  17:Src/usart.c   ****   *   1. Redistributions of source code must retain the above copyright notice,
  18:Src/usart.c   ****   *      this list of conditions and the following disclaimer.
  19:Src/usart.c   ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
  20:Src/usart.c   ****   *      this list of conditions and the following disclaimer in the documentation
  21:Src/usart.c   ****   *      and/or other materials provided with the distribution.
  22:Src/usart.c   ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
  23:Src/usart.c   ****   *      may be used to endorse or promote products derived from this software
  24:Src/usart.c   ****   *      without specific prior written permission.
  25:Src/usart.c   ****   *
  26:Src/usart.c   ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  27:Src/usart.c   ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  28:Src/usart.c   ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  29:Src/usart.c   ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
  30:Src/usart.c   ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  31:Src/usart.c   ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
ARM GAS  /tmp/ccFvwKFW.s 			page 2


  32:Src/usart.c   ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  33:Src/usart.c   ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
  34:Src/usart.c   ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
  35:Src/usart.c   ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  36:Src/usart.c   ****   *
  37:Src/usart.c   ****   ******************************************************************************
  38:Src/usart.c   ****   */
  39:Src/usart.c   **** 
  40:Src/usart.c   **** /* Includes ------------------------------------------------------------------*/
  41:Src/usart.c   **** #include "usart.h"
  42:Src/usart.c   **** 
  43:Src/usart.c   **** #include "gpio.h"
  44:Src/usart.c   **** 
  45:Src/usart.c   **** /* USER CODE BEGIN 0 */
  46:Src/usart.c   **** 
  47:Src/usart.c   **** /* USER CODE END 0 */
  48:Src/usart.c   **** 
  49:Src/usart.c   **** UART_HandleTypeDef huart2;
  50:Src/usart.c   **** 
  51:Src/usart.c   **** /* USART2 init function */
  52:Src/usart.c   **** 
  53:Src/usart.c   **** void MX_USART2_UART_Init(void)
  54:Src/usart.c   **** {
  28              		.loc 1 54 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32 0000 08B5     		push	{r3, lr}
  33              	.LCFI0:
  34              		.cfi_def_cfa_offset 8
  35              		.cfi_offset 3, -8
  36              		.cfi_offset 14, -4
  55:Src/usart.c   **** 
  56:Src/usart.c   ****   huart2.Instance = USART2;
  37              		.loc 1 56 0
  38 0002 0C48     		ldr	r0, .L5
  39 0004 0C4B     		ldr	r3, .L5+4
  40 0006 0360     		str	r3, [r0]
  57:Src/usart.c   ****   huart2.Init.BaudRate = 38400;
  41              		.loc 1 57 0
  42 0008 4FF41643 		mov	r3, #38400
  43 000c 4360     		str	r3, [r0, #4]
  58:Src/usart.c   ****   huart2.Init.WordLength = UART_WORDLENGTH_8B;
  44              		.loc 1 58 0
  45 000e 0023     		movs	r3, #0
  46 0010 8360     		str	r3, [r0, #8]
  59:Src/usart.c   ****   huart2.Init.StopBits = UART_STOPBITS_1;
  47              		.loc 1 59 0
  48 0012 C360     		str	r3, [r0, #12]
  60:Src/usart.c   ****   huart2.Init.Parity = UART_PARITY_NONE;
  49              		.loc 1 60 0
  50 0014 0361     		str	r3, [r0, #16]
  61:Src/usart.c   ****   huart2.Init.Mode = UART_MODE_TX_RX;
  51              		.loc 1 61 0
  52 0016 0C22     		movs	r2, #12
  53 0018 4261     		str	r2, [r0, #20]
  62:Src/usart.c   ****   huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
ARM GAS  /tmp/ccFvwKFW.s 			page 3


  54              		.loc 1 62 0
  55 001a 8361     		str	r3, [r0, #24]
  63:Src/usart.c   ****   huart2.Init.OverSampling = UART_OVERSAMPLING_16;
  56              		.loc 1 63 0
  57 001c C361     		str	r3, [r0, #28]
  64:Src/usart.c   ****   huart2.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
  58              		.loc 1 64 0
  59 001e 0362     		str	r3, [r0, #32]
  65:Src/usart.c   ****   huart2.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
  60              		.loc 1 65 0
  61 0020 4362     		str	r3, [r0, #36]
  66:Src/usart.c   ****   if (HAL_UART_Init(&huart2) != HAL_OK)
  62              		.loc 1 66 0
  63 0022 FFF7FEFF 		bl	HAL_UART_Init
  64              	.LVL0:
  65 0026 00B9     		cbnz	r0, .L4
  66              	.L1:
  67:Src/usart.c   ****   {
  68:Src/usart.c   ****     _Error_Handler(__FILE__, __LINE__);
  69:Src/usart.c   ****   }
  70:Src/usart.c   **** 
  71:Src/usart.c   **** }
  67              		.loc 1 71 0
  68 0028 08BD     		pop	{r3, pc}
  69              	.L4:
  68:Src/usart.c   ****   }
  70              		.loc 1 68 0
  71 002a 4421     		movs	r1, #68
  72 002c 0348     		ldr	r0, .L5+8
  73 002e FFF7FEFF 		bl	_Error_Handler
  74              	.LVL1:
  75              		.loc 1 71 0
  76 0032 F9E7     		b	.L1
  77              	.L6:
  78              		.align	2
  79              	.L5:
  80 0034 00000000 		.word	huart2
  81 0038 00440040 		.word	1073759232
  82 003c 00000000 		.word	.LC0
  83              		.cfi_endproc
  84              	.LFE126:
  86              		.section	.text.HAL_UART_MspInit,"ax",%progbits
  87              		.align	1
  88              		.global	HAL_UART_MspInit
  89              		.syntax unified
  90              		.thumb
  91              		.thumb_func
  92              		.fpu fpv4-sp-d16
  94              	HAL_UART_MspInit:
  95              	.LFB127:
  72:Src/usart.c   **** 
  73:Src/usart.c   **** void HAL_UART_MspInit(UART_HandleTypeDef* uartHandle)
  74:Src/usart.c   **** {
  96              		.loc 1 74 0
  97              		.cfi_startproc
  98              		@ args = 0, pretend = 0, frame = 24
  99              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  /tmp/ccFvwKFW.s 			page 4


 100              	.LVL2:
  75:Src/usart.c   **** 
  76:Src/usart.c   ****   GPIO_InitTypeDef GPIO_InitStruct;
  77:Src/usart.c   ****   if(uartHandle->Instance==USART2)
 101              		.loc 1 77 0
 102 0000 0268     		ldr	r2, [r0]
 103 0002 114B     		ldr	r3, .L14
 104 0004 9A42     		cmp	r2, r3
 105 0006 00D0     		beq	.L13
 106 0008 7047     		bx	lr
 107              	.L13:
  74:Src/usart.c   **** 
 108              		.loc 1 74 0
 109 000a 00B5     		push	{lr}
 110              	.LCFI1:
 111              		.cfi_def_cfa_offset 4
 112              		.cfi_offset 14, -4
 113 000c 87B0     		sub	sp, sp, #28
 114              	.LCFI2:
 115              		.cfi_def_cfa_offset 32
 116              	.LBB2:
  78:Src/usart.c   ****   {
  79:Src/usart.c   ****   /* USER CODE BEGIN USART2_MspInit 0 */
  80:Src/usart.c   **** 
  81:Src/usart.c   ****   /* USER CODE END USART2_MspInit 0 */
  82:Src/usart.c   ****     /* USART2 clock enable */
  83:Src/usart.c   ****     __HAL_RCC_USART2_CLK_ENABLE();
 117              		.loc 1 83 0
 118 000e 03F5E633 		add	r3, r3, #117760
 119 0012 DA69     		ldr	r2, [r3, #28]
 120 0014 42F40032 		orr	r2, r2, #131072
 121 0018 DA61     		str	r2, [r3, #28]
 122 001a DB69     		ldr	r3, [r3, #28]
 123 001c 03F40033 		and	r3, r3, #131072
 124 0020 0093     		str	r3, [sp]
 125 0022 009B     		ldr	r3, [sp]
 126              	.LBE2:
  84:Src/usart.c   ****   
  85:Src/usart.c   ****     /**USART2 GPIO Configuration    
  86:Src/usart.c   ****     PA2     ------> USART2_TX
  87:Src/usart.c   ****     PA3     ------> USART2_RX 
  88:Src/usart.c   ****     */
  89:Src/usart.c   ****     GPIO_InitStruct.Pin = USART_TX_Pin|USART_RX_Pin;
 127              		.loc 1 89 0
 128 0024 0C23     		movs	r3, #12
 129 0026 0193     		str	r3, [sp, #4]
  90:Src/usart.c   ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 130              		.loc 1 90 0
 131 0028 0223     		movs	r3, #2
 132 002a 0293     		str	r3, [sp, #8]
  91:Src/usart.c   ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 133              		.loc 1 91 0
 134 002c 0023     		movs	r3, #0
 135 002e 0393     		str	r3, [sp, #12]
  92:Src/usart.c   ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 136              		.loc 1 92 0
 137 0030 0493     		str	r3, [sp, #16]
ARM GAS  /tmp/ccFvwKFW.s 			page 5


  93:Src/usart.c   ****     GPIO_InitStruct.Alternate = GPIO_AF7_USART2;
 138              		.loc 1 93 0
 139 0032 0723     		movs	r3, #7
 140 0034 0593     		str	r3, [sp, #20]
  94:Src/usart.c   ****     HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 141              		.loc 1 94 0
 142 0036 01A9     		add	r1, sp, #4
 143 0038 4FF09040 		mov	r0, #1207959552
 144              	.LVL3:
 145 003c FFF7FEFF 		bl	HAL_GPIO_Init
 146              	.LVL4:
  95:Src/usart.c   **** 
  96:Src/usart.c   ****   /* USER CODE BEGIN USART2_MspInit 1 */
  97:Src/usart.c   **** 
  98:Src/usart.c   ****   /* USER CODE END USART2_MspInit 1 */
  99:Src/usart.c   ****   }
 100:Src/usart.c   **** }
 147              		.loc 1 100 0
 148 0040 07B0     		add	sp, sp, #28
 149              	.LCFI3:
 150              		.cfi_def_cfa_offset 4
 151              		@ sp needed
 152 0042 5DF804FB 		ldr	pc, [sp], #4
 153              	.L15:
 154 0046 00BF     		.align	2
 155              	.L14:
 156 0048 00440040 		.word	1073759232
 157              		.cfi_endproc
 158              	.LFE127:
 160              		.section	.text.HAL_UART_MspDeInit,"ax",%progbits
 161              		.align	1
 162              		.global	HAL_UART_MspDeInit
 163              		.syntax unified
 164              		.thumb
 165              		.thumb_func
 166              		.fpu fpv4-sp-d16
 168              	HAL_UART_MspDeInit:
 169              	.LFB128:
 101:Src/usart.c   **** 
 102:Src/usart.c   **** void HAL_UART_MspDeInit(UART_HandleTypeDef* uartHandle)
 103:Src/usart.c   **** {
 170              		.loc 1 103 0
 171              		.cfi_startproc
 172              		@ args = 0, pretend = 0, frame = 0
 173              		@ frame_needed = 0, uses_anonymous_args = 0
 174              	.LVL5:
 175 0000 08B5     		push	{r3, lr}
 176              	.LCFI4:
 177              		.cfi_def_cfa_offset 8
 178              		.cfi_offset 3, -8
 179              		.cfi_offset 14, -4
 104:Src/usart.c   **** 
 105:Src/usart.c   ****   if(uartHandle->Instance==USART2)
 180              		.loc 1 105 0
 181 0002 0268     		ldr	r2, [r0]
 182 0004 074B     		ldr	r3, .L20
 183 0006 9A42     		cmp	r2, r3
ARM GAS  /tmp/ccFvwKFW.s 			page 6


 184 0008 00D0     		beq	.L19
 185              	.LVL6:
 186              	.L16:
 106:Src/usart.c   ****   {
 107:Src/usart.c   ****   /* USER CODE BEGIN USART2_MspDeInit 0 */
 108:Src/usart.c   **** 
 109:Src/usart.c   ****   /* USER CODE END USART2_MspDeInit 0 */
 110:Src/usart.c   ****     /* Peripheral clock disable */
 111:Src/usart.c   ****     __HAL_RCC_USART2_CLK_DISABLE();
 112:Src/usart.c   ****   
 113:Src/usart.c   ****     /**USART2 GPIO Configuration    
 114:Src/usart.c   ****     PA2     ------> USART2_TX
 115:Src/usart.c   ****     PA3     ------> USART2_RX 
 116:Src/usart.c   ****     */
 117:Src/usart.c   ****     HAL_GPIO_DeInit(GPIOA, USART_TX_Pin|USART_RX_Pin);
 118:Src/usart.c   **** 
 119:Src/usart.c   ****   /* USER CODE BEGIN USART2_MspDeInit 1 */
 120:Src/usart.c   **** 
 121:Src/usart.c   ****   /* USER CODE END USART2_MspDeInit 1 */
 122:Src/usart.c   ****   }
 123:Src/usart.c   **** } 
 187              		.loc 1 123 0
 188 000a 08BD     		pop	{r3, pc}
 189              	.LVL7:
 190              	.L19:
 111:Src/usart.c   ****   
 191              		.loc 1 111 0
 192 000c 064A     		ldr	r2, .L20+4
 193 000e D369     		ldr	r3, [r2, #28]
 194 0010 23F40033 		bic	r3, r3, #131072
 195 0014 D361     		str	r3, [r2, #28]
 117:Src/usart.c   **** 
 196              		.loc 1 117 0
 197 0016 0C21     		movs	r1, #12
 198 0018 4FF09040 		mov	r0, #1207959552
 199              	.LVL8:
 200 001c FFF7FEFF 		bl	HAL_GPIO_DeInit
 201              	.LVL9:
 202              		.loc 1 123 0
 203 0020 F3E7     		b	.L16
 204              	.L21:
 205 0022 00BF     		.align	2
 206              	.L20:
 207 0024 00440040 		.word	1073759232
 208 0028 00100240 		.word	1073876992
 209              		.cfi_endproc
 210              	.LFE128:
 212              		.comm	huart2,112,4
 213              		.section	.rodata.MX_USART2_UART_Init.str1.4,"aMS",%progbits,1
 214              		.align	2
 215              	.LC0:
 216 0000 5372632F 		.ascii	"Src/usart.c\000"
 216      75736172 
 216      742E6300 
 217              		.text
 218              	.Letext0:
 219              		.file 2 "/home/logic/STM32Toolchain/gcc-arm/arm-none-eabi/include/machine/_default_types.h"
ARM GAS  /tmp/ccFvwKFW.s 			page 7


 220              		.file 3 "/home/logic/STM32Toolchain/gcc-arm/arm-none-eabi/include/sys/_stdint.h"
 221              		.file 4 "Drivers/CMSIS/Include/core_cm4.h"
 222              		.file 5 "Drivers/CMSIS/Device/ST/STM32F3xx/Include/system_stm32f3xx.h"
 223              		.file 6 "Drivers/CMSIS/Device/ST/STM32F3xx/Include/stm32f303xe.h"
 224              		.file 7 "/home/logic/STM32Toolchain/gcc-arm/arm-none-eabi/include/sys/lock.h"
 225              		.file 8 "/home/logic/STM32Toolchain/gcc-arm/arm-none-eabi/include/sys/_types.h"
 226              		.file 9 "/home/logic/STM32Toolchain/gcc-arm/lib/gcc/arm-none-eabi/7.3.1/include/stddef.h"
 227              		.file 10 "/home/logic/STM32Toolchain/gcc-arm/arm-none-eabi/include/sys/reent.h"
 228              		.file 11 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_def.h"
 229              		.file 12 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_gpio.h"
 230              		.file 13 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_dma.h"
 231              		.file 14 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_uart.h"
 232              		.file 15 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal.h"
 233              		.file 16 "Inc/usart.h"
ARM GAS  /tmp/ccFvwKFW.s 			page 8


DEFINED SYMBOLS
                            *ABS*:0000000000000000 usart.c
     /tmp/ccFvwKFW.s:18     .text.MX_USART2_UART_Init:0000000000000000 $t
     /tmp/ccFvwKFW.s:25     .text.MX_USART2_UART_Init:0000000000000000 MX_USART2_UART_Init
     /tmp/ccFvwKFW.s:80     .text.MX_USART2_UART_Init:0000000000000034 $d
                            *COM*:0000000000000070 huart2
     /tmp/ccFvwKFW.s:87     .text.HAL_UART_MspInit:0000000000000000 $t
     /tmp/ccFvwKFW.s:94     .text.HAL_UART_MspInit:0000000000000000 HAL_UART_MspInit
     /tmp/ccFvwKFW.s:156    .text.HAL_UART_MspInit:0000000000000048 $d
     /tmp/ccFvwKFW.s:161    .text.HAL_UART_MspDeInit:0000000000000000 $t
     /tmp/ccFvwKFW.s:168    .text.HAL_UART_MspDeInit:0000000000000000 HAL_UART_MspDeInit
     /tmp/ccFvwKFW.s:207    .text.HAL_UART_MspDeInit:0000000000000024 $d
     /tmp/ccFvwKFW.s:214    .rodata.MX_USART2_UART_Init.str1.4:0000000000000000 $d

UNDEFINED SYMBOLS
HAL_UART_Init
_Error_Handler
HAL_GPIO_Init
HAL_GPIO_DeInit
