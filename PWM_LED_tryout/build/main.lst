ARM GAS  /tmp/ccQGmQG8.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"main.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text._Error_Handler,"ax",%progbits
  18              		.align	1
  19              		.global	_Error_Handler
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv4-sp-d16
  25              	_Error_Handler:
  26              	.LFB128:
  27              		.file 1 "Src/main.c"
   1:Src/main.c    **** 
   2:Src/main.c    **** /**
   3:Src/main.c    ****   ******************************************************************************
   4:Src/main.c    ****   * @file           : main.c
   5:Src/main.c    ****   * @brief          : Main program body
   6:Src/main.c    ****   ******************************************************************************
   7:Src/main.c    ****   ** This notice applies to any and all portions of this file
   8:Src/main.c    ****   * that are not between comment pairs USER CODE BEGIN and
   9:Src/main.c    ****   * USER CODE END. Other portions of this file, whether
  10:Src/main.c    ****   * inserted by the user or by software development tools
  11:Src/main.c    ****   * are owned by their respective copyright owners.
  12:Src/main.c    ****   *
  13:Src/main.c    ****   * COPYRIGHT(c) 2018 STMicroelectronics
  14:Src/main.c    ****   *
  15:Src/main.c    ****   * Redistribution and use in source and binary forms, with or without modification,
  16:Src/main.c    ****   * are permitted provided that the following conditions are met:
  17:Src/main.c    ****   *   1. Redistributions of source code must retain the above copyright notice,
  18:Src/main.c    ****   *      this list of conditions and the following disclaimer.
  19:Src/main.c    ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
  20:Src/main.c    ****   *      this list of conditions and the following disclaimer in the documentation
  21:Src/main.c    ****   *      and/or other materials provided with the distribution.
  22:Src/main.c    ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
  23:Src/main.c    ****   *      may be used to endorse or promote products derived from this software
  24:Src/main.c    ****   *      without specific prior written permission.
  25:Src/main.c    ****   *
  26:Src/main.c    ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  27:Src/main.c    ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  28:Src/main.c    ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  29:Src/main.c    ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
  30:Src/main.c    ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  31:Src/main.c    ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
ARM GAS  /tmp/ccQGmQG8.s 			page 2


  32:Src/main.c    ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  33:Src/main.c    ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
  34:Src/main.c    ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
  35:Src/main.c    ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  36:Src/main.c    ****   *
  37:Src/main.c    ****   ******************************************************************************
  38:Src/main.c    ****   */
  39:Src/main.c    **** /* Includes ------------------------------------------------------------------*/
  40:Src/main.c    **** #include "main.h"
  41:Src/main.c    **** #include "stm32f3xx_hal.h"
  42:Src/main.c    **** #include "usart.h"
  43:Src/main.c    **** #include "gpio.h"
  44:Src/main.c    **** 
  45:Src/main.c    **** /* USER CODE BEGIN Includes */
  46:Src/main.c    **** #include "logic_main.h"
  47:Src/main.c    **** /* USER CODE END Includes */
  48:Src/main.c    **** 
  49:Src/main.c    **** /* Private variables ---------------------------------------------------------*/
  50:Src/main.c    **** 
  51:Src/main.c    **** /* USER CODE BEGIN PV */
  52:Src/main.c    **** /* Private variables ---------------------------------------------------------*/
  53:Src/main.c    **** 
  54:Src/main.c    **** /* USER CODE END PV */
  55:Src/main.c    **** 
  56:Src/main.c    **** /* Private function prototypes -----------------------------------------------*/
  57:Src/main.c    **** void SystemClock_Config(void);
  58:Src/main.c    **** 
  59:Src/main.c    **** /* USER CODE BEGIN PFP */
  60:Src/main.c    **** /* Private function prototypes -----------------------------------------------*/
  61:Src/main.c    **** 
  62:Src/main.c    **** /* USER CODE END PFP */
  63:Src/main.c    **** 
  64:Src/main.c    **** /* USER CODE BEGIN 0 */
  65:Src/main.c    **** 
  66:Src/main.c    **** /* USER CODE END 0 */
  67:Src/main.c    **** 
  68:Src/main.c    **** /**
  69:Src/main.c    ****   * @brief  The application entry point.
  70:Src/main.c    ****   *
  71:Src/main.c    ****   * @retval None
  72:Src/main.c    ****   */
  73:Src/main.c    **** int main(void)
  74:Src/main.c    **** {
  75:Src/main.c    ****   /* USER CODE BEGIN 1 */
  76:Src/main.c    **** 
  77:Src/main.c    ****   /* USER CODE END 1 */
  78:Src/main.c    **** 
  79:Src/main.c    ****   /* MCU Configuration----------------------------------------------------------*/
  80:Src/main.c    **** 
  81:Src/main.c    ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  82:Src/main.c    ****   HAL_Init();
  83:Src/main.c    **** 
  84:Src/main.c    ****   /* USER CODE BEGIN Init */
  85:Src/main.c    **** 
  86:Src/main.c    ****   /* USER CODE END Init */
  87:Src/main.c    **** 
  88:Src/main.c    ****   /* Configure the system clock */
ARM GAS  /tmp/ccQGmQG8.s 			page 3


  89:Src/main.c    ****   SystemClock_Config();
  90:Src/main.c    **** 
  91:Src/main.c    ****   /* USER CODE BEGIN SysInit */
  92:Src/main.c    **** 
  93:Src/main.c    ****   /* USER CODE END SysInit */
  94:Src/main.c    **** 
  95:Src/main.c    ****   /* Initialize all configured peripherals */
  96:Src/main.c    ****   MX_GPIO_Init();
  97:Src/main.c    ****   MX_USART2_UART_Init();
  98:Src/main.c    ****   /* USER CODE BEGIN 2 */
  99:Src/main.c    **** 
 100:Src/main.c    ****   /* USER CODE END 2 */
 101:Src/main.c    **** 
 102:Src/main.c    ****   /* Infinite loop */
 103:Src/main.c    ****   /* USER CODE BEGIN WHILE */
 104:Src/main.c    ****   while (1)
 105:Src/main.c    ****   {
 106:Src/main.c    **** 
 107:Src/main.c    ****   /* USER CODE END WHILE */
 108:Src/main.c    **** 
 109:Src/main.c    ****   /* USER CODE BEGIN 3 */
 110:Src/main.c    ****     logic_main();
 111:Src/main.c    ****   }
 112:Src/main.c    ****   /* USER CODE END 3 */
 113:Src/main.c    **** 
 114:Src/main.c    **** }
 115:Src/main.c    **** 
 116:Src/main.c    **** /**
 117:Src/main.c    ****   * @brief System Clock Configuration
 118:Src/main.c    ****   * @retval None
 119:Src/main.c    ****   */
 120:Src/main.c    **** void SystemClock_Config(void)
 121:Src/main.c    **** {
 122:Src/main.c    **** 
 123:Src/main.c    ****   RCC_OscInitTypeDef RCC_OscInitStruct;
 124:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct;
 125:Src/main.c    ****   RCC_PeriphCLKInitTypeDef PeriphClkInit;
 126:Src/main.c    **** 
 127:Src/main.c    ****     /**Initializes the CPU, AHB and APB busses clocks
 128:Src/main.c    ****     */
 129:Src/main.c    ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 130:Src/main.c    ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 131:Src/main.c    ****   RCC_OscInitStruct.HSICalibrationValue = 16;
 132:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 133:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 134:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL9;
 135:Src/main.c    ****   RCC_OscInitStruct.PLL.PREDIV = RCC_PREDIV_DIV1;
 136:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 137:Src/main.c    ****   {
 138:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 139:Src/main.c    ****   }
 140:Src/main.c    **** 
 141:Src/main.c    ****     /**Initializes the CPU, AHB and APB busses clocks
 142:Src/main.c    ****     */
 143:Src/main.c    ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 144:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 145:Src/main.c    ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
ARM GAS  /tmp/ccQGmQG8.s 			page 4


 146:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 147:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 148:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 149:Src/main.c    **** 
 150:Src/main.c    ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_2) != HAL_OK)
 151:Src/main.c    ****   {
 152:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 153:Src/main.c    ****   }
 154:Src/main.c    **** 
 155:Src/main.c    ****   PeriphClkInit.PeriphClockSelection = RCC_PERIPHCLK_USART2;
 156:Src/main.c    ****   PeriphClkInit.Usart2ClockSelection = RCC_USART2CLKSOURCE_PCLK1;
 157:Src/main.c    ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 158:Src/main.c    ****   {
 159:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 160:Src/main.c    ****   }
 161:Src/main.c    **** 
 162:Src/main.c    ****     /**Configure the Systick interrupt time
 163:Src/main.c    ****     */
 164:Src/main.c    ****   HAL_SYSTICK_Config(HAL_RCC_GetHCLKFreq()/1000);
 165:Src/main.c    **** 
 166:Src/main.c    ****     /**Configure the Systick
 167:Src/main.c    ****     */
 168:Src/main.c    ****   HAL_SYSTICK_CLKSourceConfig(SYSTICK_CLKSOURCE_HCLK);
 169:Src/main.c    **** 
 170:Src/main.c    ****   /* SysTick_IRQn interrupt configuration */
 171:Src/main.c    ****   HAL_NVIC_SetPriority(SysTick_IRQn, 0, 0);
 172:Src/main.c    **** }
 173:Src/main.c    **** 
 174:Src/main.c    **** /* USER CODE BEGIN 4 */
 175:Src/main.c    **** 
 176:Src/main.c    **** /* USER CODE END 4 */
 177:Src/main.c    **** 
 178:Src/main.c    **** /**
 179:Src/main.c    ****   * @brief  This function is executed in case of error occurrence.
 180:Src/main.c    ****   * @param  file: The file name as string.
 181:Src/main.c    ****   * @param  line: The line in file as a number.
 182:Src/main.c    ****   * @retval None
 183:Src/main.c    ****   */
 184:Src/main.c    **** void _Error_Handler(char *file, int line)
 185:Src/main.c    **** {
  28              		.loc 1 185 0
  29              		.cfi_startproc
  30              		@ Volatile: function does not return.
  31              		@ args = 0, pretend = 0, frame = 0
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33              		@ link register save eliminated.
  34              	.LVL0:
  35              	.L2:
  36 0000 FEE7     		b	.L2
  37              		.cfi_endproc
  38              	.LFE128:
  40              		.section	.text.SystemClock_Config,"ax",%progbits
  41              		.align	1
  42              		.global	SystemClock_Config
  43              		.syntax unified
  44              		.thumb
  45              		.thumb_func
ARM GAS  /tmp/ccQGmQG8.s 			page 5


  46              		.fpu fpv4-sp-d16
  48              	SystemClock_Config:
  49              	.LFB127:
 121:Src/main.c    **** 
  50              		.loc 1 121 0
  51              		.cfi_startproc
  52              		@ args = 0, pretend = 0, frame = 152
  53              		@ frame_needed = 0, uses_anonymous_args = 0
 121:Src/main.c    **** 
  54              		.loc 1 121 0
  55 0000 00B5     		push	{lr}
  56              	.LCFI0:
  57              		.cfi_def_cfa_offset 4
  58              		.cfi_offset 14, -4
  59 0002 A7B0     		sub	sp, sp, #156
  60              	.LCFI1:
  61              		.cfi_def_cfa_offset 160
 129:Src/main.c    ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
  62              		.loc 1 129 0
  63 0004 0223     		movs	r3, #2
  64 0006 1C93     		str	r3, [sp, #112]
 130:Src/main.c    ****   RCC_OscInitStruct.HSICalibrationValue = 16;
  65              		.loc 1 130 0
  66 0008 0122     		movs	r2, #1
  67 000a 1F92     		str	r2, [sp, #124]
 131:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
  68              		.loc 1 131 0
  69 000c 1022     		movs	r2, #16
  70 000e 2092     		str	r2, [sp, #128]
 132:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
  71              		.loc 1 132 0
  72 0010 2293     		str	r3, [sp, #136]
 133:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL9;
  73              		.loc 1 133 0
  74 0012 4FF40043 		mov	r3, #32768
  75 0016 2393     		str	r3, [sp, #140]
 134:Src/main.c    ****   RCC_OscInitStruct.PLL.PREDIV = RCC_PREDIV_DIV1;
  76              		.loc 1 134 0
  77 0018 4FF4E013 		mov	r3, #1835008
  78 001c 2493     		str	r3, [sp, #144]
 135:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
  79              		.loc 1 135 0
  80 001e 0023     		movs	r3, #0
  81 0020 2593     		str	r3, [sp, #148]
 136:Src/main.c    ****   {
  82              		.loc 1 136 0
  83 0022 1CA8     		add	r0, sp, #112
  84 0024 FFF7FEFF 		bl	HAL_RCC_OscConfig
  85              	.LVL1:
  86 0028 48BB     		cbnz	r0, .L8
 143:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
  87              		.loc 1 143 0
  88 002a 0F23     		movs	r3, #15
  89 002c 1793     		str	r3, [sp, #92]
 145:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
  90              		.loc 1 145 0
  91 002e 0221     		movs	r1, #2
ARM GAS  /tmp/ccQGmQG8.s 			page 6


  92 0030 1891     		str	r1, [sp, #96]
 146:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
  93              		.loc 1 146 0
  94 0032 0023     		movs	r3, #0
  95 0034 1993     		str	r3, [sp, #100]
 147:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
  96              		.loc 1 147 0
  97 0036 4FF48062 		mov	r2, #1024
  98 003a 1A92     		str	r2, [sp, #104]
 148:Src/main.c    **** 
  99              		.loc 1 148 0
 100 003c 1B93     		str	r3, [sp, #108]
 150:Src/main.c    ****   {
 101              		.loc 1 150 0
 102 003e 17A8     		add	r0, sp, #92
 103 0040 FFF7FEFF 		bl	HAL_RCC_ClockConfig
 104              	.LVL2:
 105 0044 F8B9     		cbnz	r0, .L9
 155:Src/main.c    ****   PeriphClkInit.Usart2ClockSelection = RCC_USART2CLKSOURCE_PCLK1;
 106              		.loc 1 155 0
 107 0046 0223     		movs	r3, #2
 108 0048 0193     		str	r3, [sp, #4]
 156:Src/main.c    ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 109              		.loc 1 156 0
 110 004a 0023     		movs	r3, #0
 111 004c 0493     		str	r3, [sp, #16]
 157:Src/main.c    ****   {
 112              		.loc 1 157 0
 113 004e 01A8     		add	r0, sp, #4
 114 0050 FFF7FEFF 		bl	HAL_RCCEx_PeriphCLKConfig
 115              	.LVL3:
 116 0054 D8B9     		cbnz	r0, .L10
 164:Src/main.c    **** 
 117              		.loc 1 164 0
 118 0056 FFF7FEFF 		bl	HAL_RCC_GetHCLKFreq
 119              	.LVL4:
 120 005a 0F4B     		ldr	r3, .L11
 121 005c A3FB0030 		umull	r3, r0, r3, r0
 122 0060 8009     		lsrs	r0, r0, #6
 123 0062 FFF7FEFF 		bl	HAL_SYSTICK_Config
 124              	.LVL5:
 168:Src/main.c    **** 
 125              		.loc 1 168 0
 126 0066 0420     		movs	r0, #4
 127 0068 FFF7FEFF 		bl	HAL_SYSTICK_CLKSourceConfig
 128              	.LVL6:
 171:Src/main.c    **** }
 129              		.loc 1 171 0
 130 006c 0022     		movs	r2, #0
 131 006e 1146     		mov	r1, r2
 132 0070 4FF0FF30 		mov	r0, #-1
 133 0074 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 134              	.LVL7:
 172:Src/main.c    **** 
 135              		.loc 1 172 0
 136 0078 27B0     		add	sp, sp, #156
 137              	.LCFI2:
ARM GAS  /tmp/ccQGmQG8.s 			page 7


 138              		.cfi_remember_state
 139              		.cfi_def_cfa_offset 4
 140              		@ sp needed
 141 007a 5DF804FB 		ldr	pc, [sp], #4
 142              	.L8:
 143              	.LCFI3:
 144              		.cfi_restore_state
 138:Src/main.c    ****   }
 145              		.loc 1 138 0
 146 007e 8A21     		movs	r1, #138
 147 0080 0648     		ldr	r0, .L11+4
 148 0082 FFF7FEFF 		bl	_Error_Handler
 149              	.LVL8:
 150              	.L9:
 152:Src/main.c    ****   }
 151              		.loc 1 152 0
 152 0086 9821     		movs	r1, #152
 153 0088 0448     		ldr	r0, .L11+4
 154 008a FFF7FEFF 		bl	_Error_Handler
 155              	.LVL9:
 156              	.L10:
 159:Src/main.c    ****   }
 157              		.loc 1 159 0
 158 008e 9F21     		movs	r1, #159
 159 0090 0248     		ldr	r0, .L11+4
 160 0092 FFF7FEFF 		bl	_Error_Handler
 161              	.LVL10:
 162              	.L12:
 163 0096 00BF     		.align	2
 164              	.L11:
 165 0098 D34D6210 		.word	274877907
 166 009c 00000000 		.word	.LC0
 167              		.cfi_endproc
 168              	.LFE127:
 170              		.section	.text.main,"ax",%progbits
 171              		.align	1
 172              		.global	main
 173              		.syntax unified
 174              		.thumb
 175              		.thumb_func
 176              		.fpu fpv4-sp-d16
 178              	main:
 179              	.LFB126:
  74:Src/main.c    ****   /* USER CODE BEGIN 1 */
 180              		.loc 1 74 0
 181              		.cfi_startproc
 182              		@ Volatile: function does not return.
 183              		@ args = 0, pretend = 0, frame = 0
 184              		@ frame_needed = 0, uses_anonymous_args = 0
 185 0000 08B5     		push	{r3, lr}
 186              	.LCFI4:
 187              		.cfi_def_cfa_offset 8
 188              		.cfi_offset 3, -8
 189              		.cfi_offset 14, -4
  82:Src/main.c    **** 
 190              		.loc 1 82 0
 191 0002 FFF7FEFF 		bl	HAL_Init
ARM GAS  /tmp/ccQGmQG8.s 			page 8


 192              	.LVL11:
  89:Src/main.c    **** 
 193              		.loc 1 89 0
 194 0006 FFF7FEFF 		bl	SystemClock_Config
 195              	.LVL12:
  96:Src/main.c    ****   MX_USART2_UART_Init();
 196              		.loc 1 96 0
 197 000a FFF7FEFF 		bl	MX_GPIO_Init
 198              	.LVL13:
  97:Src/main.c    ****   /* USER CODE BEGIN 2 */
 199              		.loc 1 97 0
 200 000e FFF7FEFF 		bl	MX_USART2_UART_Init
 201              	.LVL14:
 202              	.L14:
 110:Src/main.c    ****   }
 203              		.loc 1 110 0 discriminator 1
 204 0012 FFF7FEFF 		bl	logic_main
 205              	.LVL15:
 206 0016 FCE7     		b	.L14
 207              		.cfi_endproc
 208              	.LFE126:
 210              		.section	.text.assert_failed,"ax",%progbits
 211              		.align	1
 212              		.global	assert_failed
 213              		.syntax unified
 214              		.thumb
 215              		.thumb_func
 216              		.fpu fpv4-sp-d16
 218              	assert_failed:
 219              	.LFB129:
 186:Src/main.c    ****   /* USER CODE BEGIN Error_Handler_Debug */
 187:Src/main.c    ****   /* User can add his own implementation to report the HAL error return state */
 188:Src/main.c    ****   while(1)
 189:Src/main.c    ****   {
 190:Src/main.c    ****   }
 191:Src/main.c    ****   /* USER CODE END Error_Handler_Debug */
 192:Src/main.c    **** }
 193:Src/main.c    **** 
 194:Src/main.c    **** #ifdef  USE_FULL_ASSERT
 195:Src/main.c    **** /**
 196:Src/main.c    ****   * @brief  Reports the name of the source file and the source line number
 197:Src/main.c    ****   *         where the assert_param error has occurred.
 198:Src/main.c    ****   * @param  file: pointer to the source file name
 199:Src/main.c    ****   * @param  line: assert_param error line source number
 200:Src/main.c    ****   * @retval None
 201:Src/main.c    ****   */
 202:Src/main.c    **** void assert_failed(uint8_t* file, uint32_t line)
 203:Src/main.c    **** {
 220              		.loc 1 203 0
 221              		.cfi_startproc
 222              		@ args = 0, pretend = 0, frame = 0
 223              		@ frame_needed = 0, uses_anonymous_args = 0
 224              		@ link register save eliminated.
 225              	.LVL16:
 204:Src/main.c    ****   /* USER CODE BEGIN 6 */
 205:Src/main.c    ****   /* User can add his own implementation to report the file name and line number,
 206:Src/main.c    ****      tex: printf("Wrong parameters value: file %s on line %d\r\n", file, line) */
ARM GAS  /tmp/ccQGmQG8.s 			page 9


 207:Src/main.c    ****   /* USER CODE END 6 */
 208:Src/main.c    **** }
 226              		.loc 1 208 0
 227 0000 7047     		bx	lr
 228              		.cfi_endproc
 229              	.LFE129:
 231              		.section	.rodata.SystemClock_Config.str1.4,"aMS",%progbits,1
 232              		.align	2
 233              	.LC0:
 234 0000 5372632F 		.ascii	"Src/main.c\000"
 234      6D61696E 
 234      2E6300
 235              		.text
 236              	.Letext0:
 237              		.file 2 "/home/logic/STM32Toolchain/gcc-arm/arm-none-eabi/include/machine/_default_types.h"
 238              		.file 3 "/home/logic/STM32Toolchain/gcc-arm/arm-none-eabi/include/sys/_stdint.h"
 239              		.file 4 "Drivers/CMSIS/Include/core_cm4.h"
 240              		.file 5 "Drivers/CMSIS/Device/ST/STM32F3xx/Include/system_stm32f3xx.h"
 241              		.file 6 "Drivers/CMSIS/Device/ST/STM32F3xx/Include/stm32f303xe.h"
 242              		.file 7 "/home/logic/STM32Toolchain/gcc-arm/arm-none-eabi/include/sys/lock.h"
 243              		.file 8 "/home/logic/STM32Toolchain/gcc-arm/arm-none-eabi/include/sys/_types.h"
 244              		.file 9 "/home/logic/STM32Toolchain/gcc-arm/lib/gcc/arm-none-eabi/7.3.1/include/stddef.h"
 245              		.file 10 "/home/logic/STM32Toolchain/gcc-arm/arm-none-eabi/include/sys/reent.h"
 246              		.file 11 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_def.h"
 247              		.file 12 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_rcc.h"
 248              		.file 13 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_rcc_ex.h"
 249              		.file 14 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_dma.h"
 250              		.file 15 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_uart.h"
 251              		.file 16 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal.h"
 252              		.file 17 "Inc/usart.h"
 253              		.file 18 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_cortex.h"
 254              		.file 19 "Inc/gpio.h"
 255              		.file 20 "Inc/logic_main.h"
ARM GAS  /tmp/ccQGmQG8.s 			page 10


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
     /tmp/ccQGmQG8.s:18     .text._Error_Handler:0000000000000000 $t
     /tmp/ccQGmQG8.s:25     .text._Error_Handler:0000000000000000 _Error_Handler
     /tmp/ccQGmQG8.s:41     .text.SystemClock_Config:0000000000000000 $t
     /tmp/ccQGmQG8.s:48     .text.SystemClock_Config:0000000000000000 SystemClock_Config
     /tmp/ccQGmQG8.s:165    .text.SystemClock_Config:0000000000000098 $d
     /tmp/ccQGmQG8.s:171    .text.main:0000000000000000 $t
     /tmp/ccQGmQG8.s:178    .text.main:0000000000000000 main
     /tmp/ccQGmQG8.s:211    .text.assert_failed:0000000000000000 $t
     /tmp/ccQGmQG8.s:218    .text.assert_failed:0000000000000000 assert_failed
     /tmp/ccQGmQG8.s:232    .rodata.SystemClock_Config.str1.4:0000000000000000 $d

UNDEFINED SYMBOLS
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_RCCEx_PeriphCLKConfig
HAL_RCC_GetHCLKFreq
HAL_SYSTICK_Config
HAL_SYSTICK_CLKSourceConfig
HAL_NVIC_SetPriority
HAL_Init
MX_GPIO_Init
MX_USART2_UART_Init
logic_main
