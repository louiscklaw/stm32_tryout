ARM GAS  /tmp/ccLt0ZPj.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"main.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text._Error_Handler,"ax",%progbits
  18              		.align	1
  19              		.global	_Error_Handler
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv4-sp-d16
  25              	_Error_Handler:
  26              	.LFB127:
  27              		.file 1 "Core/Src/main.c"
   1:Core/Src/main.c **** 
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****   ******************************************************************************
   4:Core/Src/main.c ****   * @file           : main.c
   5:Core/Src/main.c ****   * @brief          : Main program body
   6:Core/Src/main.c ****   ******************************************************************************
   7:Core/Src/main.c ****   ** This notice applies to any and all portions of this file
   8:Core/Src/main.c ****   * that are not between comment pairs USER CODE BEGIN and
   9:Core/Src/main.c ****   * USER CODE END. Other portions of this file, whether 
  10:Core/Src/main.c ****   * inserted by the user or by software development tools
  11:Core/Src/main.c ****   * are owned by their respective copyright owners.
  12:Core/Src/main.c ****   *
  13:Core/Src/main.c ****   * COPYRIGHT(c) 2018 STMicroelectronics
  14:Core/Src/main.c ****   *
  15:Core/Src/main.c ****   * Redistribution and use in source and binary forms, with or without modification,
  16:Core/Src/main.c ****   * are permitted provided that the following conditions are met:
  17:Core/Src/main.c ****   *   1. Redistributions of source code must retain the above copyright notice,
  18:Core/Src/main.c ****   *      this list of conditions and the following disclaimer.
  19:Core/Src/main.c ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
  20:Core/Src/main.c ****   *      this list of conditions and the following disclaimer in the documentation
  21:Core/Src/main.c ****   *      and/or other materials provided with the distribution.
  22:Core/Src/main.c ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
  23:Core/Src/main.c ****   *      may be used to endorse or promote products derived from this software
  24:Core/Src/main.c ****   *      without specific prior written permission.
  25:Core/Src/main.c ****   *
  26:Core/Src/main.c ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  27:Core/Src/main.c ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  28:Core/Src/main.c ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  29:Core/Src/main.c ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
  30:Core/Src/main.c ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  31:Core/Src/main.c ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
ARM GAS  /tmp/ccLt0ZPj.s 			page 2


  32:Core/Src/main.c ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  33:Core/Src/main.c ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
  34:Core/Src/main.c ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
  35:Core/Src/main.c ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  36:Core/Src/main.c ****   *
  37:Core/Src/main.c ****   ******************************************************************************
  38:Core/Src/main.c ****   */
  39:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  40:Core/Src/main.c **** #include "main.h"
  41:Core/Src/main.c **** #include "stm32f3xx_hal.h"
  42:Core/Src/main.c **** #include "usart.h"
  43:Core/Src/main.c **** #include "gpio.h"
  44:Core/Src/main.c **** 
  45:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  46:Core/Src/main.c **** 
  47:Core/Src/main.c **** /* USER CODE END Includes */
  48:Core/Src/main.c **** 
  49:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  50:Core/Src/main.c **** 
  51:Core/Src/main.c **** /* USER CODE BEGIN PV */
  52:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  53:Core/Src/main.c **** 
  54:Core/Src/main.c **** /* USER CODE END PV */
  55:Core/Src/main.c **** 
  56:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
  57:Core/Src/main.c **** void SystemClock_Config(void);
  58:Core/Src/main.c **** 
  59:Core/Src/main.c **** /* USER CODE BEGIN PFP */
  60:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
  61:Core/Src/main.c **** 
  62:Core/Src/main.c **** /* USER CODE END PFP */
  63:Core/Src/main.c **** 
  64:Core/Src/main.c **** /* USER CODE BEGIN 0 */
  65:Core/Src/main.c **** 
  66:Core/Src/main.c **** /* USER CODE END 0 */
  67:Core/Src/main.c **** 
  68:Core/Src/main.c **** /**
  69:Core/Src/main.c ****   * @brief  The application entry point.
  70:Core/Src/main.c ****   *
  71:Core/Src/main.c ****   * @retval None
  72:Core/Src/main.c ****   */
  73:Core/Src/main.c **** 
  74:Core/Src/main.c **** /**
  75:Core/Src/main.c ****   * @brief System Clock Configuration
  76:Core/Src/main.c ****   * @retval None
  77:Core/Src/main.c ****   */
  78:Core/Src/main.c **** void SystemClock_Config(void)
  79:Core/Src/main.c **** {
  80:Core/Src/main.c **** 
  81:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct;
  82:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct;
  83:Core/Src/main.c ****   RCC_PeriphCLKInitTypeDef PeriphClkInit;
  84:Core/Src/main.c **** 
  85:Core/Src/main.c ****     /**Initializes the CPU, AHB and APB busses clocks 
  86:Core/Src/main.c ****     */
  87:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
  88:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
ARM GAS  /tmp/ccLt0ZPj.s 			page 3


  89:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = 16;
  90:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
  91:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
  92:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL9;
  93:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PREDIV = RCC_PREDIV_DIV1;
  94:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
  95:Core/Src/main.c ****   {
  96:Core/Src/main.c ****     _Error_Handler(__FILE__, __LINE__);
  97:Core/Src/main.c ****   }
  98:Core/Src/main.c **** 
  99:Core/Src/main.c ****     /**Initializes the CPU, AHB and APB busses clocks 
 100:Core/Src/main.c ****     */
 101:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 102:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 103:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 104:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 105:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 106:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 107:Core/Src/main.c **** 
 108:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_2) != HAL_OK)
 109:Core/Src/main.c ****   {
 110:Core/Src/main.c ****     _Error_Handler(__FILE__, __LINE__);
 111:Core/Src/main.c ****   }
 112:Core/Src/main.c **** 
 113:Core/Src/main.c ****   PeriphClkInit.PeriphClockSelection = RCC_PERIPHCLK_USART2;
 114:Core/Src/main.c ****   PeriphClkInit.Usart2ClockSelection = RCC_USART2CLKSOURCE_PCLK1;
 115:Core/Src/main.c ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 116:Core/Src/main.c ****   {
 117:Core/Src/main.c ****     _Error_Handler(__FILE__, __LINE__);
 118:Core/Src/main.c ****   }
 119:Core/Src/main.c **** 
 120:Core/Src/main.c ****     /**Configure the Systick interrupt time 
 121:Core/Src/main.c ****     */
 122:Core/Src/main.c ****   HAL_SYSTICK_Config(HAL_RCC_GetHCLKFreq()/1000);
 123:Core/Src/main.c **** 
 124:Core/Src/main.c ****     /**Configure the Systick 
 125:Core/Src/main.c ****     */
 126:Core/Src/main.c ****   HAL_SYSTICK_CLKSourceConfig(SYSTICK_CLKSOURCE_HCLK);
 127:Core/Src/main.c **** 
 128:Core/Src/main.c ****   /* SysTick_IRQn interrupt configuration */
 129:Core/Src/main.c ****   HAL_NVIC_SetPriority(SysTick_IRQn, 0, 0);
 130:Core/Src/main.c **** }
 131:Core/Src/main.c **** 
 132:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 133:Core/Src/main.c **** 
 134:Core/Src/main.c **** /* USER CODE END 4 */
 135:Core/Src/main.c **** 
 136:Core/Src/main.c **** /**
 137:Core/Src/main.c ****   * @brief  This function is executed in case of error occurrence.
 138:Core/Src/main.c ****   * @param  file: The file name as string.
 139:Core/Src/main.c ****   * @param  line: The line in file as a number.
 140:Core/Src/main.c ****   * @retval None
 141:Core/Src/main.c ****   */
 142:Core/Src/main.c **** void _Error_Handler(char *file, int line)
 143:Core/Src/main.c **** {
  28              		.loc 1 143 0
  29              		.cfi_startproc
ARM GAS  /tmp/ccLt0ZPj.s 			page 4


  30              		@ Volatile: function does not return.
  31              		@ args = 0, pretend = 0, frame = 0
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33              		@ link register save eliminated.
  34              	.LVL0:
  35              	.L2:
  36 0000 FEE7     		b	.L2
  37              		.cfi_endproc
  38              	.LFE127:
  40              		.section	.text.SystemClock_Config,"ax",%progbits
  41              		.align	1
  42              		.global	SystemClock_Config
  43              		.syntax unified
  44              		.thumb
  45              		.thumb_func
  46              		.fpu fpv4-sp-d16
  48              	SystemClock_Config:
  49              	.LFB126:
  79:Core/Src/main.c **** 
  50              		.loc 1 79 0
  51              		.cfi_startproc
  52              		@ args = 0, pretend = 0, frame = 152
  53              		@ frame_needed = 0, uses_anonymous_args = 0
  79:Core/Src/main.c **** 
  54              		.loc 1 79 0
  55 0000 00B5     		push	{lr}
  56              	.LCFI0:
  57              		.cfi_def_cfa_offset 4
  58              		.cfi_offset 14, -4
  59 0002 A7B0     		sub	sp, sp, #156
  60              	.LCFI1:
  61              		.cfi_def_cfa_offset 160
  87:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
  62              		.loc 1 87 0
  63 0004 0223     		movs	r3, #2
  64 0006 1C93     		str	r3, [sp, #112]
  88:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = 16;
  65              		.loc 1 88 0
  66 0008 0122     		movs	r2, #1
  67 000a 1F92     		str	r2, [sp, #124]
  89:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
  68              		.loc 1 89 0
  69 000c 1022     		movs	r2, #16
  70 000e 2092     		str	r2, [sp, #128]
  90:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
  71              		.loc 1 90 0
  72 0010 2293     		str	r3, [sp, #136]
  91:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL9;
  73              		.loc 1 91 0
  74 0012 4FF40043 		mov	r3, #32768
  75 0016 2393     		str	r3, [sp, #140]
  92:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PREDIV = RCC_PREDIV_DIV1;
  76              		.loc 1 92 0
  77 0018 4FF4E013 		mov	r3, #1835008
  78 001c 2493     		str	r3, [sp, #144]
  93:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
  79              		.loc 1 93 0
ARM GAS  /tmp/ccLt0ZPj.s 			page 5


  80 001e 0023     		movs	r3, #0
  81 0020 2593     		str	r3, [sp, #148]
  94:Core/Src/main.c ****   {
  82              		.loc 1 94 0
  83 0022 1CA8     		add	r0, sp, #112
  84 0024 FFF7FEFF 		bl	HAL_RCC_OscConfig
  85              	.LVL1:
  86 0028 48BB     		cbnz	r0, .L8
 101:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
  87              		.loc 1 101 0
  88 002a 0F23     		movs	r3, #15
  89 002c 1793     		str	r3, [sp, #92]
 103:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
  90              		.loc 1 103 0
  91 002e 0221     		movs	r1, #2
  92 0030 1891     		str	r1, [sp, #96]
 104:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
  93              		.loc 1 104 0
  94 0032 0023     		movs	r3, #0
  95 0034 1993     		str	r3, [sp, #100]
 105:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
  96              		.loc 1 105 0
  97 0036 4FF48062 		mov	r2, #1024
  98 003a 1A92     		str	r2, [sp, #104]
 106:Core/Src/main.c **** 
  99              		.loc 1 106 0
 100 003c 1B93     		str	r3, [sp, #108]
 108:Core/Src/main.c ****   {
 101              		.loc 1 108 0
 102 003e 17A8     		add	r0, sp, #92
 103 0040 FFF7FEFF 		bl	HAL_RCC_ClockConfig
 104              	.LVL2:
 105 0044 F8B9     		cbnz	r0, .L9
 113:Core/Src/main.c ****   PeriphClkInit.Usart2ClockSelection = RCC_USART2CLKSOURCE_PCLK1;
 106              		.loc 1 113 0
 107 0046 0223     		movs	r3, #2
 108 0048 0193     		str	r3, [sp, #4]
 114:Core/Src/main.c ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 109              		.loc 1 114 0
 110 004a 0023     		movs	r3, #0
 111 004c 0493     		str	r3, [sp, #16]
 115:Core/Src/main.c ****   {
 112              		.loc 1 115 0
 113 004e 01A8     		add	r0, sp, #4
 114 0050 FFF7FEFF 		bl	HAL_RCCEx_PeriphCLKConfig
 115              	.LVL3:
 116 0054 D8B9     		cbnz	r0, .L10
 122:Core/Src/main.c **** 
 117              		.loc 1 122 0
 118 0056 FFF7FEFF 		bl	HAL_RCC_GetHCLKFreq
 119              	.LVL4:
 120 005a 0F4B     		ldr	r3, .L11
 121 005c A3FB0030 		umull	r3, r0, r3, r0
 122 0060 8009     		lsrs	r0, r0, #6
 123 0062 FFF7FEFF 		bl	HAL_SYSTICK_Config
 124              	.LVL5:
 126:Core/Src/main.c **** 
ARM GAS  /tmp/ccLt0ZPj.s 			page 6


 125              		.loc 1 126 0
 126 0066 0420     		movs	r0, #4
 127 0068 FFF7FEFF 		bl	HAL_SYSTICK_CLKSourceConfig
 128              	.LVL6:
 129:Core/Src/main.c **** }
 129              		.loc 1 129 0
 130 006c 0022     		movs	r2, #0
 131 006e 1146     		mov	r1, r2
 132 0070 4FF0FF30 		mov	r0, #-1
 133 0074 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 134              	.LVL7:
 130:Core/Src/main.c **** 
 135              		.loc 1 130 0
 136 0078 27B0     		add	sp, sp, #156
 137              	.LCFI2:
 138              		.cfi_remember_state
 139              		.cfi_def_cfa_offset 4
 140              		@ sp needed
 141 007a 5DF804FB 		ldr	pc, [sp], #4
 142              	.L8:
 143              	.LCFI3:
 144              		.cfi_restore_state
  96:Core/Src/main.c ****   }
 145              		.loc 1 96 0
 146 007e 6021     		movs	r1, #96
 147 0080 0648     		ldr	r0, .L11+4
 148 0082 FFF7FEFF 		bl	_Error_Handler
 149              	.LVL8:
 150              	.L9:
 110:Core/Src/main.c ****   }
 151              		.loc 1 110 0
 152 0086 6E21     		movs	r1, #110
 153 0088 0448     		ldr	r0, .L11+4
 154 008a FFF7FEFF 		bl	_Error_Handler
 155              	.LVL9:
 156              	.L10:
 117:Core/Src/main.c ****   }
 157              		.loc 1 117 0
 158 008e 7521     		movs	r1, #117
 159 0090 0248     		ldr	r0, .L11+4
 160 0092 FFF7FEFF 		bl	_Error_Handler
 161              	.LVL10:
 162              	.L12:
 163 0096 00BF     		.align	2
 164              	.L11:
 165 0098 D34D6210 		.word	274877907
 166 009c 00000000 		.word	.LC0
 167              		.cfi_endproc
 168              	.LFE126:
 170              		.section	.text.assert_failed,"ax",%progbits
 171              		.align	1
 172              		.global	assert_failed
 173              		.syntax unified
 174              		.thumb
 175              		.thumb_func
 176              		.fpu fpv4-sp-d16
 178              	assert_failed:
ARM GAS  /tmp/ccLt0ZPj.s 			page 7


 179              	.LFB128:
 144:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
 145:Core/Src/main.c ****   /* User can add his own implementation to report the HAL error return state */
 146:Core/Src/main.c ****   while(1)
 147:Core/Src/main.c ****   {
 148:Core/Src/main.c ****   }
 149:Core/Src/main.c ****   /* USER CODE END Error_Handler_Debug */
 150:Core/Src/main.c **** }
 151:Core/Src/main.c **** 
 152:Core/Src/main.c **** #ifdef  USE_FULL_ASSERT
 153:Core/Src/main.c **** /**
 154:Core/Src/main.c ****   * @brief  Reports the name of the source file and the source line number
 155:Core/Src/main.c ****   *         where the assert_param error has occurred.
 156:Core/Src/main.c ****   * @param  file: pointer to the source file name
 157:Core/Src/main.c ****   * @param  line: assert_param error line source number
 158:Core/Src/main.c ****   * @retval None
 159:Core/Src/main.c ****   */
 160:Core/Src/main.c **** void assert_failed(uint8_t* file, uint32_t line)
 161:Core/Src/main.c **** { 
 180              		.loc 1 161 0
 181              		.cfi_startproc
 182              		@ args = 0, pretend = 0, frame = 0
 183              		@ frame_needed = 0, uses_anonymous_args = 0
 184              		@ link register save eliminated.
 185              	.LVL11:
 162:Core/Src/main.c ****   /* USER CODE BEGIN 6 */
 163:Core/Src/main.c ****   /* User can add his own implementation to report the file name and line number,
 164:Core/Src/main.c ****      tex: printf("Wrong parameters value: file %s on line %d\r\n", file, line) */
 165:Core/Src/main.c ****   /* USER CODE END 6 */
 166:Core/Src/main.c **** }
 186              		.loc 1 166 0
 187 0000 7047     		bx	lr
 188              		.cfi_endproc
 189              	.LFE128:
 191              		.section	.rodata.SystemClock_Config.str1.4,"aMS",%progbits,1
 192              		.align	2
 193              	.LC0:
 194 0000 436F7265 		.ascii	"Core/Src/main.c\000"
 194      2F537263 
 194      2F6D6169 
 194      6E2E6300 
 195              		.text
 196              	.Letext0:
 197              		.file 2 "/home/logic/STM32Toolchain/gcc-arm/arm-none-eabi/include/machine/_default_types.h"
 198              		.file 3 "/home/logic/STM32Toolchain/gcc-arm/arm-none-eabi/include/sys/_stdint.h"
 199              		.file 4 "Drivers/CMSIS/Include/core_cm4.h"
 200              		.file 5 "Drivers/CMSIS/Device/ST/STM32F3xx/Include/system_stm32f3xx.h"
 201              		.file 6 "Drivers/CMSIS/Device/ST/STM32F3xx/Include/stm32f303xe.h"
 202              		.file 7 "/home/logic/STM32Toolchain/gcc-arm/arm-none-eabi/include/sys/lock.h"
 203              		.file 8 "/home/logic/STM32Toolchain/gcc-arm/arm-none-eabi/include/sys/_types.h"
 204              		.file 9 "/home/logic/STM32Toolchain/gcc-arm/lib/gcc/arm-none-eabi/7.3.1/include/stddef.h"
 205              		.file 10 "/home/logic/STM32Toolchain/gcc-arm/arm-none-eabi/include/sys/reent.h"
 206              		.file 11 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_def.h"
 207              		.file 12 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_rcc.h"
 208              		.file 13 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_rcc_ex.h"
 209              		.file 14 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_dma.h"
 210              		.file 15 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_uart.h"
ARM GAS  /tmp/ccLt0ZPj.s 			page 8


 211              		.file 16 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal.h"
 212              		.file 17 "Core/Inc/usart.h"
 213              		.file 18 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_cortex.h"
ARM GAS  /tmp/ccLt0ZPj.s 			page 9


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
     /tmp/ccLt0ZPj.s:18     .text._Error_Handler:0000000000000000 $t
     /tmp/ccLt0ZPj.s:25     .text._Error_Handler:0000000000000000 _Error_Handler
     /tmp/ccLt0ZPj.s:41     .text.SystemClock_Config:0000000000000000 $t
     /tmp/ccLt0ZPj.s:48     .text.SystemClock_Config:0000000000000000 SystemClock_Config
     /tmp/ccLt0ZPj.s:165    .text.SystemClock_Config:0000000000000098 $d
     /tmp/ccLt0ZPj.s:171    .text.assert_failed:0000000000000000 $t
     /tmp/ccLt0ZPj.s:178    .text.assert_failed:0000000000000000 assert_failed
     /tmp/ccLt0ZPj.s:192    .rodata.SystemClock_Config.str1.4:0000000000000000 $d

UNDEFINED SYMBOLS
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_RCCEx_PeriphCLKConfig
HAL_RCC_GetHCLKFreq
HAL_SYSTICK_Config
HAL_SYSTICK_CLKSourceConfig
HAL_NVIC_SetPriority
