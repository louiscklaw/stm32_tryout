ARM GAS  /tmp/cc8tmKB0.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"stm32f3xx_hal_uart.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.UART_EndTxTransfer,"ax",%progbits
  18              		.align	1
  19              		.syntax unified
  20              		.thumb
  21              		.thumb_func
  22              		.fpu fpv4-sp-d16
  24              	UART_EndTxTransfer:
  25              	.LFB169:
  26              		.file 1 "Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c"
   1:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
   2:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   ******************************************************************************
   3:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @file    stm32f3xx_hal_uart.c
   4:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @author  MCD Application Team
   5:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief   UART HAL module driver.
   6:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *          This file provides firmware functions to manage the following 
   7:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *          functionalities of the Universal Asynchronous Receiver Transmitter (UART) peripheral:
   8:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *           + Initialization and de-initialization functions
   9:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *           + IO operation functions
  10:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *           + Peripheral Control functions
  11:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *           + Peripheral State and Errors functions
  12:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *
  13:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   @verbatim
  14:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****  ===============================================================================
  15:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****                         ##### How to use this driver #####
  16:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****  ===============================================================================
  17:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   [..]
  18:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     The UART HAL driver can be used as follows:
  19:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
  20:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     (#) Declare a UART_HandleTypeDef handle structure (eg. UART_HandleTypeDef huart).
  21:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     (#) Initialize the UART low level resources by implementing the HAL_UART_MspInit() API:
  22:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         (++) Enable the USARTx interface clock.
  23:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         (++) UART pins configuration:
  24:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****             (+++) Enable the clock for the UART GPIOs.
  25:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****             (+++) Configure these UART pins as alternate function pull-up.
  26:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         (++) NVIC configuration if you need to use interrupt process (HAL_UART_Transmit_IT()
  27:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****              and HAL_UART_Receive_IT() APIs):
  28:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****             (+++) Configure the USARTx interrupt priority.
  29:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****             (+++) Enable the NVIC USART IRQ handle.
  30:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         (++) UART interrupts handling:
  31:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****               -@@-  The specific UART interrupts (Transmission complete interrupt,
  32:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****                 RXNE interrupt and Error Interrupts) are managed using the macros
ARM GAS  /tmp/cc8tmKB0.s 			page 2


  33:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****                 __HAL_UART_ENABLE_IT() and __HAL_UART_DISABLE_IT() inside the transmit and receive 
  34:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         (++) DMA Configuration if you need to use DMA process (HAL_UART_Transmit_DMA()
  35:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****              and HAL_UART_Receive_DMA() APIs):
  36:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****             (+++) Declare a DMA handle structure for the Tx/Rx channel.
  37:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****             (+++) Enable the DMAx interface clock.
  38:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****             (+++) Configure the declared DMA handle structure with the required Tx/Rx parameters.
  39:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****             (+++) Configure the DMA Tx/Rx channel.
  40:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****             (+++) Associate the initialized DMA handle to the UART DMA Tx/Rx handle.
  41:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****             (+++) Configure the priority and enable the NVIC for the transfer complete interrupt on
  42:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
  43:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     (#) Program the Baud Rate, Word Length, Stop Bit, Parity, Hardware
  44:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         flow control and Mode (Receiver/Transmitter) in the huart handle Init structure.
  45:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
  46:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     (#) If required, program UART advanced features (TX/RX pins swap, auto Baud rate detection,...)
  47:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         in the huart handle AdvancedInit structure.
  48:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
  49:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     (#) For the UART asynchronous mode, initialize the UART registers by calling
  50:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         the HAL_UART_Init() API.
  51:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
  52:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     (#) For the UART Half duplex mode, initialize the UART registers by calling
  53:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         the HAL_HalfDuplex_Init() API.
  54:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
  55:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     (#) For the UART LIN (Local Interconnection Network) mode, initialize the UART registers
  56:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         by calling the HAL_LIN_Init() API.
  57:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
  58:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     (#) For the UART Multiprocessor mode, initialize the UART registers
  59:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         by calling the HAL_MultiProcessor_Init() API.
  60:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
  61:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     (#) For the UART RS485 Driver Enabled mode, initialize the UART registers
  62:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         by calling the HAL_RS485Ex_Init() API.
  63:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
  64:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****    [..]
  65:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     (@) These APIs (HAL_UART_Init(), HAL_HalfDuplex_Init(), HAL_MultiProcessor_Init(),
  66:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         also configure the low level Hardware (GPIO, CLOCK, CORTEX...etc) by
  67:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         calling the customized HAL_UART_MspInit() API.
  68:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
  69:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****    [..]
  70:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****    [..] Three operation modes are available within this driver :
  71:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   
  72:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****      *** Polling mode IO operation ***
  73:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****      =================================
  74:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****      [..]
  75:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****        (+) Send an amount of data in blocking mode using HAL_UART_Transmit()
  76:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****        (+) Receive an amount of data in blocking mode using HAL_UART_Receive()
  77:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
  78:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****      *** Interrupt mode IO operation ***
  79:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****      ===================================
  80:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****      [..]
  81:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****        (+) Send an amount of data in non blocking mode using HAL_UART_Transmit_IT()
  82:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****        (+) At transmission end of half transfer HAL_UART_TxHalfCpltCallback is executed and user ca
  83:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****             add his own code by customization of function pointer HAL_UART_TxHalfCpltCallback
  84:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****        (+) At transmission end of transfer HAL_UART_TxCpltCallback is executed and user can
  85:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****             add his own code by customization of function pointer HAL_UART_TxCpltCallback
  86:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****        (+) Receive an amount of data in non blocking mode using HAL_UART_Receive_IT()
  87:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****        (+) At reception end of half transfer HAL_UART_RxHalfCpltCallback is executed and user can
  88:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****             add his own code by customization of function pointer HAL_UART_RxHalfCpltCallback
  89:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****        (+) At reception end of transfer HAL_UART_RxCpltCallback is executed and user can
ARM GAS  /tmp/cc8tmKB0.s 			page 3


  90:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****             add his own code by customization of function pointer HAL_UART_RxCpltCallback
  91:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****        (+) In case of transfer Error, HAL_UART_ErrorCallback() function is executed and user can
  92:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****             add his own code by customization of function pointer HAL_UART_ErrorCallback
  93:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
  94:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****      *** DMA mode IO operation ***
  95:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****      ==============================
  96:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****      [..]
  97:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****        (+) Send an amount of data in non blocking mode (DMA) using HAL_UART_Transmit_DMA()
  98:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****        (+) At transmission end of half transfer HAL_UART_TxHalfCpltCallback is executed and user ca
  99:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****             add his own code by customization of function pointer HAL_UART_TxHalfCpltCallback
 100:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****        (+) At transmission end of transfer HAL_UART_TxCpltCallback is executed and user can
 101:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****             add his own code by customization of function pointer HAL_UART_TxCpltCallback
 102:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****        (+) Receive an amount of data in non blocking mode (DMA) using HAL_UART_Receive_DMA()
 103:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****        (+) At reception end of half transfer HAL_UART_RxHalfCpltCallback is executed and user can
 104:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****             add his own code by customization of function pointer HAL_UART_RxHalfCpltCallback
 105:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****        (+) At reception end of transfer HAL_UART_RxCpltCallback is executed and user can
 106:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****             add his own code by customization of function pointer HAL_UART_RxCpltCallback
 107:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****        (+) In case of transfer Error, HAL_UART_ErrorCallback() function is executed and user can
 108:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****             add his own code by customization of function pointer HAL_UART_ErrorCallback
 109:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****        (+) Pause the DMA Transfer using HAL_UART_DMAPause()
 110:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****        (+) Resume the DMA Transfer using HAL_UART_DMAResume()
 111:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****        (+) Stop the DMA Transfer using HAL_UART_DMAStop()
 112:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 113:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****      *** UART HAL driver macros list ***
 114:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****      =============================================
 115:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****      [..]
 116:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****        Below the list of most used macros in UART HAL driver.
 117:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 118:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       (+) __HAL_UART_ENABLE: Enable the UART peripheral
 119:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       (+) __HAL_UART_DISABLE: Disable the UART peripheral
 120:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       (+) __HAL_UART_GET_FLAG : Check whether the specified UART flag is set or not
 121:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       (+) __HAL_UART_CLEAR_FLAG : Clear the specified UART pending flag
 122:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       (+) __HAL_UART_ENABLE_IT: Enable the specified UART interrupt
 123:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       (+) __HAL_UART_DISABLE_IT: Disable the specified UART interrupt
 124:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 125:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****      [..]
 126:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****        (@) You can refer to the UART HAL driver header file for more useful macros
 127:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 128:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   @endverbatim
 129:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   ******************************************************************************
 130:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @attention
 131:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *
 132:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * <h2><center>&copy; COPYRIGHT(c) 2016 STMicroelectronics</center></h2>
 133:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *
 134:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * Redistribution and use in source and binary forms, with or without modification,
 135:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * are permitted provided that the following conditions are met:
 136:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *   1. Redistributions of source code must retain the above copyright notice,
 137:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *      this list of conditions and the following disclaimer.
 138:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
 139:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *      this list of conditions and the following disclaimer in the documentation
 140:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *      and/or other materials provided with the distribution.
 141:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
 142:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *      may be used to endorse or promote products derived from this software
 143:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *      without specific prior written permission.
 144:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *
 145:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
 146:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
ARM GAS  /tmp/cc8tmKB0.s 			page 4


 147:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
 148:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
 149:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 150:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
 151:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
 152:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
 153:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
 154:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 155:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *
 156:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   ******************************************************************************
 157:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
 158:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 159:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /* Includes ------------------------------------------------------------------*/
 160:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** #include "stm32f3xx_hal.h"
 161:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 162:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /** @addtogroup STM32F3xx_HAL_Driver
 163:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @{
 164:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
 165:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 166:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /** @defgroup UART UART
 167:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief UART HAL module driver
 168:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @{
 169:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
 170:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 171:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** #ifdef HAL_UART_MODULE_ENABLED
 172:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 173:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /* Private typedef -----------------------------------------------------------*/
 174:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /* Private define ------------------------------------------------------------*/
 175:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /** @defgroup UART_Private_Constants UART Private Constants
 176:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @{
 177:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
 178:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** #define UART_CR1_FIELDS  ((uint32_t)(USART_CR1_M | USART_CR1_PCE | USART_CR1_PS | \
 179:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****                                      USART_CR1_TE | USART_CR1_RE | USART_CR1_OVER8)) /*!< UART or U
 180:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
 181:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @}
 182:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
 183:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 184:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /* Private macros ------------------------------------------------------------*/
 185:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /* Private variables ---------------------------------------------------------*/
 186:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /* Private function prototypes -----------------------------------------------*/
 187:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /** @addtogroup UART_Private_Functions
 188:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @{
 189:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
 190:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** static void UART_EndTxTransfer(UART_HandleTypeDef *huart);
 191:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** static void UART_EndRxTransfer(UART_HandleTypeDef *huart);
 192:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** static void UART_DMATransmitCplt(DMA_HandleTypeDef *hdma);
 193:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** static void UART_DMATxHalfCplt(DMA_HandleTypeDef *hdma);
 194:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** static void UART_DMAReceiveCplt(DMA_HandleTypeDef *hdma);
 195:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** static void UART_DMARxHalfCplt(DMA_HandleTypeDef *hdma);
 196:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** static void UART_DMAError(DMA_HandleTypeDef *hdma);
 197:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** static void UART_DMAAbortOnError(DMA_HandleTypeDef *hdma);
 198:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** static void UART_DMATxAbortCallback(DMA_HandleTypeDef *hdma);
 199:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** static void UART_DMARxAbortCallback(DMA_HandleTypeDef *hdma);
 200:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** static void UART_DMATxOnlyAbortCallback(DMA_HandleTypeDef *hdma);
 201:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** static void UART_DMARxOnlyAbortCallback(DMA_HandleTypeDef *hdma);
 202:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** HAL_StatusTypeDef UART_Transmit_IT(UART_HandleTypeDef *huart);
 203:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** HAL_StatusTypeDef UART_EndTransmit_IT(UART_HandleTypeDef *huart);
ARM GAS  /tmp/cc8tmKB0.s 			page 5


 204:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** HAL_StatusTypeDef UART_Receive_IT(UART_HandleTypeDef *huart);
 205:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
 206:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @}
 207:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
 208:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 209:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /* Exported functions --------------------------------------------------------*/
 210:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 211:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /** @defgroup UART_Exported_Functions UART Exported Functions
 212:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @{
 213:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
 214:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 215:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /** @defgroup UART_Exported_Functions_Group1 Initialization and de-initialization functions
 216:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *  @brief    Initialization and Configuration functions
 217:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *
 218:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** @verbatim
 219:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** ===============================================================================
 220:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****             ##### Initialization and Configuration functions #####
 221:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****  ===============================================================================
 222:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     [..]
 223:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     This subsection provides a set of functions allowing to initialize the USARTx or the UARTy
 224:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     in asynchronous mode.
 225:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       (+) For the asynchronous mode the parameters below can be configured:
 226:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         (++) Baud Rate
 227:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         (++) Word Length
 228:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         (++) Stop Bit
 229:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         (++) Parity
 230:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         (++) Hardware flow control
 231:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         (++) Receiver/transmitter modes
 232:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         (++) Over Sampling Method
 233:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         (++) One-Bit Sampling Method
 234:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       (+) For the asynchronous mode, the following advanced features can be configured as well:
 235:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         (++) TX and/or RX pin level inversion
 236:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         (++) data logical level inversion
 237:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         (++) RX and TX pins swap
 238:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         (++) RX overrun detection disabling
 239:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         (++) DMA disabling on RX error
 240:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         (++) MSB first on communication line
 241:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         (++) auto Baud rate detection
 242:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     [..]
 243:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     The HAL_UART_Init(), HAL_HalfDuplex_Init(), HAL_LIN_Init() and HAL_MultiProcessor_Init()
 244:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     API follow respectively the UART asynchronous, UART Half duplex, UART LIN mode and
 245:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     multiprocessor configuration procedures (details for the procedures are available in reference 
 246:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 247:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** @endverbatim
 248:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @{
 249:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
 250:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 251:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /*
 252:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   Additional Table: If the parity is enabled, then the MSB bit of the data written
 253:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****                     in the data register is transmitted but is changed by the parity bit.
 254:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****                     According to device capability (support or not of 7-bit word length),
 255:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****                     frame length is either defined by the M bit (8-bits or 9-bits)
 256:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****                     or by the M1 and M0 bits (7-bit, 8-bit or 9-bit).
 257:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****                     Possible UART frame formats are as listed in the following table:
 258:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 259:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       Table 1. UART frame format.             
 260:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       +-----------------------------------------------------------------------+
ARM GAS  /tmp/cc8tmKB0.s 			page 6


 261:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       |       M bit       |  PCE bit  |             UART frame                |
 262:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       |-------------------|-----------|---------------------------------------|
 263:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       |         0         |     0     |    | SB |    8-bit data   | STB |     |
 264:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       |-------------------|-----------|---------------------------------------|
 265:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       |         0         |     1     |    | SB | 7-bit data | PB | STB |     |
 266:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       |-------------------|-----------|---------------------------------------|
 267:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       |         1         |     0     |    | SB |    9-bit data   | STB |     |
 268:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       |-------------------|-----------|---------------------------------------|
 269:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       |         1         |     1     |    | SB | 8-bit data | PB | STB |     |
 270:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       +-----------------------------------------------------------------------+
 271:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       |  M1 bit |  M0 bit |  PCE bit  |             UART frame                |
 272:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       |---------|---------|-----------|---------------------------------------|
 273:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       |    0    |    0    |     0     |    | SB |    8 bit data   | STB |     |
 274:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       |---------|---------|-----------|---------------------------------------|
 275:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       |    0    |    0    |     1     |    | SB | 7 bit data | PB | STB |     |
 276:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       |---------|---------|-----------|---------------------------------------|
 277:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       |    0    |    1    |     0     |    | SB |    9 bit data   | STB |     |
 278:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       |---------|---------|-----------|---------------------------------------|
 279:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       |    0    |    1    |     1     |    | SB | 8 bit data | PB | STB |     |
 280:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       |---------|---------|-----------|---------------------------------------|
 281:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       |    1    |    0    |     0     |    | SB |    7 bit data   | STB |     |
 282:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       |---------|---------|-----------|---------------------------------------|
 283:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       |    1    |    0    |     1     |    | SB | 6 bit data | PB | STB |     |
 284:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       +-----------------------------------------------------------------------+
 285:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 286:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** */
 287:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 288:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
 289:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief Initialize the UART mode according to the specified
 290:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *        parameters in the UART_InitTypeDef and initialize the associated handle.
 291:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param huart UART handle.
 292:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval HAL status
 293:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
 294:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Init(UART_HandleTypeDef *huart)
 295:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
 296:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Check the UART handle allocation */
 297:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if(huart == NULL)
 298:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 299:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     return HAL_ERROR;
 300:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 301:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 302:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if(huart->Init.HwFlowCtl != UART_HWCONTROL_NONE)
 303:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 304:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Check the parameters */
 305:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     assert_param(IS_UART_HWFLOW_INSTANCE(huart->Instance));
 306:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 307:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   else
 308:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 309:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Check the parameters */
 310:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     assert_param(IS_UART_INSTANCE(huart->Instance));
 311:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 312:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 313:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if(huart->gState == HAL_UART_STATE_RESET)
 314:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 315:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Allocate lock resource and initialize it */
 316:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->Lock = HAL_UNLOCKED;
 317:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
ARM GAS  /tmp/cc8tmKB0.s 			page 7


 318:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Init the low level hardware : GPIO, CLOCK */
 319:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     HAL_UART_MspInit(huart);
 320:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 321:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 322:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 323:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 324:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Disable the Peripheral */
 325:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   __HAL_UART_DISABLE(huart);
 326:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 327:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Set the UART Communication parameters */
 328:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if (UART_SetConfig(huart) == HAL_ERROR)
 329:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 330:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     return HAL_ERROR;
 331:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 332:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 333:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if (huart->AdvancedInit.AdvFeatureInit != UART_ADVFEATURE_NO_INIT)
 334:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 335:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     UART_AdvFeatureConfig(huart);
 336:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 337:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 338:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* In asynchronous mode, the following bits must be kept cleared:
 339:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   - LINEN and CLKEN bits in the USART_CR2 register,
 340:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   - SCEN, HDSEL and IREN  bits in the USART_CR3 register.*/
 341:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN));
 342:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL | USART_CR3_IREN));
 343:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 344:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Enable the Peripheral */
 345:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   __HAL_UART_ENABLE(huart);
 346:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 347:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* TEACK and/or REACK to check before moving huart->gState and huart->RxState to Ready */
 348:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   return (UART_CheckIdleState(huart));
 349:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
 350:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 351:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
 352:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief Initialize the half-duplex mode according to the specified
 353:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *        parameters in the UART_InitTypeDef and creates the associated handle.
 354:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param huart UART handle.
 355:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval HAL status
 356:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
 357:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** HAL_StatusTypeDef HAL_HalfDuplex_Init(UART_HandleTypeDef *huart)
 358:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
 359:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Check the UART handle allocation */
 360:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if(huart == NULL)
 361:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 362:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     return HAL_ERROR;
 363:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 364:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 365:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Check UART instance */
 366:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   assert_param(IS_UART_HALFDUPLEX_INSTANCE(huart->Instance));
 367:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 368:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if(huart->gState == HAL_UART_STATE_RESET)
 369:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 370:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Allocate lock resource and initialize it */
 371:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->Lock = HAL_UNLOCKED;
 372:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 373:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Init the low level hardware : GPIO, CLOCK */
 374:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     HAL_UART_MspInit(huart);
ARM GAS  /tmp/cc8tmKB0.s 			page 8


 375:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 376:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 377:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 378:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 379:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Disable the Peripheral */
 380:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   __HAL_UART_DISABLE(huart);
 381:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 382:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Set the UART Communication parameters */
 383:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if (UART_SetConfig(huart) == HAL_ERROR)
 384:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 385:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     return HAL_ERROR;
 386:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 387:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 388:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if (huart->AdvancedInit.AdvFeatureInit != UART_ADVFEATURE_NO_INIT)
 389:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 390:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     UART_AdvFeatureConfig(huart);
 391:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 392:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 393:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* In half-duplex mode, the following bits must be kept cleared:
 394:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   - LINEN and CLKEN bits in the USART_CR2 register,
 395:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   - SCEN and IREN bits in the USART_CR3 register.*/
 396:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN));
 397:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_IREN | USART_CR3_SCEN));
 398:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 399:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Enable the Half-Duplex mode by setting the HDSEL bit in the CR3 register */
 400:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   SET_BIT(huart->Instance->CR3, USART_CR3_HDSEL);
 401:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 402:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Enable the Peripheral */
 403:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   __HAL_UART_ENABLE(huart);
 404:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 405:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* TEACK and/or REACK to check before moving huart->gState and huart->RxState to Ready */
 406:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   return (UART_CheckIdleState(huart));
 407:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
 408:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 409:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 410:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
 411:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief Initialize the LIN mode according to the specified
 412:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *        parameters in the UART_InitTypeDef and creates the associated handle .
 413:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param huart UART handle.
 414:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param BreakDetectLength specifies the LIN break detection length.
 415:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *        This parameter can be one of the following values:
 416:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *          @arg @ref UART_LINBREAKDETECTLENGTH_10B 10-bit break detection
 417:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *          @arg @ref UART_LINBREAKDETECTLENGTH_11B 11-bit break detection
 418:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval HAL status
 419:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
 420:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** HAL_StatusTypeDef HAL_LIN_Init(UART_HandleTypeDef *huart, uint32_t BreakDetectLength)
 421:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
 422:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Check the UART handle allocation */
 423:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if(huart == NULL)
 424:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 425:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     return HAL_ERROR;
 426:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 427:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 428:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Check the LIN UART instance */
 429:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   assert_param(IS_UART_LIN_INSTANCE(huart->Instance));
 430:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Check the Break detection length parameter */
 431:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   assert_param(IS_UART_LIN_BREAK_DETECT_LENGTH(BreakDetectLength));
ARM GAS  /tmp/cc8tmKB0.s 			page 9


 432:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 433:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* LIN mode limited to 16-bit oversampling only */
 434:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if(huart->Init.OverSampling == UART_OVERSAMPLING_8)
 435:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 436:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     return HAL_ERROR;
 437:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 438:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* LIN mode limited to 8-bit data length */
 439:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if(huart->Init.WordLength != UART_WORDLENGTH_8B)
 440:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 441:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     return HAL_ERROR;
 442:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 443:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 444:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if(huart->gState == HAL_UART_STATE_RESET)
 445:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 446:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Allocate lock resource and initialize it */
 447:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->Lock = HAL_UNLOCKED;
 448:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 449:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Init the low level hardware : GPIO, CLOCK */
 450:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     HAL_UART_MspInit(huart);
 451:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 452:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 453:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 454:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 455:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Disable the Peripheral */
 456:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   __HAL_UART_DISABLE(huart);
 457:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 458:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Set the UART Communication parameters */
 459:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if (UART_SetConfig(huart) == HAL_ERROR)
 460:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 461:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     return HAL_ERROR;
 462:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 463:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 464:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if (huart->AdvancedInit.AdvFeatureInit != UART_ADVFEATURE_NO_INIT)
 465:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 466:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     UART_AdvFeatureConfig(huart);
 467:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 468:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 469:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* In LIN mode, the following bits must be kept cleared:
 470:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   - LINEN and CLKEN bits in the USART_CR2 register,
 471:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   - SCEN and IREN bits in the USART_CR3 register.*/
 472:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR2, USART_CR2_CLKEN);
 473:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_HDSEL | USART_CR3_IREN | USART_CR3_SCEN));
 474:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 475:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Enable the LIN mode by setting the LINEN bit in the CR2 register */
 476:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   SET_BIT(huart->Instance->CR2, USART_CR2_LINEN);
 477:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 478:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Set the USART LIN Break detection length. */
 479:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   MODIFY_REG(huart->Instance->CR2, USART_CR2_LBDL, BreakDetectLength);
 480:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 481:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Enable the Peripheral */
 482:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   __HAL_UART_ENABLE(huart);
 483:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 484:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* TEACK and/or REACK to check before moving huart->gState and huart->RxState to Ready */
 485:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   return (UART_CheckIdleState(huart));
 486:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
 487:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 488:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
ARM GAS  /tmp/cc8tmKB0.s 			page 10


 489:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
 490:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief Initialize the multiprocessor mode according to the specified
 491:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *        parameters in the UART_InitTypeDef and initialize the associated handle.
 492:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param huart UART handle.
 493:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param Address UART node address (4-, 6-, 7- or 8-bit long).
 494:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param WakeUpMethod specifies the UART wakeup method.
 495:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *        This parameter can be one of the following values:
 496:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *          @arg @ref UART_WAKEUPMETHOD_IDLELINE WakeUp by an idle line detection
 497:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *          @arg @ref UART_WAKEUPMETHOD_ADDRESSMARK WakeUp by an address mark
 498:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @note  If the user resorts to idle line detection wake up, the Address parameter
 499:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *        is useless and ignored by the initialization function.
 500:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @note  If the user resorts to address mark wake up, the address length detection
 501:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *        is configured by default to 4 bits only. For the UART to be able to
 502:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *        manage 6-, 7- or 8-bit long addresses detection, the API
 503:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *        HAL_MultiProcessorEx_AddressLength_Set() must be called after
 504:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *        HAL_MultiProcessor_Init().
 505:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval HAL status
 506:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
 507:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** HAL_StatusTypeDef HAL_MultiProcessor_Init(UART_HandleTypeDef *huart, uint8_t Address, uint32_t Wake
 508:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
 509:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Check the UART handle allocation */
 510:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if(huart == NULL)
 511:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 512:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     return HAL_ERROR;
 513:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 514:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 515:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Check the wake up method parameter */
 516:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   assert_param(IS_UART_WAKEUPMETHOD(WakeUpMethod));
 517:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 518:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if(huart->gState == HAL_UART_STATE_RESET)
 519:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 520:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Allocate lock resource and initialize it */
 521:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->Lock = HAL_UNLOCKED;
 522:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 523:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Init the low level hardware : GPIO, CLOCK */
 524:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     HAL_UART_MspInit(huart);
 525:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 526:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 527:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 528:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 529:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Disable the Peripheral */
 530:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   __HAL_UART_DISABLE(huart);
 531:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 532:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Set the UART Communication parameters */
 533:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if (UART_SetConfig(huart) == HAL_ERROR)
 534:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 535:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     return HAL_ERROR;
 536:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 537:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 538:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if (huart->AdvancedInit.AdvFeatureInit != UART_ADVFEATURE_NO_INIT)
 539:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 540:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     UART_AdvFeatureConfig(huart);
 541:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 542:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 543:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* In multiprocessor mode, the following bits must be kept cleared:
 544:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   - LINEN and CLKEN bits in the USART_CR2 register,
 545:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   - SCEN, HDSEL and IREN  bits in the USART_CR3 register. */
ARM GAS  /tmp/cc8tmKB0.s 			page 11


 546:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN));
 547:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL | USART_CR3_IREN));
 548:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 549:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if (WakeUpMethod == UART_WAKEUPMETHOD_ADDRESSMARK)
 550:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 551:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* If address mark wake up method is chosen, set the USART address node */
 552:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR2, USART_CR2_ADD, ((uint32_t)Address << UART_CR2_ADDRESS_LSB_POS)
 553:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 554:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 555:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Set the wake up method by setting the WAKE bit in the CR1 register */
 556:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   MODIFY_REG(huart->Instance->CR1, USART_CR1_WAKE, WakeUpMethod);
 557:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 558:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Enable the Peripheral */
 559:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   __HAL_UART_ENABLE(huart);
 560:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 561:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* TEACK and/or REACK to check before moving huart->gState and huart->RxState to Ready */
 562:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   return (UART_CheckIdleState(huart));
 563:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
 564:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 565:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 566:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
 567:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief DeInitialize the UART peripheral.
 568:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param huart UART handle.
 569:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval HAL status
 570:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
 571:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_DeInit(UART_HandleTypeDef *huart)
 572:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
 573:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Check the UART handle allocation */
 574:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if(huart == NULL)
 575:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 576:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     return HAL_ERROR;
 577:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 578:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 579:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Check the parameters */
 580:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   assert_param(IS_UART_INSTANCE(huart->Instance));
 581:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 582:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 583:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 584:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Disable the Peripheral */
 585:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   __HAL_UART_DISABLE(huart);
 586:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 587:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->Instance->CR1 = 0x0U;
 588:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->Instance->CR2 = 0x0U;
 589:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->Instance->CR3 = 0x0U;
 590:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 591:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* DeInit the low level hardware */
 592:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   HAL_UART_MspDeInit(huart);
 593:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 594:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
 595:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->gState    = HAL_UART_STATE_RESET;
 596:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->RxState   = HAL_UART_STATE_RESET;
 597:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 598:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Process Unlock */
 599:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   __HAL_UNLOCK(huart);
 600:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 601:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   return HAL_OK;
 602:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
ARM GAS  /tmp/cc8tmKB0.s 			page 12


 603:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 604:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
 605:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief Initialize the UART MSP.
 606:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param huart UART handle.
 607:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval None
 608:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
 609:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** __weak void HAL_UART_MspInit(UART_HandleTypeDef *huart)
 610:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
 611:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 612:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   UNUSED(huart);
 613:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 614:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
 615:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****             the HAL_UART_MspInit can be implemented in the user file
 616:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****    */
 617:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
 618:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 619:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
 620:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief DeInitialize the UART MSP.
 621:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param huart UART handle.
 622:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval None
 623:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
 624:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** __weak void HAL_UART_MspDeInit(UART_HandleTypeDef *huart)
 625:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
 626:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 627:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   UNUSED(huart);
 628:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 629:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
 630:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****             the HAL_UART_MspDeInit can be implemented in the user file
 631:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****    */
 632:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
 633:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 634:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
 635:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @}
 636:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
 637:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 638:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /** @defgroup UART_Exported_Functions_Group2 IO operation functions
 639:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief UART Transmit/Receive functions
 640:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *
 641:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** @verbatim
 642:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****  ===============================================================================
 643:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****                       ##### IO operation functions #####
 644:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****  ===============================================================================
 645:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     This subsection provides a set of functions allowing to manage the UART asynchronous
 646:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     and Half duplex data transfers.
 647:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 648:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     (#) There are two mode of transfer:
 649:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****        (++) Blocking mode: The communication is performed in polling mode.
 650:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****            The HAL status of all data processing is returned by the same function
 651:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****            after finishing transfer.
 652:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****        (++) Non-Blocking mode: The communication is performed using Interrupts
 653:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****            or DMA, These API's return the HAL status.
 654:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****            The end of the data processing will be indicated through the
 655:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****            dedicated UART IRQ when using Interrupt mode or the DMA IRQ when
 656:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****            using DMA mode.
 657:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****            The HAL_UART_TxCpltCallback(), HAL_UART_RxCpltCallback() user callbacks
 658:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****            will be executed respectively at the end of the transmit or Receive process
 659:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****            The HAL_UART_ErrorCallback()user callback will be executed when a communication error is
ARM GAS  /tmp/cc8tmKB0.s 			page 13


 660:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 661:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     (#) Blocking mode API's are :
 662:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         (++) HAL_UART_Transmit()
 663:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         (++) HAL_UART_Receive()
 664:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 665:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     (#) Non-Blocking mode API's with Interrupt are :
 666:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         (++) HAL_UART_Transmit_IT()
 667:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         (++) HAL_UART_Receive_IT()
 668:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         (++) HAL_UART_IRQHandler()
 669:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 670:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     (#) Non-Blocking mode API's with DMA are :
 671:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         (++) HAL_UART_Transmit_DMA()
 672:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         (++) HAL_UART_Receive_DMA()
 673:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         (++) HAL_UART_DMAPause()
 674:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         (++) HAL_UART_DMAResume()
 675:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         (++) HAL_UART_DMAStop()
 676:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 677:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     (#) A set of Transfer Complete Callbacks are provided in Non_Blocking mode:
 678:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         (++) HAL_UART_TxHalfCpltCallback()
 679:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         (++) HAL_UART_TxCpltCallback()
 680:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         (++) HAL_UART_RxHalfCpltCallback()
 681:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         (++) HAL_UART_RxCpltCallback()
 682:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         (++) HAL_UART_ErrorCallback()
 683:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 684:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     (#) Non-Blocking mode transfers could be aborted using Abort API's :
 685:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         (++) HAL_UART_Abort()
 686:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         (++) HAL_UART_AbortTransmit()
 687:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         (++) HAL_UART_AbortReceive()
 688:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         (++) HAL_UART_Abort_IT()
 689:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         (++) HAL_UART_AbortTransmit_IT()
 690:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         (++) HAL_UART_AbortReceive_IT()
 691:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 692:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     (#) For Abort services based on interrupts (HAL_UART_Abortxxx_IT), a set of Abort Complete Call
 693:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         (++) HAL_UART_AbortCpltCallback()
 694:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         (++) HAL_UART_AbortTransmitCpltCallback()
 695:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         (++) HAL_UART_AbortReceiveCpltCallback()
 696:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 697:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     (#) In Non-Blocking mode transfers, possible errors are split into 2 categories.
 698:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         Errors are handled as follows :
 699:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         (++) Error is considered as Recoverable and non blocking : Transfer could go till end, but 
 700:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****              to be evaluated by user : this concerns Frame Error, Parity Error or Noise Error in In
 701:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****              Received character is then retrieved and stored in Rx buffer, Error code is set to all
 702:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****              and HAL_UART_ErrorCallback() user callback is executed. Transfer is kept ongoing on UA
 703:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****              If user wants to abort it, Abort services should be called by user.
 704:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         (++) Error is considered as Blocking : Transfer could not be completed properly and is abor
 705:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****              This concerns Overrun Error In Interrupt mode reception and all errors in DMA mode.
 706:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****              Error code is set to allow user to identify error type, and HAL_UART_ErrorCallback() u
 707:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 708:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     -@- In the Half duplex communication, it is forbidden to run the transmit
 709:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         and receive process in parallel, the UART state HAL_UART_STATE_BUSY_TX_RX can't be useful.
 710:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 711:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** @endverbatim
 712:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @{
 713:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
 714:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 715:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
 716:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief Send an amount of data in blocking mode.
ARM GAS  /tmp/cc8tmKB0.s 			page 14


 717:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param huart UART handle.
 718:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param pData Pointer to data buffer.
 719:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param Size Amount of data to be sent.
 720:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param Timeout Timeout duration.
 721:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval HAL status
 722:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
 723:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Transmit(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size, uint3
 724:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
 725:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   uint16_t* tmp;
 726:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   uint32_t tickstart = 0U;
 727:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 728:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Check that a Tx process is not already ongoing */
 729:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if(huart->gState == HAL_UART_STATE_READY)
 730:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 731:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     if((pData == NULL ) || (Size == 0U))
 732:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 733:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       return  HAL_ERROR;
 734:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
 735:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 736:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Process Locked */
 737:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     __HAL_LOCK(huart);
 738:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 739:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
 740:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_BUSY_TX;
 741:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 742:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Init tickstart for timeout managment*/
 743:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     tickstart = HAL_GetTick();
 744:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 745:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->TxXferSize = Size;
 746:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->TxXferCount = Size;
 747:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     while(huart->TxXferCount > 0U)
 748:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 749:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       huart->TxXferCount--;
 750:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       if(UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_TXE, RESET, tickstart, Timeout) != HAL_OK)
 751:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       {
 752:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         return HAL_TIMEOUT;
 753:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       }
 754:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE
 755:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       {
 756:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         tmp = (uint16_t*) pData;
 757:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         huart->Instance->TDR = (*tmp & (uint16_t)0x01FFU);
 758:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         pData += 2U;
 759:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       }
 760:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       else
 761:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       {
 762:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         huart->Instance->TDR = (*pData++ & (uint8_t)0xFFU);
 763:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       }
 764:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
 765:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     if(UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_TC, RESET, tickstart, Timeout) != HAL_OK)
 766:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 767:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       return HAL_TIMEOUT;
 768:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
 769:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 770:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* At end of Tx process, restore huart->gState to Ready */
 771:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_READY;
 772:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 773:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Process Unlocked */
ARM GAS  /tmp/cc8tmKB0.s 			page 15


 774:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     __HAL_UNLOCK(huart);
 775:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 776:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     return HAL_OK;
 777:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 778:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   else
 779:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 780:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     return HAL_BUSY;
 781:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 782:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
 783:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 784:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
 785:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief Receive an amount of data in blocking mode.
 786:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param huart UART handle.
 787:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param pData pointer to data buffer.
 788:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param Size amount of data to be received.
 789:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param Timeout Timeout duration.
 790:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval HAL status
 791:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
 792:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Receive(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size, uint32
 793:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
 794:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   uint16_t* tmp;
 795:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   uint16_t uhMask;
 796:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   uint32_t tickstart = 0U;
 797:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 798:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Check that a Rx process is not already ongoing */
 799:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if(huart->RxState == HAL_UART_STATE_READY)
 800:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 801:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     if((pData == NULL ) || (Size == 0U))
 802:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 803:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       return  HAL_ERROR;
 804:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
 805:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 806:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Process Locked */
 807:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     __HAL_LOCK(huart);
 808:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 809:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
 810:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_BUSY_RX;
 811:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 812:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Init tickstart for timeout managment*/
 813:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     tickstart = HAL_GetTick();
 814:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 815:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->RxXferSize = Size;
 816:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->RxXferCount = Size;
 817:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 818:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Computation of UART mask to apply to RDR register */
 819:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     UART_MASK_COMPUTATION(huart);
 820:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     uhMask = huart->Mask;
 821:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 822:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* as long as data have to be received */
 823:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     while(huart->RxXferCount > 0U)
 824:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 825:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       huart->RxXferCount--;
 826:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       if(UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_RXNE, RESET, tickstart, Timeout) != HAL_OK)
 827:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       {
 828:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         return HAL_TIMEOUT;
 829:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       }
 830:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE
ARM GAS  /tmp/cc8tmKB0.s 			page 16


 831:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       {
 832:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         tmp = (uint16_t*) pData ;
 833:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         *tmp = (uint16_t)(huart->Instance->RDR & uhMask);
 834:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         pData +=2U;
 835:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       }
 836:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       else
 837:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       {
 838:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         *pData++ = (uint8_t)(huart->Instance->RDR & (uint8_t)uhMask);
 839:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       }
 840:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
 841:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 842:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* At end of Rx process, restore huart->RxState to Ready */
 843:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_READY;
 844:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 845:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Process Unlocked */
 846:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     __HAL_UNLOCK(huart);
 847:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 848:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     return HAL_OK;
 849:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 850:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   else
 851:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 852:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     return HAL_BUSY;
 853:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 854:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
 855:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 856:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
 857:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief Send an amount of data in interrupt mode.
 858:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param huart UART handle.
 859:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param pData pointer to data buffer.
 860:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param Size amount of data to be sent.
 861:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval HAL status
 862:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
 863:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Transmit_IT(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size)
 864:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
 865:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Check that a Tx process is not already ongoing */
 866:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if(huart->gState == HAL_UART_STATE_READY)
 867:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 868:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     if((pData == NULL ) || (Size == 0U))
 869:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 870:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       return HAL_ERROR;
 871:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
 872:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 873:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Process Locked */
 874:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     __HAL_LOCK(huart);
 875:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 876:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->pTxBuffPtr = pData;
 877:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->TxXferSize = Size;
 878:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->TxXferCount = Size;
 879:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 880:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
 881:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_BUSY_TX;
 882:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 883:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Process Unlocked */
 884:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     __HAL_UNLOCK(huart);
 885:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 886:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Enable the UART Transmit Data Register Empty Interrupt */
 887:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     SET_BIT(huart->Instance->CR1, USART_CR1_TXEIE);
ARM GAS  /tmp/cc8tmKB0.s 			page 17


 888:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 889:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     return HAL_OK;
 890:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 891:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   else
 892:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 893:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     return HAL_BUSY;
 894:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 895:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
 896:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 897:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
 898:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief Receive an amount of data in interrupt mode.
 899:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param huart UART handle.
 900:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param pData pointer to data buffer.
 901:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param Size amount of data to be received.
 902:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval HAL status
 903:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
 904:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Receive_IT(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size)
 905:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
 906:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Check that a Rx process is not already ongoing */
 907:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if(huart->RxState == HAL_UART_STATE_READY)
 908:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 909:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     if((pData == NULL ) || (Size == 0U))
 910:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 911:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       return HAL_ERROR;
 912:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
 913:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 914:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Process Locked */
 915:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     __HAL_LOCK(huart);
 916:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 917:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->pRxBuffPtr = pData;
 918:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->RxXferSize = Size;
 919:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->RxXferCount = Size;
 920:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 921:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Computation of UART mask to apply to RDR register */
 922:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     UART_MASK_COMPUTATION(huart);
 923:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 924:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
 925:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_BUSY_RX;
 926:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 927:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Process Unlocked */
 928:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     __HAL_UNLOCK(huart);
 929:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 930:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Enable the UART Error Interrupt: (Frame error, noise error, overrun error) */
 931:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     SET_BIT(huart->Instance->CR3, USART_CR3_EIE);
 932:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 933:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Enable the UART Parity Error and Data Register not empty Interrupts */
 934:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     SET_BIT(huart->Instance->CR1, USART_CR1_PEIE | USART_CR1_RXNEIE);
 935:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 936:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     return HAL_OK;
 937:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 938:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   else
 939:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 940:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     return HAL_BUSY;
 941:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 942:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
 943:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 944:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
ARM GAS  /tmp/cc8tmKB0.s 			page 18


 945:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief Send an amount of data in DMA mode.
 946:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param huart UART handle.
 947:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param pData pointer to data buffer.
 948:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param Size amount of data to be sent.
 949:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @note This function starts a DMA transfer in interrupt mode meaning that
 950:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *       DMA half transfer complete, DMA transfer complete and DMA transfer
 951:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *       error interrupts are enabled
 952:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval HAL status
 953:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
 954:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Transmit_DMA(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size)
 955:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
 956:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Check if UART instance supports continuous communication using DMA */
 957:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   assert_param(IS_UART_DMA_INSTANCE(huart->Instance));
 958:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 959:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Check that a Tx process is not already ongoing */
 960:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if(huart->gState == HAL_UART_STATE_READY)
 961:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 962:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     if((pData == NULL ) || (Size == 0U))
 963:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 964:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       return HAL_ERROR;
 965:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
 966:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 967:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Process Locked */
 968:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     __HAL_LOCK(huart);
 969:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 970:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->pTxBuffPtr = pData;
 971:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->TxXferSize = Size;
 972:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->TxXferCount = Size;
 973:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 974:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
 975:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_BUSY_TX;
 976:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 977:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Set the UART DMA transfer complete callback */
 978:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->hdmatx->XferCpltCallback = UART_DMATransmitCplt;
 979:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 980:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Set the UART DMA Half transfer complete callback */
 981:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->hdmatx->XferHalfCpltCallback = UART_DMATxHalfCplt;
 982:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 983:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Set the DMA error callback */
 984:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->hdmatx->XferErrorCallback = UART_DMAError;
 985:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 986:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Set the DMA abort callback */
 987:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->hdmatx->XferAbortCallback = NULL;
 988:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 989:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Enable the UART transmit DMA channel */
 990:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     HAL_DMA_Start_IT(huart->hdmatx, (uint32_t)huart->pTxBuffPtr, (uint32_t)&huart->Instance->TDR, S
 991:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 992:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Clear the TC flag in the ICR register */
 993:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_TCF);
 994:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 995:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Process Unlocked */
 996:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     __HAL_UNLOCK(huart);
 997:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 998:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Enable the DMA transfer for transmit request by setting the DMAT bit
 999:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****        in the UART CR3 register */
1000:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     SET_BIT(huart->Instance->CR3, USART_CR3_DMAT);
1001:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
ARM GAS  /tmp/cc8tmKB0.s 			page 19


1002:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     return HAL_OK;
1003:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
1004:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   else
1005:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
1006:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     return HAL_BUSY;
1007:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
1008:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
1009:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1010:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
1011:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief Receive an amount of data in DMA mode.
1012:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param huart UART handle.
1013:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param pData pointer to data buffer.
1014:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param Size amount of data to be received.
1015:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @note   When the UART parity is enabled (PCE = 1), the received data contain
1016:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *         the parity bit (MSB position).
1017:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @note This function starts a DMA transfer in interrupt mode meaning that
1018:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *       DMA half transfer complete, DMA transfer complete and DMA transfer
1019:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *       error interrupts are enabled
1020:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval HAL status
1021:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
1022:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Receive_DMA(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size)
1023:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
1024:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Check if UART instance supports continuous communication using DMA */
1025:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   assert_param(IS_UART_DMA_INSTANCE(huart->Instance));
1026:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1027:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Check that a Rx process is not already ongoing */
1028:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if(huart->RxState == HAL_UART_STATE_READY)
1029:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
1030:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     if((pData == NULL ) || (Size == 0U))
1031:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
1032:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       return HAL_ERROR;
1033:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
1034:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1035:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Process Locked */
1036:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     __HAL_LOCK(huart);
1037:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1038:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->pRxBuffPtr = pData;
1039:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->RxXferSize = Size;
1040:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1041:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
1042:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_BUSY_RX;
1043:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1044:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Set the UART DMA transfer complete callback */
1045:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->hdmarx->XferCpltCallback = UART_DMAReceiveCplt;
1046:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1047:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Set the UART DMA Half transfer complete callback */
1048:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->hdmarx->XferHalfCpltCallback = UART_DMARxHalfCplt;
1049:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1050:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Set the DMA error callback */
1051:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->hdmarx->XferErrorCallback = UART_DMAError;
1052:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1053:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Set the DMA abort callback */
1054:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->hdmarx->XferAbortCallback = NULL;
1055:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1056:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Enable the DMA channel */
1057:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     HAL_DMA_Start_IT(huart->hdmarx, (uint32_t)&huart->Instance->RDR, (uint32_t)huart->pRxBuffPtr, S
1058:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
ARM GAS  /tmp/cc8tmKB0.s 			page 20


1059:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Process Unlocked */
1060:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     __HAL_UNLOCK(huart);
1061:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1062:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Enable the UART Parity Error Interrupt */
1063:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     SET_BIT(huart->Instance->CR1, USART_CR1_PEIE);
1064:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1065:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Enable the UART Error Interrupt: (Frame error, noise error, overrun error) */
1066:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     SET_BIT(huart->Instance->CR3, USART_CR3_EIE);
1067:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1068:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Enable the DMA transfer for the receiver request by setting the DMAR bit
1069:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****        in the UART CR3 register */
1070:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     SET_BIT(huart->Instance->CR3, USART_CR3_DMAR);
1071:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1072:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     return HAL_OK;
1073:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
1074:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   else
1075:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
1076:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     return HAL_BUSY;
1077:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
1078:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
1079:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1080:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
1081:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief  Pause the DMA Transfer.
1082:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param  huart UART handle.
1083:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval HAL status
1084:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
1085:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_DMAPause(UART_HandleTypeDef *huart)
1086:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
1087:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Process Locked */
1088:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   __HAL_LOCK(huart);
1089:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1090:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if ((huart->gState == HAL_UART_STATE_BUSY_TX) &&
1091:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT)))
1092:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
1093:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Disable the UART DMA Tx request */
1094:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
1095:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
1096:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if ((huart->RxState == HAL_UART_STATE_BUSY_RX) &&
1097:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR)))
1098:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
1099:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Disable PE and ERR (Frame error, noise error, overrun error) interrupts */
1100:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR1, USART_CR1_PEIE);
1101:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
1102:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1103:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Disable the UART DMA Rx request */
1104:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
1105:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
1106:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1107:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Process Unlocked */
1108:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   __HAL_UNLOCK(huart);
1109:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1110:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   return HAL_OK;
1111:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
1112:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1113:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
1114:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief  Resume the DMA Transfer.
1115:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param  huart UART handle.
ARM GAS  /tmp/cc8tmKB0.s 			page 21


1116:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval HAL status
1117:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
1118:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_DMAResume(UART_HandleTypeDef *huart)
1119:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
1120:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Process Locked */
1121:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   __HAL_LOCK(huart);
1122:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1123:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if(huart->gState == HAL_UART_STATE_BUSY_TX)
1124:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
1125:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Enable the UART DMA Tx request */
1126:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     SET_BIT(huart->Instance->CR3, USART_CR3_DMAT);
1127:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
1128:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if(huart->RxState == HAL_UART_STATE_BUSY_RX)
1129:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
1130:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Clear the Overrun flag before resuming the Rx transfer */
1131:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF);
1132:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1133:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Reenable PE and ERR (Frame error, noise error, overrun error) interrupts */
1134:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     SET_BIT(huart->Instance->CR1, USART_CR1_PEIE);
1135:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     SET_BIT(huart->Instance->CR3, USART_CR3_EIE);
1136:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1137:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Enable the UART DMA Rx request */
1138:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     SET_BIT(huart->Instance->CR3, USART_CR3_DMAR);
1139:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
1140:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1141:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Process Unlocked */
1142:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   __HAL_UNLOCK(huart);
1143:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1144:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   return HAL_OK;
1145:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
1146:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1147:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
1148:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief  Stop the DMA Transfer.
1149:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param  huart UART handle.
1150:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval HAL status
1151:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
1152:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_DMAStop(UART_HandleTypeDef *huart)
1153:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
1154:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* The Lock is not implemented on this API to allow the user application
1155:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****      to call the HAL UART API under callbacks HAL_UART_TxCpltCallback() / HAL_UART_RxCpltCallback()
1156:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****      HAL_UART_TxHalfCpltCallback / HAL_UART_RxHalfCpltCallback: 
1157:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****      indeed, when HAL_DMA_Abort() API is called, the DMA TX/RX Transfer or Half Transfer complete  
1158:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****      interrupt is generated if the DMA transfer interruption occurs at the middle or at the end of 
1159:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****      the stream and the corresponding call back is executed. */
1160:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1161:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Stop UART DMA Tx request if ongoing */
1162:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if ((huart->gState == HAL_UART_STATE_BUSY_TX) &&
1163:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT)))
1164:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
1165:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
1166:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1167:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Abort the UART DMA Tx channel */
1168:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     if(huart->hdmatx != NULL)
1169:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
1170:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       HAL_DMA_Abort(huart->hdmatx);
1171:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
1172:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
ARM GAS  /tmp/cc8tmKB0.s 			page 22


1173:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     UART_EndTxTransfer(huart);
1174:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
1175:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1176:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Stop UART DMA Rx request if ongoing */
1177:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if ((huart->RxState == HAL_UART_STATE_BUSY_RX) &&
1178:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR)))
1179:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
1180:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
1181:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1182:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Abort the UART DMA Rx channel */
1183:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     if(huart->hdmarx != NULL)
1184:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
1185:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       HAL_DMA_Abort(huart->hdmarx);
1186:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
1187:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1188:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     UART_EndRxTransfer(huart);
1189:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
1190:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1191:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   return HAL_OK;
1192:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
1193:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1194:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
1195:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief  Abort ongoing transfers (blocking mode).
1196:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param  huart UART handle.
1197:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @note   This procedure could be used for aborting any ongoing transfer started in Interrupt or 
1198:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *         This procedure performs following operations :
1199:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *           - Disable UART Interrupts (Tx and Rx)
1200:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
1201:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort (in case of transfer in DMA mode)
1202:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *           - Set handle State to READY
1203:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @note   This procedure is executed in blocking mode : when exiting function, Abort is considere
1204:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval HAL status
1205:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** */
1206:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Abort(UART_HandleTypeDef *huart)
1207:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
1208:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Disable TXEIE, TCIE, RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
1209:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE | USART_CR1_TXEIE | USART_CR1_
1210:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
1211:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1212:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Disable the UART DMA Tx request if enabled */
1213:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT))
1214:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
1215:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
1216:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1217:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Abort the UART DMA Tx channel : use blocking DMA Abort API (no callback) */
1218:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     if(huart->hdmatx != NULL)
1219:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
1220:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       /* Set the UART DMA Abort callback to Null. 
1221:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****          No call back execution at end of DMA abort procedure */
1222:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       huart->hdmatx->XferAbortCallback = NULL;
1223:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1224:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       HAL_DMA_Abort(huart->hdmatx);
1225:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
1226:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
1227:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1228:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Disable the UART DMA Rx request if enabled */
1229:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
ARM GAS  /tmp/cc8tmKB0.s 			page 23


1230:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
1231:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
1232:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1233:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Abort the UART DMA Rx channel : use blocking DMA Abort API (no callback) */
1234:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     if(huart->hdmarx != NULL)
1235:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
1236:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       /* Set the UART DMA Abort callback to Null. 
1237:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****          No call back execution at end of DMA abort procedure */
1238:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       huart->hdmarx->XferAbortCallback = NULL;
1239:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1240:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       HAL_DMA_Abort(huart->hdmarx);
1241:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
1242:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
1243:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1244:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Reset Tx and Rx transfer counters */
1245:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->TxXferCount = 0U; 
1246:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->RxXferCount = 0U; 
1247:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1248:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Clear the Error flags in the ICR register */
1249:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF | UART_CLEAR_NEF | UART_CLEAR_PEF | UART_CLEAR_FEF);
1250:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1251:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Restore huart->gState and huart->RxState to Ready */
1252:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->gState  = HAL_UART_STATE_READY;
1253:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
1254:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1255:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Reset Handle ErrorCode to No Error */
1256:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
1257:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1258:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   return HAL_OK;
1259:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
1260:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1261:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
1262:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief  Abort ongoing Transmit transfer (blocking mode).
1263:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param  huart UART handle.
1264:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @note   This procedure could be used for aborting any ongoing Tx transfer started in Interrupt 
1265:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *         This procedure performs following operations :
1266:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *           - Disable UART Interrupts (Tx)
1267:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
1268:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort (in case of transfer in DMA mode)
1269:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *           - Set handle State to READY
1270:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @note   This procedure is executed in blocking mode : when exiting function, Abort is considere
1271:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval HAL status
1272:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** */
1273:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_AbortTransmit(UART_HandleTypeDef *huart)
1274:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
1275:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Disable TXEIE and TCIE interrupts */
1276:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_TXEIE | USART_CR1_TCIE));
1277:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1278:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Disable the UART DMA Tx request if enabled */
1279:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT))
1280:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
1281:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
1282:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1283:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Abort the UART DMA Tx channel : use blocking DMA Abort API (no callback) */
1284:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     if(huart->hdmatx != NULL)
1285:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
1286:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       /* Set the UART DMA Abort callback to Null. 
ARM GAS  /tmp/cc8tmKB0.s 			page 24


1287:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****          No call back execution at end of DMA abort procedure */
1288:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       huart->hdmatx->XferAbortCallback = NULL;
1289:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1290:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       HAL_DMA_Abort(huart->hdmatx);
1291:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
1292:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
1293:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1294:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Reset Tx transfer counter */
1295:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->TxXferCount = 0U; 
1296:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1297:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Restore huart->gState to Ready */
1298:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
1299:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1300:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   return HAL_OK;
1301:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
1302:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1303:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
1304:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief  Abort ongoing Receive transfer (blocking mode).
1305:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param  huart UART handle.
1306:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @note   This procedure could be used for aborting any ongoing Rx transfer started in Interrupt 
1307:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *         This procedure performs following operations :
1308:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *           - Disable UART Interrupts (Rx)
1309:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
1310:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort (in case of transfer in DMA mode)
1311:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *           - Set handle State to READY
1312:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @note   This procedure is executed in blocking mode : when exiting function, Abort is considere
1313:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval HAL status
1314:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** */
1315:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_AbortReceive(UART_HandleTypeDef *huart)
1316:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
1317:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Disable RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
1318:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE));
1319:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
1320:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1321:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Disable the UART DMA Rx request if enabled */
1322:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
1323:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
1324:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
1325:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1326:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Abort the UART DMA Rx channel : use blocking DMA Abort API (no callback) */
1327:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     if(huart->hdmarx != NULL)
1328:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
1329:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       /* Set the UART DMA Abort callback to Null. 
1330:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****          No call back execution at end of DMA abort procedure */
1331:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       huart->hdmarx->XferAbortCallback = NULL;
1332:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1333:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       HAL_DMA_Abort(huart->hdmarx);
1334:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
1335:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
1336:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1337:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Reset Rx transfer counter */
1338:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->RxXferCount = 0U; 
1339:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1340:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Clear the Error flags in the ICR register */
1341:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF | UART_CLEAR_NEF | UART_CLEAR_PEF | UART_CLEAR_FEF);
1342:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1343:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Restore huart->RxState to Ready */
ARM GAS  /tmp/cc8tmKB0.s 			page 25


1344:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
1345:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1346:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   return HAL_OK;
1347:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
1348:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1349:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
1350:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief  Abort ongoing transfers (Interrupt mode).
1351:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param  huart UART handle.
1352:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @note   This procedure could be used for aborting any ongoing transfer started in Interrupt or 
1353:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *         This procedure performs following operations :
1354:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *           - Disable UART Interrupts (Tx and Rx)
1355:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
1356:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort_IT (in case of transfer in DMA mode)
1357:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *           - Set handle State to READY
1358:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *           - At abort completion, call user abort complete callback
1359:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @note   This procedure is executed in Interrupt mode, meaning that abort procedure could be
1360:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *         considered as completed only when user abort complete callback is executed (not when ex
1361:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval HAL status
1362:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** */
1363:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Abort_IT(UART_HandleTypeDef *huart)
1364:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
1365:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   uint32_t abortcplt = 1U;
1366:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   
1367:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Disable TXEIE, TCIE, RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
1368:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE | USART_CR1_TXEIE | USART_CR1_
1369:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
1370:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1371:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* If DMA Tx and/or DMA Rx Handles are associated to UART Handle, DMA Abort complete callbacks sh
1372:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****      before any call to DMA Abort functions */
1373:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* DMA Tx Handle is valid */
1374:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if(huart->hdmatx != NULL)
1375:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
1376:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Set DMA Abort Complete callback if UART DMA Tx request if enabled.
1377:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****        Otherwise, set it to NULL */
1378:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     if(HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT))
1379:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
1380:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       huart->hdmatx->XferAbortCallback = UART_DMATxAbortCallback;
1381:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
1382:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     else
1383:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
1384:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       huart->hdmatx->XferAbortCallback = NULL;
1385:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
1386:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
1387:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* DMA Rx Handle is valid */
1388:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if(huart->hdmarx != NULL)
1389:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
1390:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Set DMA Abort Complete callback if UART DMA Rx request if enabled.
1391:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****        Otherwise, set it to NULL */
1392:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     if(HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
1393:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
1394:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       huart->hdmarx->XferAbortCallback = UART_DMARxAbortCallback;
1395:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
1396:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     else
1397:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
1398:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       huart->hdmarx->XferAbortCallback = NULL;
1399:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
1400:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
ARM GAS  /tmp/cc8tmKB0.s 			page 26


1401:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   
1402:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Disable the UART DMA Tx request if enabled */
1403:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if(HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT))
1404:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
1405:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Disable DMA Tx at UART level */
1406:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
1407:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1408:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Abort the UART DMA Tx channel : use non blocking DMA Abort API (callback) */
1409:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     if(huart->hdmatx != NULL)
1410:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
1411:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       /* UART Tx DMA Abort callback has already been initialised : 
1412:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****          will lead to call HAL_UART_AbortCpltCallback() at end of DMA abort procedure */
1413:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1414:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       /* Abort DMA TX */
1415:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       if(HAL_DMA_Abort_IT(huart->hdmatx) != HAL_OK)
1416:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       {
1417:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         huart->hdmatx->XferAbortCallback = NULL;
1418:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       }
1419:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       else
1420:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       {
1421:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         abortcplt = 0U;
1422:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       }
1423:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
1424:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
1425:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1426:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Disable the UART DMA Rx request if enabled */
1427:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
1428:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
1429:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
1430:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1431:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Abort the UART DMA Rx channel : use non blocking DMA Abort API (callback) */
1432:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     if(huart->hdmarx != NULL)
1433:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
1434:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       /* UART Rx DMA Abort callback has already been initialised : 
1435:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****          will lead to call HAL_UART_AbortCpltCallback() at end of DMA abort procedure */
1436:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1437:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       /* Abort DMA RX */
1438:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       if(HAL_DMA_Abort_IT(huart->hdmarx) != HAL_OK)
1439:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       {
1440:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         huart->hdmarx->XferAbortCallback = NULL;
1441:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         abortcplt = 1U;
1442:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       }
1443:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       else
1444:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       {
1445:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         abortcplt = 0U;
1446:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       }
1447:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
1448:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
1449:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1450:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* if no DMA abort complete callback execution is required => call user Abort Complete callback *
1451:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if (abortcplt == 1U)
1452:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
1453:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Reset Tx and Rx transfer counters */
1454:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->TxXferCount = 0U; 
1455:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->RxXferCount = 0U;
1456:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1457:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Reset errorCode */
ARM GAS  /tmp/cc8tmKB0.s 			page 27


1458:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
1459:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1460:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Clear the Error flags in the ICR register */
1461:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF | UART_CLEAR_NEF | UART_CLEAR_PEF | UART_CLEAR_FEF
1462:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1463:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Restore huart->gState and huart->RxState to Ready */
1464:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->gState  = HAL_UART_STATE_READY;
1465:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_READY;
1466:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1467:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* As no DMA to be aborted, call directly user Abort complete callback */
1468:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     HAL_UART_AbortCpltCallback(huart);
1469:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
1470:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1471:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   return HAL_OK;
1472:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
1473:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1474:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
1475:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief  Abort ongoing Transmit transfer (Interrupt mode).
1476:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param  huart UART handle.
1477:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @note   This procedure could be used for aborting any ongoing Tx transfer started in Interrupt 
1478:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *         This procedure performs following operations :
1479:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *           - Disable UART Interrupts (Tx)
1480:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
1481:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort_IT (in case of transfer in DMA mode)
1482:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *           - Set handle State to READY
1483:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *           - At abort completion, call user abort complete callback
1484:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @note   This procedure is executed in Interrupt mode, meaning that abort procedure could be
1485:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *         considered as completed only when user abort complete callback is executed (not when ex
1486:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval HAL status
1487:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** */
1488:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_AbortTransmit_IT(UART_HandleTypeDef *huart)
1489:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
1490:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Disable TXEIE and TCIE interrupts */
1491:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_TXEIE | USART_CR1_TCIE));
1492:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1493:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Disable the UART DMA Tx request if enabled */
1494:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT))
1495:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
1496:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
1497:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1498:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Abort the UART DMA Tx channel : use non blocking DMA Abort API (callback) */
1499:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     if(huart->hdmatx != NULL)
1500:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
1501:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       /* Set the UART DMA Abort callback : 
1502:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****          will lead to call HAL_UART_AbortCpltCallback() at end of DMA abort procedure */
1503:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       huart->hdmatx->XferAbortCallback = UART_DMATxOnlyAbortCallback;
1504:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1505:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       /* Abort DMA TX */
1506:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       if(HAL_DMA_Abort_IT(huart->hdmatx) != HAL_OK)
1507:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       {
1508:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         /* Call Directly huart->hdmatx->XferAbortCallback function in case of error */
1509:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         huart->hdmatx->XferAbortCallback(huart->hdmatx);
1510:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       }
1511:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
1512:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     else
1513:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
1514:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       /* Reset Tx transfer counter */
ARM GAS  /tmp/cc8tmKB0.s 			page 28


1515:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       huart->TxXferCount = 0U; 
1516:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1517:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       /* Restore huart->gState to Ready */
1518:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       huart->gState = HAL_UART_STATE_READY;
1519:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1520:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       /* As no DMA to be aborted, call directly user Abort complete callback */
1521:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       HAL_UART_AbortTransmitCpltCallback(huart);
1522:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
1523:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
1524:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   else
1525:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
1526:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Reset Tx transfer counter */
1527:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->TxXferCount = 0U; 
1528:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1529:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Restore huart->gState to Ready */
1530:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_READY;
1531:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1532:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* As no DMA to be aborted, call directly user Abort complete callback */
1533:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     HAL_UART_AbortTransmitCpltCallback(huart);
1534:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
1535:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1536:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   return HAL_OK;
1537:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
1538:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1539:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
1540:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief  Abort ongoing Receive transfer (Interrupt mode).
1541:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param  huart UART handle.
1542:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @note   This procedure could be used for aborting any ongoing Rx transfer started in Interrupt 
1543:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *         This procedure performs following operations :
1544:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *           - Disable UART Interrupts (Rx)
1545:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
1546:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort_IT (in case of transfer in DMA mode)
1547:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *           - Set handle State to READY
1548:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *           - At abort completion, call user abort complete callback
1549:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @note   This procedure is executed in Interrupt mode, meaning that abort procedure could be
1550:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *         considered as completed only when user abort complete callback is executed (not when ex
1551:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval HAL status
1552:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** */
1553:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_AbortReceive_IT(UART_HandleTypeDef *huart)
1554:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
1555:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Disable RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
1556:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE));
1557:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
1558:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1559:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Disable the UART DMA Rx request if enabled */
1560:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
1561:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
1562:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
1563:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1564:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Abort the UART DMA Rx channel : use non blocking DMA Abort API (callback) */
1565:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     if(huart->hdmarx != NULL)
1566:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
1567:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       /* Set the UART DMA Abort callback : 
1568:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****          will lead to call HAL_UART_AbortCpltCallback() at end of DMA abort procedure */
1569:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       huart->hdmarx->XferAbortCallback = UART_DMARxOnlyAbortCallback;
1570:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1571:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       /* Abort DMA RX */
ARM GAS  /tmp/cc8tmKB0.s 			page 29


1572:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       if(HAL_DMA_Abort_IT(huart->hdmarx) != HAL_OK)
1573:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       {
1574:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         /* Call Directly huart->hdmarx->XferAbortCallback function in case of error */
1575:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         huart->hdmarx->XferAbortCallback(huart->hdmarx);
1576:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       }
1577:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
1578:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     else
1579:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
1580:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       /* Reset Rx transfer counter */
1581:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       huart->RxXferCount = 0U; 
1582:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1583:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       /* Clear the Error flags in the ICR register */
1584:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF | UART_CLEAR_NEF | UART_CLEAR_PEF | UART_CLEAR_F
1585:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1586:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       /* Restore huart->RxState to Ready */
1587:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       huart->RxState = HAL_UART_STATE_READY;
1588:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1589:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       /* As no DMA to be aborted, call directly user Abort complete callback */
1590:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       HAL_UART_AbortReceiveCpltCallback(huart);
1591:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
1592:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
1593:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   else
1594:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
1595:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Reset Rx transfer counter */
1596:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->RxXferCount = 0U; 
1597:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1598:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Clear the Error flags in the ICR register */
1599:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF | UART_CLEAR_NEF | UART_CLEAR_PEF | UART_CLEAR_FEF
1600:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1601:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Restore huart->RxState to Ready */
1602:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_READY;
1603:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1604:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* As no DMA to be aborted, call directly user Abort complete callback */
1605:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     HAL_UART_AbortReceiveCpltCallback(huart);
1606:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
1607:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1608:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   return HAL_OK;
1609:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
1610:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1611:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
1612:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief Handle UART interrupt request.
1613:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param huart UART handle.
1614:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval None
1615:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
1616:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** void HAL_UART_IRQHandler(UART_HandleTypeDef *huart)
1617:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
1618:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   uint32_t isrflags   = READ_REG(huart->Instance->ISR);
1619:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   uint32_t cr1its     = READ_REG(huart->Instance->CR1);
1620:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   uint32_t cr3its;
1621:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   uint32_t errorflags;
1622:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1623:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* If no error occurs */
1624:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   errorflags = (isrflags & (uint32_t)(USART_ISR_PE | USART_ISR_FE | USART_ISR_ORE | USART_ISR_NE));
1625:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if (errorflags == RESET)
1626:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
1627:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* UART in mode Receiver ---------------------------------------------------*/
1628:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     if(((isrflags & USART_ISR_RXNE) != RESET) && ((cr1its & USART_CR1_RXNEIE) != RESET))
ARM GAS  /tmp/cc8tmKB0.s 			page 30


1629:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
1630:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       UART_Receive_IT(huart);
1631:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       return;
1632:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
1633:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }  
1634:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1635:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* If some errors occur */
1636:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   cr3its = READ_REG(huart->Instance->CR3);
1637:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if(   (errorflags != RESET)
1638:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****      && (   ((cr3its & USART_CR3_EIE) != RESET)
1639:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****          || ((cr1its & (USART_CR1_RXNEIE | USART_CR1_PEIE)) != RESET)) )
1640:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
1641:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* UART parity error interrupt occurred -------------------------------------*/
1642:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     if(((isrflags & USART_ISR_PE) != RESET) && ((cr1its & USART_CR1_PEIE) != RESET))
1643:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
1644:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       __HAL_UART_CLEAR_IT(huart, UART_CLEAR_PEF);
1645:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1646:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       huart->ErrorCode |= HAL_UART_ERROR_PE;
1647:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
1648:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1649:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* UART frame error interrupt occurred --------------------------------------*/
1650:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     if(((isrflags & USART_ISR_FE) != RESET) && ((cr3its & USART_CR3_EIE) != RESET))
1651:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
1652:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       __HAL_UART_CLEAR_IT(huart, UART_CLEAR_FEF);
1653:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1654:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       huart->ErrorCode |= HAL_UART_ERROR_FE;
1655:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
1656:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1657:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* UART noise error interrupt occurred --------------------------------------*/
1658:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     if(((isrflags & USART_ISR_NE) != RESET) && ((cr3its & USART_CR3_EIE) != RESET))
1659:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
1660:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       __HAL_UART_CLEAR_IT(huart, UART_CLEAR_NEF);
1661:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1662:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       huart->ErrorCode |= HAL_UART_ERROR_NE;
1663:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
1664:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     
1665:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* UART Over-Run interrupt occurred -----------------------------------------*/
1666:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     if(((isrflags & USART_ISR_ORE) != RESET) &&
1667:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****        (((cr1its & USART_CR1_RXNEIE) != RESET) || ((cr3its & USART_CR3_EIE) != RESET)))
1668:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
1669:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       __HAL_UART_CLEAR_IT(huart, UART_CLEAR_OREF);
1670:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1671:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       huart->ErrorCode |= HAL_UART_ERROR_ORE;
1672:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
1673:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1674:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Call UART Error Call back function if need be --------------------------*/
1675:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     if(huart->ErrorCode != HAL_UART_ERROR_NONE)
1676:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
1677:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       /* UART in mode Receiver ---------------------------------------------------*/
1678:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       if(((isrflags & USART_ISR_RXNE) != RESET) && ((cr1its & USART_CR1_RXNEIE) != RESET))
1679:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       {
1680:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         UART_Receive_IT(huart);
1681:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       }
1682:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1683:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       /* If Overrun error occurs, or if any error occurs in DMA mode reception,
1684:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****          consider error as blocking */
1685:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       if (((huart->ErrorCode & HAL_UART_ERROR_ORE) != RESET) ||
ARM GAS  /tmp/cc8tmKB0.s 			page 31


1686:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****           (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR)))
1687:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       {  
1688:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         /* Blocking error : transfer is aborted
1689:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****            Set the UART state ready to be able to start again the process,
1690:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****            Disable Rx Interrupts, and disable Rx DMA request, if ongoing */
1691:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         UART_EndRxTransfer(huart);
1692:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1693:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         /* Disable the UART DMA Rx request if enabled */
1694:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
1695:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         {
1696:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****           CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
1697:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1698:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****           /* Abort the UART DMA Rx channel */
1699:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****           if(huart->hdmarx != NULL)
1700:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****           {
1701:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****             /* Set the UART DMA Abort callback : 
1702:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****                will lead to call HAL_UART_ErrorCallback() at end of DMA abort procedure */
1703:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****             huart->hdmarx->XferAbortCallback = UART_DMAAbortOnError;
1704:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1705:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****             /* Abort DMA RX */
1706:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****             if(HAL_DMA_Abort_IT(huart->hdmarx) != HAL_OK)
1707:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****             {
1708:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****               /* Call Directly huart->hdmarx->XferAbortCallback function in case of error */
1709:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****               huart->hdmarx->XferAbortCallback(huart->hdmarx);
1710:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****             }
1711:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****           }
1712:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****           else
1713:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****           {
1714:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****             /* Call user error callback */
1715:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****             HAL_UART_ErrorCallback(huart);
1716:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****           }
1717:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         }
1718:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         else
1719:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         {
1720:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****           /* Call user error callback */
1721:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****           HAL_UART_ErrorCallback(huart);
1722:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         }
1723:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       }
1724:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       else
1725:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       {
1726:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         /* Non Blocking error : transfer could go on. 
1727:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****            Error is notified to user through user error callback */
1728:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         HAL_UART_ErrorCallback(huart);
1729:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         huart->ErrorCode = HAL_UART_ERROR_NONE;
1730:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       }
1731:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
1732:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     return;
1733:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1734:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   } /* End if some error occurs */
1735:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1736:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* UART wakeup from Stop mode interrupt occurred ---------------------------*/
1737:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if(((isrflags & USART_ISR_WUF) != RESET) && ((cr3its & USART_CR3_WUFIE) != RESET))
1738:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
1739:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     __HAL_UART_CLEAR_IT(huart, UART_CLEAR_WUF);
1740:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Set the UART state ready to be able to start again the process */
1741:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->gState  = HAL_UART_STATE_READY;
1742:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_READY;
ARM GAS  /tmp/cc8tmKB0.s 			page 32


1743:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     HAL_UARTEx_WakeupCallback(huart);
1744:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     return;
1745:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
1746:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1747:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* UART in mode Transmitter ------------------------------------------------*/
1748:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if(((isrflags & USART_ISR_TXE) != RESET) && ((cr1its & USART_CR1_TXEIE) != RESET))
1749:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
1750:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     UART_Transmit_IT(huart);
1751:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     return;
1752:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
1753:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1754:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* UART in mode Transmitter (transmission end) -----------------------------*/
1755:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if(((isrflags & USART_ISR_TC) != RESET) && ((cr1its & USART_CR1_TCIE) != RESET))
1756:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
1757:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     UART_EndTransmit_IT(huart);
1758:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     return;
1759:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
1760:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1761:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
1762:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1763:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
1764:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief Tx Transfer completed callback.
1765:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param huart UART handle.
1766:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval None
1767:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
1768:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** __weak void HAL_UART_TxCpltCallback(UART_HandleTypeDef *huart)
1769:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
1770:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
1771:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   UNUSED(huart);
1772:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1773:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
1774:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****             the HAL_UART_TxCpltCallback can be implemented in the user file.
1775:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****    */
1776:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
1777:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1778:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
1779:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief  Tx Half Transfer completed callback.
1780:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param  huart UART handle.
1781:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval None
1782:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
1783:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** __weak void HAL_UART_TxHalfCpltCallback(UART_HandleTypeDef *huart)
1784:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
1785:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
1786:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   UNUSED(huart);
1787:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1788:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* NOTE: This function should not be modified, when the callback is needed,
1789:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****            the HAL_UART_TxHalfCpltCallback can be implemented in the user file.
1790:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****    */
1791:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
1792:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1793:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
1794:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief Rx Transfer completed callback.
1795:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param huart UART handle.
1796:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval None
1797:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
1798:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** __weak void HAL_UART_RxCpltCallback(UART_HandleTypeDef *huart)
1799:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
ARM GAS  /tmp/cc8tmKB0.s 			page 33


1800:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
1801:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   UNUSED(huart);
1802:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1803:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
1804:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****             the HAL_UART_RxCpltCallback can be implemented in the user file.
1805:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****    */
1806:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
1807:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1808:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
1809:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief  Rx Half Transfer completed callback.
1810:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param  huart UART handle.
1811:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval None
1812:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
1813:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** __weak void HAL_UART_RxHalfCpltCallback(UART_HandleTypeDef *huart)
1814:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
1815:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
1816:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   UNUSED(huart);
1817:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1818:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* NOTE: This function should not be modified, when the callback is needed,
1819:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****            the HAL_UART_RxHalfCpltCallback can be implemented in the user file.
1820:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****    */
1821:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
1822:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1823:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
1824:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief UART error callback.
1825:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param huart UART handle.
1826:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval None
1827:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
1828:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** __weak void HAL_UART_ErrorCallback(UART_HandleTypeDef *huart)
1829:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
1830:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
1831:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   UNUSED(huart);
1832:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1833:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
1834:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****             the HAL_UART_ErrorCallback can be implemented in the user file.
1835:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****    */
1836:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
1837:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1838:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
1839:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief  UART Abort Complete callback.
1840:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param  huart UART handle.
1841:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval None
1842:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
1843:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** __weak void HAL_UART_AbortCpltCallback (UART_HandleTypeDef *huart)
1844:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
1845:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
1846:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   UNUSED(huart);
1847:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1848:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
1849:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****             the HAL_UART_AbortCpltCallback can be implemented in the user file.
1850:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****    */
1851:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
1852:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1853:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
1854:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief  UART Abort Complete callback.
1855:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param  huart UART handle.
1856:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval None
ARM GAS  /tmp/cc8tmKB0.s 			page 34


1857:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
1858:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** __weak void HAL_UART_AbortTransmitCpltCallback (UART_HandleTypeDef *huart)
1859:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
1860:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
1861:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   UNUSED(huart);
1862:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1863:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
1864:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****             the HAL_UART_AbortTransmitCpltCallback can be implemented in the user file.
1865:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****    */
1866:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
1867:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1868:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
1869:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief  UART Abort Receive Complete callback.
1870:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param  huart UART handle.
1871:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval None
1872:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
1873:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** __weak void HAL_UART_AbortReceiveCpltCallback (UART_HandleTypeDef *huart)
1874:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
1875:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
1876:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   UNUSED(huart);
1877:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1878:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
1879:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****             the HAL_UART_AbortReceiveCpltCallback can be implemented in the user file.
1880:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****    */
1881:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
1882:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1883:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
1884:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @}
1885:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
1886:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1887:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /** @defgroup UART_Exported_Functions_Group3 Peripheral Control functions
1888:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *  @brief   UART control functions
1889:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *
1890:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** @verbatim
1891:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****  ===============================================================================
1892:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****                       ##### Peripheral Control functions #####
1893:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****  ===============================================================================
1894:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     [..]
1895:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     This subsection provides a set of functions allowing to control the UART.
1896:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****      (+) HAL_MultiProcessor_EnableMuteMode() API enables mute mode
1897:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****      (+) HAL_MultiProcessor_DisableMuteMode() API disables mute mode
1898:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****      (+) HAL_MultiProcessor_EnterMuteMode() API enters mute mode
1899:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****      (+) HAL_HalfDuplex_EnableTransmitter() API disables receiver and enables transmitter
1900:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****      (+) HAL_HalfDuplex_EnableReceiver() API disables transmitter and enables receiver
1901:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****      (+) HAL_LIN_SendBreak() API transmits the break characters
1902:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** @endverbatim
1903:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @{
1904:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
1905:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1906:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
1907:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief Enable UART in mute mode (does not mean UART enters mute mode;
1908:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * to enter mute mode, HAL_MultiProcessor_EnterMuteMode() API must be called).
1909:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param huart UART handle.
1910:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval HAL status
1911:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
1912:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** HAL_StatusTypeDef HAL_MultiProcessor_EnableMuteMode(UART_HandleTypeDef *huart)
1913:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
ARM GAS  /tmp/cc8tmKB0.s 			page 35


1914:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Process Locked */
1915:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   __HAL_LOCK(huart);
1916:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1917:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
1918:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1919:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Enable USART mute mode by setting the MME bit in the CR1 register */
1920:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   SET_BIT(huart->Instance->CR1, USART_CR1_MME);
1921:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1922:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
1923:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1924:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   return (UART_CheckIdleState(huart));
1925:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
1926:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1927:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
1928:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief  Disable UART mute mode (does not mean the UART actually exits mute mode
1929:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *         as it may not have been in mute mode at this very moment).
1930:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param  huart UART handle.
1931:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval HAL status
1932:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
1933:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** HAL_StatusTypeDef HAL_MultiProcessor_DisableMuteMode(UART_HandleTypeDef *huart)
1934:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
1935:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Process Locked */
1936:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   __HAL_LOCK(huart);
1937:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1938:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
1939:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1940:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****    /* Disable USART mute mode by clearing the MME bit in the CR1 register */
1941:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, USART_CR1_MME);
1942:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1943:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
1944:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1945:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   return (UART_CheckIdleState(huart));
1946:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
1947:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1948:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
1949:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief Enter UART mute mode (means UART actually enters mute mode).
1950:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @note  To exit from mute mode, HAL_MultiProcessor_DisableMuteMode() API must be called.
1951:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param huart UART handle.
1952:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval None
1953:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
1954:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** void HAL_MultiProcessor_EnterMuteMode(UART_HandleTypeDef *huart)
1955:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
1956:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   __HAL_UART_SEND_REQ(huart, UART_MUTE_MODE_REQUEST);
1957:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
1958:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1959:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
1960:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief  Enable the UART transmitter and disable the UART receiver.
1961:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param  huart UART handle.
1962:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval HAL status
1963:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
1964:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** HAL_StatusTypeDef HAL_HalfDuplex_EnableTransmitter(UART_HandleTypeDef *huart)
1965:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
1966:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Process Locked */
1967:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   __HAL_LOCK(huart);
1968:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
1969:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1970:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Clear TE and RE bits */
ARM GAS  /tmp/cc8tmKB0.s 			page 36


1971:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_TE | USART_CR1_RE));
1972:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Enable the USART's transmit interface by setting the TE bit in the USART CR1 register */
1973:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   SET_BIT(huart->Instance->CR1, USART_CR1_TE);
1974:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1975:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
1976:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1977:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Process Unlocked */
1978:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   __HAL_UNLOCK(huart);
1979:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1980:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   return HAL_OK;
1981:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
1982:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1983:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
1984:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief  Enable the UART receiver and disable the UART transmitter.
1985:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param  huart UART handle.
1986:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval HAL status.
1987:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
1988:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** HAL_StatusTypeDef HAL_HalfDuplex_EnableReceiver(UART_HandleTypeDef *huart)
1989:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
1990:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Process Locked */
1991:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   __HAL_LOCK(huart);
1992:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
1993:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1994:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Clear TE and RE bits */
1995:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_TE | USART_CR1_RE));
1996:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Enable the USART's receive interface by setting the RE bit in the USART CR1 register */
1997:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   SET_BIT(huart->Instance->CR1, USART_CR1_RE);
1998:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1999:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
2000:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Process Unlocked */
2001:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   __HAL_UNLOCK(huart);
2002:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2003:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   return HAL_OK;
2004:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
2005:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2006:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2007:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
2008:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief  Transmit break characters.
2009:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param  huart UART handle.
2010:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval HAL status
2011:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
2012:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** HAL_StatusTypeDef HAL_LIN_SendBreak(UART_HandleTypeDef *huart)
2013:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
2014:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Check the parameters */
2015:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   assert_param(IS_UART_LIN_INSTANCE(huart->Instance));
2016:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2017:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Process Locked */
2018:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   __HAL_LOCK(huart);
2019:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2020:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
2021:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2022:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Send break characters */
2023:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->Instance->RQR |= UART_SENDBREAK_REQUEST;
2024:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2025:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
2026:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2027:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Process Unlocked */
ARM GAS  /tmp/cc8tmKB0.s 			page 37


2028:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   __HAL_UNLOCK(huart);
2029:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2030:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   return HAL_OK;
2031:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
2032:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2033:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2034:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
2035:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @}
2036:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
2037:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2038:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /** @defgroup UART_Exported_Functions_Group4 Peripheral State and Error functions
2039:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****  *  @brief   UART Peripheral State functions
2040:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****  *
2041:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** @verbatim
2042:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   ==============================================================================
2043:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****             ##### Peripheral State and Error functions #####
2044:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   ==============================================================================
2045:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     [..]
2046:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     This subsection provides functions allowing to :
2047:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       (+) Return the UART handle state.
2048:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       (+) Return the UART handle error code
2049:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2050:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** @endverbatim
2051:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @{
2052:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
2053:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2054:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
2055:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief  Return the UART handle state.
2056:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param  huart Pointer to a UART_HandleTypeDef structure that contains
2057:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *               the configuration information for the specified UART.
2058:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval HAL state
2059:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
2060:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** HAL_UART_StateTypeDef HAL_UART_GetState(UART_HandleTypeDef *huart)
2061:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
2062:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   uint32_t temp1= 0x00U, temp2 = 0x00U;
2063:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   temp1 = huart->gState;
2064:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   temp2 = huart->RxState;
2065:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2066:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   return (HAL_UART_StateTypeDef)(temp1 | temp2);
2067:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
2068:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2069:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
2070:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief  Return the UART handle error code.
2071:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param  huart Pointer to a UART_HandleTypeDef structure that contains
2072:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *               the configuration information for the specified UART.
2073:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval UART Error Code
2074:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
2075:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** uint32_t HAL_UART_GetError(UART_HandleTypeDef *huart)
2076:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
2077:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   return huart->ErrorCode;
2078:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
2079:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
2080:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @}
2081:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
2082:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2083:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
2084:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @}
ARM GAS  /tmp/cc8tmKB0.s 			page 38


2085:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
2086:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2087:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /** @defgroup UART_Private_Functions UART Private Functions
2088:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @{
2089:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
2090:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2091:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
2092:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief Configure the UART peripheral.
2093:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param huart UART handle.
2094:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval HAL status
2095:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
2096:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** HAL_StatusTypeDef UART_SetConfig(UART_HandleTypeDef *huart)
2097:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
2098:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   uint32_t tmpreg                     = 0x00000000U;
2099:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   UART_ClockSourceTypeDef clocksource = UART_CLOCKSOURCE_UNDEFINED;
2100:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   uint16_t brrtemp                    = 0x0000U;
2101:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   uint16_t usartdiv                   = 0x0000U;
2102:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   HAL_StatusTypeDef ret               = HAL_OK;
2103:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2104:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Check the parameters */
2105:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   assert_param(IS_UART_BAUDRATE(huart->Init.BaudRate));
2106:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   assert_param(IS_UART_WORD_LENGTH(huart->Init.WordLength));
2107:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   assert_param(IS_UART_STOPBITS(huart->Init.StopBits));
2108:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   assert_param(IS_UART_PARITY(huart->Init.Parity));
2109:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   assert_param(IS_UART_MODE(huart->Init.Mode));
2110:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   assert_param(IS_UART_HARDWARE_FLOW_CONTROL(huart->Init.HwFlowCtl));
2111:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   assert_param(IS_UART_ONE_BIT_SAMPLE(huart->Init.OneBitSampling));
2112:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   assert_param(IS_UART_OVERSAMPLING(huart->Init.OverSampling));
2113:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2114:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2115:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /*-------------------------- USART CR1 Configuration -----------------------*/
2116:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Clear M, PCE, PS, TE, RE and OVER8 bits and configure
2117:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****    *  the UART Word Length, Parity, Mode and oversampling:
2118:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****    *  set the M bits according to huart->Init.WordLength value
2119:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****    *  set PCE and PS bits according to huart->Init.Parity value
2120:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****    *  set TE and RE bits according to huart->Init.Mode value
2121:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****    *  set OVER8 bit according to huart->Init.OverSampling value */
2122:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   tmpreg = (uint32_t)huart->Init.WordLength | huart->Init.Parity | huart->Init.Mode | huart->Init.O
2123:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   MODIFY_REG(huart->Instance->CR1, UART_CR1_FIELDS, tmpreg);
2124:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2125:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /*-------------------------- USART CR2 Configuration -----------------------*/
2126:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Configure the UART Stop Bits: Set STOP[13:12] bits according
2127:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****    * to huart->Init.StopBits value */
2128:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   MODIFY_REG(huart->Instance->CR2, USART_CR2_STOP, huart->Init.StopBits);
2129:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2130:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /*-------------------------- USART CR3 Configuration -----------------------*/
2131:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Configure
2132:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****    * - UART HardWare Flow Control: set CTSE and RTSE bits according
2133:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****    *   to huart->Init.HwFlowCtl value
2134:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****    * - one-bit sampling method versus three samples' majority rule according
2135:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****    *   to huart->Init.OneBitSampling */
2136:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   tmpreg = (uint32_t)huart->Init.HwFlowCtl | huart->Init.OneBitSampling ;
2137:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   MODIFY_REG(huart->Instance->CR3, (USART_CR3_RTSE | USART_CR3_CTSE | USART_CR3_ONEBIT), tmpreg);
2138:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2139:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /*-------------------------- USART BRR Configuration -----------------------*/
2140:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   UART_GETCLOCKSOURCE(huart, clocksource);
2141:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
ARM GAS  /tmp/cc8tmKB0.s 			page 39


2142:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Check UART Over Sampling to set Baud Rate Register */
2143:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if (huart->Init.OverSampling == UART_OVERSAMPLING_8)
2144:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
2145:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     switch (clocksource)
2146:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
2147:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       case UART_CLOCKSOURCE_PCLK1:
2148:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         usartdiv = (uint16_t)(UART_DIV_SAMPLING8(HAL_RCC_GetPCLK1Freq(), huart->Init.BaudRate));
2149:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         break;
2150:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       case UART_CLOCKSOURCE_PCLK2:
2151:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         usartdiv = (uint16_t)(UART_DIV_SAMPLING8(HAL_RCC_GetPCLK2Freq(), huart->Init.BaudRate));
2152:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         break;
2153:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       case UART_CLOCKSOURCE_HSI:
2154:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         usartdiv = (uint16_t)(UART_DIV_SAMPLING8(HSI_VALUE, huart->Init.BaudRate));
2155:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         break;
2156:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       case UART_CLOCKSOURCE_SYSCLK:
2157:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         usartdiv = (uint16_t)(UART_DIV_SAMPLING8(HAL_RCC_GetSysClockFreq(), huart->Init.BaudRate));
2158:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         break;
2159:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       case UART_CLOCKSOURCE_LSE:
2160:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         usartdiv = (uint16_t)(UART_DIV_SAMPLING8(LSE_VALUE, huart->Init.BaudRate));
2161:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         break;
2162:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       case UART_CLOCKSOURCE_UNDEFINED:
2163:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       default:
2164:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         ret = HAL_ERROR;
2165:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         break;
2166:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
2167:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2168:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     brrtemp = usartdiv & 0xFFF0U;
2169:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     brrtemp |= (uint16_t)((usartdiv & (uint16_t)0x000FU) >> 1U);
2170:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->Instance->BRR = brrtemp;
2171:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
2172:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   else
2173:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
2174:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     switch (clocksource)
2175:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
2176:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       case UART_CLOCKSOURCE_PCLK1:
2177:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         huart->Instance->BRR = (uint16_t)(UART_DIV_SAMPLING16(HAL_RCC_GetPCLK1Freq(), huart->Init.B
2178:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         break;
2179:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       case UART_CLOCKSOURCE_PCLK2:
2180:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         huart->Instance->BRR = (uint16_t)(UART_DIV_SAMPLING16(HAL_RCC_GetPCLK2Freq(), huart->Init.B
2181:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         break;
2182:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       case UART_CLOCKSOURCE_HSI:
2183:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         huart->Instance->BRR = (uint16_t)(UART_DIV_SAMPLING16(HSI_VALUE, huart->Init.BaudRate));
2184:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         break;
2185:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       case UART_CLOCKSOURCE_SYSCLK:
2186:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         huart->Instance->BRR = (uint16_t)(UART_DIV_SAMPLING16(HAL_RCC_GetSysClockFreq(), huart->Ini
2187:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         break;
2188:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       case UART_CLOCKSOURCE_LSE:
2189:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         huart->Instance->BRR = (uint16_t)(UART_DIV_SAMPLING16(LSE_VALUE, huart->Init.BaudRate));
2190:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         break;
2191:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       case UART_CLOCKSOURCE_UNDEFINED:
2192:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       default:
2193:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         ret = HAL_ERROR;
2194:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         break;
2195:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
2196:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
2197:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2198:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   return ret;
ARM GAS  /tmp/cc8tmKB0.s 			page 40


2199:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2200:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
2201:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2202:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
2203:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief Configure the UART peripheral advanced features.
2204:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param huart UART handle.
2205:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval None
2206:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
2207:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** void UART_AdvFeatureConfig(UART_HandleTypeDef *huart)
2208:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
2209:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Check whether the set of advanced features to configure is properly set */
2210:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   assert_param(IS_UART_ADVFEATURE_INIT(huart->AdvancedInit.AdvFeatureInit));
2211:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2212:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* if required, configure TX pin active level inversion */
2213:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if(HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_TXINVERT_INIT))
2214:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
2215:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     assert_param(IS_UART_ADVFEATURE_TXINV(huart->AdvancedInit.TxPinLevelInvert));
2216:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR2, USART_CR2_TXINV, huart->AdvancedInit.TxPinLevelInvert);
2217:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
2218:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2219:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* if required, configure RX pin active level inversion */
2220:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if(HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_RXINVERT_INIT))
2221:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
2222:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     assert_param(IS_UART_ADVFEATURE_RXINV(huart->AdvancedInit.RxPinLevelInvert));
2223:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR2, USART_CR2_RXINV, huart->AdvancedInit.RxPinLevelInvert);
2224:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
2225:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2226:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* if required, configure data inversion */
2227:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if(HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_DATAINVERT_INIT))
2228:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
2229:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     assert_param(IS_UART_ADVFEATURE_DATAINV(huart->AdvancedInit.DataInvert));
2230:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR2, USART_CR2_DATAINV, huart->AdvancedInit.DataInvert);
2231:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
2232:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2233:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* if required, configure RX/TX pins swap */
2234:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if(HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_SWAP_INIT))
2235:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
2236:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     assert_param(IS_UART_ADVFEATURE_SWAP(huart->AdvancedInit.Swap));
2237:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR2, USART_CR2_SWAP, huart->AdvancedInit.Swap);
2238:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
2239:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2240:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* if required, configure RX overrun detection disabling */
2241:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if(HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_RXOVERRUNDISABLE_INIT))
2242:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
2243:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     assert_param(IS_UART_OVERRUN(huart->AdvancedInit.OverrunDisable));
2244:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR3, USART_CR3_OVRDIS, huart->AdvancedInit.OverrunDisable);
2245:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
2246:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2247:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* if required, configure DMA disabling on reception error */
2248:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if(HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_DMADISABLEONERROR_INIT))
2249:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
2250:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     assert_param(IS_UART_ADVFEATURE_DMAONRXERROR(huart->AdvancedInit.DMADisableonRxError));
2251:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR3, USART_CR3_DDRE, huart->AdvancedInit.DMADisableonRxError);
2252:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
2253:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2254:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* if required, configure auto Baud rate detection scheme */
2255:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if(HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_AUTOBAUDRATE_INIT))
ARM GAS  /tmp/cc8tmKB0.s 			page 41


2256:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
2257:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     assert_param(IS_USART_AUTOBAUDRATE_DETECTION_INSTANCE(huart->Instance));
2258:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     assert_param(IS_UART_ADVFEATURE_AUTOBAUDRATE(huart->AdvancedInit.AutoBaudRateEnable));
2259:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR2, USART_CR2_ABREN, huart->AdvancedInit.AutoBaudRateEnable);
2260:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* set auto Baudrate detection parameters if detection is enabled */
2261:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     if(huart->AdvancedInit.AutoBaudRateEnable == UART_ADVFEATURE_AUTOBAUDRATE_ENABLE)
2262:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
2263:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       assert_param(IS_UART_ADVFEATURE_AUTOBAUDRATEMODE(huart->AdvancedInit.AutoBaudRateMode));
2264:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       MODIFY_REG(huart->Instance->CR2, USART_CR2_ABRMODE, huart->AdvancedInit.AutoBaudRateMode);
2265:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
2266:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
2267:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2268:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* if required, configure MSB first on communication line */
2269:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if(HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_MSBFIRST_INIT))
2270:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
2271:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     assert_param(IS_UART_ADVFEATURE_MSBFIRST(huart->AdvancedInit.MSBFirst));
2272:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR2, USART_CR2_MSBFIRST, huart->AdvancedInit.MSBFirst);
2273:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
2274:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
2275:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2276:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
2277:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief Check the UART Idle State.
2278:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param huart UART handle.
2279:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval HAL status
2280:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
2281:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** HAL_StatusTypeDef UART_CheckIdleState(UART_HandleTypeDef *huart)
2282:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
2283:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   uint32_t tickstart = 0U;
2284:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2285:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Initialize the UART ErrorCode */
2286:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
2287:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2288:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Init tickstart for timeout managment*/
2289:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   tickstart = HAL_GetTick();
2290:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2291:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Check if the Transmitter is enabled */
2292:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if((huart->Instance->CR1 & USART_CR1_TE) == USART_CR1_TE)
2293:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
2294:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Wait until TEACK flag is set */
2295:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     if(UART_WaitOnFlagUntilTimeout(huart, USART_ISR_TEACK, RESET, tickstart, HAL_UART_TIMEOUT_VALUE
2296:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
2297:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       /* Timeout Occured */
2298:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       return HAL_TIMEOUT;
2299:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
2300:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
2301:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Check if the Receiver is enabled */
2302:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if((huart->Instance->CR1 & USART_CR1_RE) == USART_CR1_RE)
2303:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
2304:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Wait until REACK flag is set */
2305:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     if(UART_WaitOnFlagUntilTimeout(huart, USART_ISR_REACK, RESET, tickstart, HAL_UART_TIMEOUT_VALUE
2306:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
2307:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       /* Timeout Occured */
2308:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       return HAL_TIMEOUT;
2309:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
2310:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
2311:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2312:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Initialize the UART State */
ARM GAS  /tmp/cc8tmKB0.s 			page 42


2313:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->gState  = HAL_UART_STATE_READY;
2314:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
2315:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2316:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Process Unlocked */
2317:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   __HAL_UNLOCK(huart);
2318:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2319:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   return HAL_OK;
2320:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
2321:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2322:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
2323:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief  Handle UART Communication Timeout.
2324:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param  huart UART handle.
2325:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param  Flag Specifies the UART flag to check
2326:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param  Status Flag status (SET or RESET)
2327:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param  Tickstart Tick start value
2328:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param  Timeout Timeout duration
2329:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval HAL status
2330:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
2331:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** HAL_StatusTypeDef UART_WaitOnFlagUntilTimeout(UART_HandleTypeDef *huart, uint32_t Flag, FlagStatus 
2332:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
2333:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Wait until flag is set */
2334:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   while((__HAL_UART_GET_FLAG(huart, Flag) ? SET : RESET) == Status)
2335:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
2336:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Check for the Timeout */
2337:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     if(Timeout != HAL_MAX_DELAY)
2338:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
2339:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       if((Timeout == 0U) || ((HAL_GetTick()-Tickstart) > Timeout))
2340:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       {
2341:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         /* Disable TXE, RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts for t
2342:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE | USART_CR1_TXEIE));
2343:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
2344:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2345:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         huart->gState  = HAL_UART_STATE_READY;
2346:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         huart->RxState = HAL_UART_STATE_READY;
2347:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2348:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         /* Process Unlocked */
2349:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         __HAL_UNLOCK(huart);
2350:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         return HAL_TIMEOUT;
2351:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       }
2352:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
2353:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
2354:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   return HAL_OK;
2355:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
2356:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2357:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2358:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
2359:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief  End ongoing Tx transfer on UART peripheral (following error detection or Transmit compl
2360:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param  huart UART handle.
2361:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval None
2362:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
2363:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** static void UART_EndTxTransfer(UART_HandleTypeDef *huart)
2364:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
  27              		.loc 1 2364 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              		@ link register save eliminated.
ARM GAS  /tmp/cc8tmKB0.s 			page 43


  32              	.LVL0:
2365:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Disable TXEIE and TCIE interrupts */
2366:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_TXEIE | USART_CR1_TCIE));
  33              		.loc 1 2366 0
  34 0000 0268     		ldr	r2, [r0]
  35 0002 1368     		ldr	r3, [r2]
  36 0004 23F0C003 		bic	r3, r3, #192
  37 0008 1360     		str	r3, [r2]
2367:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2368:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* At end of Tx process, restore huart->gState to Ready */
2369:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
  38              		.loc 1 2369 0
  39 000a 2023     		movs	r3, #32
  40 000c 80F86930 		strb	r3, [r0, #105]
2370:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
  41              		.loc 1 2370 0
  42 0010 7047     		bx	lr
  43              		.cfi_endproc
  44              	.LFE169:
  46              		.section	.text.UART_EndRxTransfer,"ax",%progbits
  47              		.align	1
  48              		.syntax unified
  49              		.thumb
  50              		.thumb_func
  51              		.fpu fpv4-sp-d16
  53              	UART_EndRxTransfer:
  54              	.LFB170:
2371:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2372:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2373:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
2374:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief  End ongoing Rx transfer on UART peripheral (following error detection or Reception comp
2375:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param  huart UART handle.
2376:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval None
2377:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
2378:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** static void UART_EndRxTransfer(UART_HandleTypeDef *huart)
2379:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
  55              		.loc 1 2379 0
  56              		.cfi_startproc
  57              		@ args = 0, pretend = 0, frame = 0
  58              		@ frame_needed = 0, uses_anonymous_args = 0
  59              		@ link register save eliminated.
  60              	.LVL1:
2380:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Disable RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
2381:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE));
  61              		.loc 1 2381 0
  62 0000 0268     		ldr	r2, [r0]
  63 0002 1368     		ldr	r3, [r2]
  64 0004 23F49073 		bic	r3, r3, #288
  65 0008 1360     		str	r3, [r2]
2382:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
  66              		.loc 1 2382 0
  67 000a 0268     		ldr	r2, [r0]
  68 000c 9368     		ldr	r3, [r2, #8]
  69 000e 23F00103 		bic	r3, r3, #1
  70 0012 9360     		str	r3, [r2, #8]
2383:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2384:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* At end of Rx process, restore huart->RxState to Ready */
ARM GAS  /tmp/cc8tmKB0.s 			page 44


2385:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
  71              		.loc 1 2385 0
  72 0014 2023     		movs	r3, #32
  73 0016 80F86A30 		strb	r3, [r0, #106]
2386:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
  74              		.loc 1 2386 0
  75 001a 7047     		bx	lr
  76              		.cfi_endproc
  77              	.LFE170:
  79              		.section	.text.HAL_UART_MspInit,"ax",%progbits
  80              		.align	1
  81              		.weak	HAL_UART_MspInit
  82              		.syntax unified
  83              		.thumb
  84              		.thumb_func
  85              		.fpu fpv4-sp-d16
  87              	HAL_UART_MspInit:
  88              	.LFB131:
 610:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
  89              		.loc 1 610 0
  90              		.cfi_startproc
  91              		@ args = 0, pretend = 0, frame = 0
  92              		@ frame_needed = 0, uses_anonymous_args = 0
  93              		@ link register save eliminated.
  94              	.LVL2:
 617:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
  95              		.loc 1 617 0
  96 0000 7047     		bx	lr
  97              		.cfi_endproc
  98              	.LFE131:
 100              		.section	.text.HAL_UART_MspDeInit,"ax",%progbits
 101              		.align	1
 102              		.weak	HAL_UART_MspDeInit
 103              		.syntax unified
 104              		.thumb
 105              		.thumb_func
 106              		.fpu fpv4-sp-d16
 108              	HAL_UART_MspDeInit:
 109              	.LFB132:
 625:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 110              		.loc 1 625 0
 111              		.cfi_startproc
 112              		@ args = 0, pretend = 0, frame = 0
 113              		@ frame_needed = 0, uses_anonymous_args = 0
 114              		@ link register save eliminated.
 115              	.LVL3:
 632:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 116              		.loc 1 632 0
 117 0000 7047     		bx	lr
 118              		.cfi_endproc
 119              	.LFE132:
 121              		.section	.text.HAL_UART_DeInit,"ax",%progbits
 122              		.align	1
 123              		.global	HAL_UART_DeInit
 124              		.syntax unified
 125              		.thumb
 126              		.thumb_func
ARM GAS  /tmp/cc8tmKB0.s 			page 45


 127              		.fpu fpv4-sp-d16
 129              	HAL_UART_DeInit:
 130              	.LFB130:
 572:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Check the UART handle allocation */
 131              		.loc 1 572 0
 132              		.cfi_startproc
 133              		@ args = 0, pretend = 0, frame = 0
 134              		@ frame_needed = 0, uses_anonymous_args = 0
 135              	.LVL4:
 574:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 136              		.loc 1 574 0
 137 0000 0028     		cmp	r0, #0
 138 0002 35D0     		beq	.L8
 572:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Check the UART handle allocation */
 139              		.loc 1 572 0
 140 0004 38B5     		push	{r3, r4, r5, lr}
 141              	.LCFI0:
 142              		.cfi_def_cfa_offset 16
 143              		.cfi_offset 3, -16
 144              		.cfi_offset 4, -12
 145              		.cfi_offset 5, -8
 146              		.cfi_offset 14, -4
 147 0006 0446     		mov	r4, r0
 580:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 148              		.loc 1 580 0
 149 0008 0368     		ldr	r3, [r0]
 150 000a 1A4A     		ldr	r2, .L13
 151 000c 9342     		cmp	r3, r2
 152 000e 14D0     		beq	.L7
 580:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 153              		.loc 1 580 0 is_stmt 0 discriminator 1
 154 0010 A2F57442 		sub	r2, r2, #62464
 155 0014 9342     		cmp	r3, r2
 156 0016 10D0     		beq	.L7
 580:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 157              		.loc 1 580 0 discriminator 2
 158 0018 02F58062 		add	r2, r2, #1024
 159 001c 9342     		cmp	r3, r2
 160 001e 0CD0     		beq	.L7
 580:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 161              		.loc 1 580 0 discriminator 3
 162 0020 02F58062 		add	r2, r2, #1024
 163 0024 9342     		cmp	r3, r2
 164 0026 08D0     		beq	.L7
 580:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 165              		.loc 1 580 0 discriminator 4
 166 0028 02F58062 		add	r2, r2, #1024
 167 002c 9342     		cmp	r3, r2
 168 002e 04D0     		beq	.L7
 580:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 169              		.loc 1 580 0 discriminator 5
 170 0030 4FF41171 		mov	r1, #580
 171 0034 1048     		ldr	r0, .L13+4
 172              	.LVL5:
 173 0036 FFF7FEFF 		bl	assert_failed
 174              	.LVL6:
 175              	.L7:
ARM GAS  /tmp/cc8tmKB0.s 			page 46


 582:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 176              		.loc 1 582 0 is_stmt 1
 177 003a 2423     		movs	r3, #36
 178 003c 84F86930 		strb	r3, [r4, #105]
 585:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 179              		.loc 1 585 0
 180 0040 2268     		ldr	r2, [r4]
 181 0042 1368     		ldr	r3, [r2]
 182 0044 23F00103 		bic	r3, r3, #1
 183 0048 1360     		str	r3, [r2]
 587:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->Instance->CR2 = 0x0U;
 184              		.loc 1 587 0
 185 004a 2368     		ldr	r3, [r4]
 186 004c 0025     		movs	r5, #0
 187 004e 1D60     		str	r5, [r3]
 588:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->Instance->CR3 = 0x0U;
 188              		.loc 1 588 0
 189 0050 2368     		ldr	r3, [r4]
 190 0052 5D60     		str	r5, [r3, #4]
 589:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 191              		.loc 1 589 0
 192 0054 2368     		ldr	r3, [r4]
 193 0056 9D60     		str	r5, [r3, #8]
 592:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 194              		.loc 1 592 0
 195 0058 2046     		mov	r0, r4
 196 005a FFF7FEFF 		bl	HAL_UART_MspDeInit
 197              	.LVL7:
 594:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->gState    = HAL_UART_STATE_RESET;
 198              		.loc 1 594 0
 199 005e E566     		str	r5, [r4, #108]
 595:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->RxState   = HAL_UART_STATE_RESET;
 200              		.loc 1 595 0
 201 0060 84F86950 		strb	r5, [r4, #105]
 596:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 202              		.loc 1 596 0
 203 0064 84F86A50 		strb	r5, [r4, #106]
 599:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 204              		.loc 1 599 0
 205 0068 84F86850 		strb	r5, [r4, #104]
 601:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
 206              		.loc 1 601 0
 207 006c 2846     		mov	r0, r5
 602:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 208              		.loc 1 602 0
 209 006e 38BD     		pop	{r3, r4, r5, pc}
 210              	.LVL8:
 211              	.L8:
 212              	.LCFI1:
 213              		.cfi_def_cfa_offset 0
 214              		.cfi_restore 3
 215              		.cfi_restore 4
 216              		.cfi_restore 5
 217              		.cfi_restore 14
 576:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 218              		.loc 1 576 0
 219 0070 0120     		movs	r0, #1
ARM GAS  /tmp/cc8tmKB0.s 			page 47


 220              	.LVL9:
 602:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 221              		.loc 1 602 0
 222 0072 7047     		bx	lr
 223              	.L14:
 224              		.align	2
 225              	.L13:
 226 0074 00380140 		.word	1073821696
 227 0078 00000000 		.word	.LC0
 228              		.cfi_endproc
 229              	.LFE130:
 231              		.section	.text.HAL_UART_Transmit_IT,"ax",%progbits
 232              		.align	1
 233              		.global	HAL_UART_Transmit_IT
 234              		.syntax unified
 235              		.thumb
 236              		.thumb_func
 237              		.fpu fpv4-sp-d16
 239              	HAL_UART_Transmit_IT:
 240              	.LFB135:
 864:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Check that a Tx process is not already ongoing */
 241              		.loc 1 864 0
 242              		.cfi_startproc
 243              		@ args = 0, pretend = 0, frame = 0
 244              		@ frame_needed = 0, uses_anonymous_args = 0
 245              		@ link register save eliminated.
 246              	.LVL10:
 866:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 247              		.loc 1 866 0
 248 0000 90F86930 		ldrb	r3, [r0, #105]	@ zero_extendqisi2
 249 0004 DBB2     		uxtb	r3, r3
 250 0006 202B     		cmp	r3, #32
 251 0008 18D1     		bne	.L17
 868:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 252              		.loc 1 868 0
 253 000a C9B1     		cbz	r1, .L18
 868:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 254              		.loc 1 868 0 is_stmt 0 discriminator 1
 255 000c D2B1     		cbz	r2, .L19
 874:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 256              		.loc 1 874 0 is_stmt 1
 257 000e 90F86830 		ldrb	r3, [r0, #104]	@ zero_extendqisi2
 258 0012 012B     		cmp	r3, #1
 259 0014 18D0     		beq	.L20
 876:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->TxXferSize = Size;
 260              		.loc 1 876 0 discriminator 2
 261 0016 C164     		str	r1, [r0, #76]
 877:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->TxXferCount = Size;
 262              		.loc 1 877 0 discriminator 2
 263 0018 A0F85020 		strh	r2, [r0, #80]	@ movhi
 878:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 264              		.loc 1 878 0 discriminator 2
 265 001c A0F85220 		strh	r2, [r0, #82]	@ movhi
 880:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_BUSY_TX;
 266              		.loc 1 880 0 discriminator 2
 267 0020 0023     		movs	r3, #0
 268 0022 C366     		str	r3, [r0, #108]
ARM GAS  /tmp/cc8tmKB0.s 			page 48


 881:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 269              		.loc 1 881 0 discriminator 2
 270 0024 2122     		movs	r2, #33
 271              	.LVL11:
 272 0026 80F86920 		strb	r2, [r0, #105]
 884:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 273              		.loc 1 884 0 discriminator 2
 274 002a 80F86830 		strb	r3, [r0, #104]
 887:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 275              		.loc 1 887 0 discriminator 2
 276 002e 0168     		ldr	r1, [r0]
 277              	.LVL12:
 278 0030 0A68     		ldr	r2, [r1]
 279 0032 42F08002 		orr	r2, r2, #128
 280 0036 0A60     		str	r2, [r1]
 281              	.LVL13:
 889:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 282              		.loc 1 889 0 discriminator 2
 283 0038 1846     		mov	r0, r3
 284              	.LVL14:
 285 003a 7047     		bx	lr
 286              	.LVL15:
 287              	.L17:
 893:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 288              		.loc 1 893 0
 289 003c 0220     		movs	r0, #2
 290              	.LVL16:
 291 003e 7047     		bx	lr
 292              	.LVL17:
 293              	.L18:
 870:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
 294              		.loc 1 870 0
 295 0040 0120     		movs	r0, #1
 296              	.LVL18:
 297 0042 7047     		bx	lr
 298              	.LVL19:
 299              	.L19:
 300 0044 0120     		movs	r0, #1
 301              	.LVL20:
 302 0046 7047     		bx	lr
 303              	.LVL21:
 304              	.L20:
 874:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 305              		.loc 1 874 0
 306 0048 0220     		movs	r0, #2
 307              	.LVL22:
 895:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 308              		.loc 1 895 0
 309 004a 7047     		bx	lr
 310              		.cfi_endproc
 311              	.LFE135:
 313              		.section	.text.HAL_UART_Receive_IT,"ax",%progbits
 314              		.align	1
 315              		.global	HAL_UART_Receive_IT
 316              		.syntax unified
 317              		.thumb
 318              		.thumb_func
ARM GAS  /tmp/cc8tmKB0.s 			page 49


 319              		.fpu fpv4-sp-d16
 321              	HAL_UART_Receive_IT:
 322              	.LFB136:
 905:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Check that a Rx process is not already ongoing */
 323              		.loc 1 905 0
 324              		.cfi_startproc
 325              		@ args = 0, pretend = 0, frame = 0
 326              		@ frame_needed = 0, uses_anonymous_args = 0
 327              		@ link register save eliminated.
 328              	.LVL23:
 907:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 329              		.loc 1 907 0
 330 0000 90F86A30 		ldrb	r3, [r0, #106]	@ zero_extendqisi2
 331 0004 DBB2     		uxtb	r3, r3
 332 0006 202B     		cmp	r3, #32
 333 0008 49D1     		bne	.L29
 909:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 334              		.loc 1 909 0
 335 000a 0029     		cmp	r1, #0
 336 000c 49D0     		beq	.L30
 909:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 337              		.loc 1 909 0 is_stmt 0 discriminator 1
 338 000e 002A     		cmp	r2, #0
 339 0010 49D0     		beq	.L31
 915:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 340              		.loc 1 915 0 is_stmt 1
 341 0012 90F86830 		ldrb	r3, [r0, #104]	@ zero_extendqisi2
 342 0016 012B     		cmp	r3, #1
 343 0018 47D0     		beq	.L32
 915:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 344              		.loc 1 915 0 is_stmt 0 discriminator 2
 345 001a 0123     		movs	r3, #1
 346 001c 80F86830 		strb	r3, [r0, #104]
 917:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->RxXferSize = Size;
 347              		.loc 1 917 0 is_stmt 1 discriminator 2
 348 0020 4165     		str	r1, [r0, #84]
 918:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->RxXferCount = Size;
 349              		.loc 1 918 0 discriminator 2
 350 0022 A0F85820 		strh	r2, [r0, #88]	@ movhi
 919:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 351              		.loc 1 919 0 discriminator 2
 352 0026 A0F85A20 		strh	r2, [r0, #90]	@ movhi
 922:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 353              		.loc 1 922 0 discriminator 2
 354 002a 8368     		ldr	r3, [r0, #8]
 355 002c B3F5805F 		cmp	r3, #4096
 356 0030 06D0     		beq	.L33
 357 0032 A3B9     		cbnz	r3, .L26
 922:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 358              		.loc 1 922 0 is_stmt 0 discriminator 5
 359 0034 0369     		ldr	r3, [r0, #16]
 360 0036 73B9     		cbnz	r3, .L27
 922:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 361              		.loc 1 922 0 discriminator 7
 362 0038 FF23     		movs	r3, #255
 363 003a A0F85C30 		strh	r3, [r0, #92]	@ movhi
 364 003e 11E0     		b	.L25
ARM GAS  /tmp/cc8tmKB0.s 			page 50


 365              	.L33:
 922:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 366              		.loc 1 922 0 discriminator 1
 367 0040 0369     		ldr	r3, [r0, #16]
 368 0042 23B9     		cbnz	r3, .L24
 922:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 369              		.loc 1 922 0 discriminator 3
 370 0044 40F2FF13 		movw	r3, #511
 371 0048 A0F85C30 		strh	r3, [r0, #92]	@ movhi
 372 004c 0AE0     		b	.L25
 373              	.L24:
 922:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 374              		.loc 1 922 0 discriminator 4
 375 004e FF23     		movs	r3, #255
 376 0050 A0F85C30 		strh	r3, [r0, #92]	@ movhi
 377 0054 06E0     		b	.L25
 378              	.L27:
 922:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 379              		.loc 1 922 0 discriminator 8
 380 0056 7F23     		movs	r3, #127
 381 0058 A0F85C30 		strh	r3, [r0, #92]	@ movhi
 382 005c 02E0     		b	.L25
 383              	.L26:
 922:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 384              		.loc 1 922 0 discriminator 6
 385 005e B3F1805F 		cmp	r3, #268435456
 386 0062 12D0     		beq	.L34
 387              	.L25:
 924:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_BUSY_RX;
 388              		.loc 1 924 0 is_stmt 1
 389 0064 0023     		movs	r3, #0
 390 0066 C366     		str	r3, [r0, #108]
 925:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 391              		.loc 1 925 0
 392 0068 2222     		movs	r2, #34
 393              	.LVL24:
 394 006a 80F86A20 		strb	r2, [r0, #106]
 928:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 395              		.loc 1 928 0
 396 006e 80F86830 		strb	r3, [r0, #104]
 931:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 397              		.loc 1 931 0
 398 0072 0168     		ldr	r1, [r0]
 399              	.LVL25:
 400 0074 8A68     		ldr	r2, [r1, #8]
 401 0076 42F00102 		orr	r2, r2, #1
 402 007a 8A60     		str	r2, [r1, #8]
 403              	.LVL26:
 934:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 404              		.loc 1 934 0
 405 007c 0168     		ldr	r1, [r0]
 406 007e 0A68     		ldr	r2, [r1]
 407 0080 42F49072 		orr	r2, r2, #288
 408 0084 0A60     		str	r2, [r1]
 936:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 409              		.loc 1 936 0
 410 0086 1846     		mov	r0, r3
ARM GAS  /tmp/cc8tmKB0.s 			page 51


 411              	.LVL27:
 412 0088 7047     		bx	lr
 413              	.LVL28:
 414              	.L34:
 922:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 415              		.loc 1 922 0 discriminator 9
 416 008a 0369     		ldr	r3, [r0, #16]
 417 008c 1BB9     		cbnz	r3, .L28
 922:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 418              		.loc 1 922 0 is_stmt 0 discriminator 10
 419 008e 7F23     		movs	r3, #127
 420 0090 A0F85C30 		strh	r3, [r0, #92]	@ movhi
 421 0094 E6E7     		b	.L25
 422              	.L28:
 922:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 423              		.loc 1 922 0 discriminator 11
 424 0096 3F23     		movs	r3, #63
 425 0098 A0F85C30 		strh	r3, [r0, #92]	@ movhi
 426 009c E2E7     		b	.L25
 427              	.L29:
 940:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 428              		.loc 1 940 0 is_stmt 1
 429 009e 0220     		movs	r0, #2
 430              	.LVL29:
 431 00a0 7047     		bx	lr
 432              	.LVL30:
 433              	.L30:
 911:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
 434              		.loc 1 911 0
 435 00a2 0120     		movs	r0, #1
 436              	.LVL31:
 437 00a4 7047     		bx	lr
 438              	.LVL32:
 439              	.L31:
 440 00a6 0120     		movs	r0, #1
 441              	.LVL33:
 442 00a8 7047     		bx	lr
 443              	.LVL34:
 444              	.L32:
 915:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 445              		.loc 1 915 0
 446 00aa 0220     		movs	r0, #2
 447              	.LVL35:
 942:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 448              		.loc 1 942 0
 449 00ac 7047     		bx	lr
 450              		.cfi_endproc
 451              	.LFE136:
 453              		.section	.text.HAL_UART_Transmit_DMA,"ax",%progbits
 454              		.align	1
 455              		.global	HAL_UART_Transmit_DMA
 456              		.syntax unified
 457              		.thumb
 458              		.thumb_func
 459              		.fpu fpv4-sp-d16
 461              	HAL_UART_Transmit_DMA:
 462              	.LFB137:
ARM GAS  /tmp/cc8tmKB0.s 			page 52


 955:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Check if UART instance supports continuous communication using DMA */
 463              		.loc 1 955 0
 464              		.cfi_startproc
 465              		@ args = 0, pretend = 0, frame = 0
 466              		@ frame_needed = 0, uses_anonymous_args = 0
 467              	.LVL36:
 468 0000 38B5     		push	{r3, r4, r5, lr}
 469              	.LCFI2:
 470              		.cfi_def_cfa_offset 16
 471              		.cfi_offset 3, -16
 472              		.cfi_offset 4, -12
 473              		.cfi_offset 5, -8
 474              		.cfi_offset 14, -4
 960:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 475              		.loc 1 960 0
 476 0002 90F86950 		ldrb	r5, [r0, #105]	@ zero_extendqisi2
 477 0006 EDB2     		uxtb	r5, r5
 478 0008 202D     		cmp	r5, #32
 479 000a 33D1     		bne	.L37
 962:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 480              		.loc 1 962 0
 481 000c 0029     		cmp	r1, #0
 482 000e 33D0     		beq	.L38
 962:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 483              		.loc 1 962 0 is_stmt 0 discriminator 1
 484 0010 002A     		cmp	r2, #0
 485 0012 33D0     		beq	.L39
 968:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 486              		.loc 1 968 0 is_stmt 1
 487 0014 90F86830 		ldrb	r3, [r0, #104]	@ zero_extendqisi2
 488 0018 012B     		cmp	r3, #1
 489 001a 31D0     		beq	.L40
 490 001c 1346     		mov	r3, r2
 491 001e 0446     		mov	r4, r0
 968:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 492              		.loc 1 968 0 is_stmt 0 discriminator 2
 493 0020 0122     		movs	r2, #1
 494              	.LVL37:
 495 0022 80F86820 		strb	r2, [r0, #104]
 970:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->TxXferSize = Size;
 496              		.loc 1 970 0 is_stmt 1 discriminator 2
 497 0026 C164     		str	r1, [r0, #76]
 971:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->TxXferCount = Size;
 498              		.loc 1 971 0 discriminator 2
 499 0028 A0F85030 		strh	r3, [r0, #80]	@ movhi
 972:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 500              		.loc 1 972 0 discriminator 2
 501 002c A0F85230 		strh	r3, [r0, #82]	@ movhi
 974:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_BUSY_TX;
 502              		.loc 1 974 0 discriminator 2
 503 0030 0025     		movs	r5, #0
 504 0032 C566     		str	r5, [r0, #108]
 975:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 505              		.loc 1 975 0 discriminator 2
 506 0034 2122     		movs	r2, #33
 507 0036 80F86920 		strb	r2, [r0, #105]
 978:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
ARM GAS  /tmp/cc8tmKB0.s 			page 53


 508              		.loc 1 978 0 discriminator 2
 509 003a 026E     		ldr	r2, [r0, #96]
 510 003c 1149     		ldr	r1, .L42
 511              	.LVL38:
 512 003e 9162     		str	r1, [r2, #40]
 513              	.LVL39:
 981:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 514              		.loc 1 981 0 discriminator 2
 515 0040 026E     		ldr	r2, [r0, #96]
 516 0042 1149     		ldr	r1, .L42+4
 517 0044 D162     		str	r1, [r2, #44]
 984:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 518              		.loc 1 984 0 discriminator 2
 519 0046 026E     		ldr	r2, [r0, #96]
 520 0048 1049     		ldr	r1, .L42+8
 521 004a 1163     		str	r1, [r2, #48]
 987:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 522              		.loc 1 987 0 discriminator 2
 523 004c 026E     		ldr	r2, [r0, #96]
 524 004e 5563     		str	r5, [r2, #52]
 990:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 525              		.loc 1 990 0 discriminator 2
 526 0050 0268     		ldr	r2, [r0]
 527 0052 2832     		adds	r2, r2, #40
 528 0054 C16C     		ldr	r1, [r0, #76]
 529 0056 006E     		ldr	r0, [r0, #96]
 530              	.LVL40:
 531 0058 FFF7FEFF 		bl	HAL_DMA_Start_IT
 532              	.LVL41:
 993:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 533              		.loc 1 993 0 discriminator 2
 534 005c 2368     		ldr	r3, [r4]
 535 005e 4022     		movs	r2, #64
 536 0060 1A62     		str	r2, [r3, #32]
 996:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 537              		.loc 1 996 0 discriminator 2
 538 0062 84F86850 		strb	r5, [r4, #104]
1000:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 539              		.loc 1 1000 0 discriminator 2
 540 0066 2268     		ldr	r2, [r4]
 541 0068 9368     		ldr	r3, [r2, #8]
 542 006a 43F08003 		orr	r3, r3, #128
 543 006e 9360     		str	r3, [r2, #8]
1002:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 544              		.loc 1 1002 0 discriminator 2
 545 0070 2846     		mov	r0, r5
 546 0072 00E0     		b	.L36
 547              	.LVL42:
 548              	.L37:
1006:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 549              		.loc 1 1006 0
 550 0074 0220     		movs	r0, #2
 551              	.LVL43:
 552              	.L36:
1008:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 553              		.loc 1 1008 0
 554 0076 38BD     		pop	{r3, r4, r5, pc}
ARM GAS  /tmp/cc8tmKB0.s 			page 54


 555              	.LVL44:
 556              	.L38:
 964:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
 557              		.loc 1 964 0
 558 0078 0120     		movs	r0, #1
 559              	.LVL45:
 560 007a FCE7     		b	.L36
 561              	.LVL46:
 562              	.L39:
 563 007c 0120     		movs	r0, #1
 564              	.LVL47:
 565 007e FAE7     		b	.L36
 566              	.LVL48:
 567              	.L40:
 968:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 568              		.loc 1 968 0
 569 0080 0220     		movs	r0, #2
 570              	.LVL49:
 571 0082 F8E7     		b	.L36
 572              	.L43:
 573              		.align	2
 574              	.L42:
 575 0084 00000000 		.word	UART_DMATransmitCplt
 576 0088 00000000 		.word	UART_DMATxHalfCplt
 577 008c 00000000 		.word	UART_DMAError
 578              		.cfi_endproc
 579              	.LFE137:
 581              		.section	.text.HAL_UART_Receive_DMA,"ax",%progbits
 582              		.align	1
 583              		.global	HAL_UART_Receive_DMA
 584              		.syntax unified
 585              		.thumb
 586              		.thumb_func
 587              		.fpu fpv4-sp-d16
 589              	HAL_UART_Receive_DMA:
 590              	.LFB138:
1023:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Check if UART instance supports continuous communication using DMA */
 591              		.loc 1 1023 0
 592              		.cfi_startproc
 593              		@ args = 0, pretend = 0, frame = 0
 594              		@ frame_needed = 0, uses_anonymous_args = 0
 595              	.LVL50:
 596 0000 38B5     		push	{r3, r4, r5, lr}
 597              	.LCFI3:
 598              		.cfi_def_cfa_offset 16
 599              		.cfi_offset 3, -16
 600              		.cfi_offset 4, -12
 601              		.cfi_offset 5, -8
 602              		.cfi_offset 14, -4
1028:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 603              		.loc 1 1028 0
 604 0002 90F86A50 		ldrb	r5, [r0, #106]	@ zero_extendqisi2
 605 0006 EDB2     		uxtb	r5, r5
 606 0008 202D     		cmp	r5, #32
 607 000a 38D1     		bne	.L46
1030:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 608              		.loc 1 1030 0
ARM GAS  /tmp/cc8tmKB0.s 			page 55


 609 000c 0029     		cmp	r1, #0
 610 000e 38D0     		beq	.L47
1030:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 611              		.loc 1 1030 0 is_stmt 0 discriminator 1
 612 0010 002A     		cmp	r2, #0
 613 0012 38D0     		beq	.L48
1036:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 614              		.loc 1 1036 0 is_stmt 1
 615 0014 90F86830 		ldrb	r3, [r0, #104]	@ zero_extendqisi2
 616 0018 012B     		cmp	r3, #1
 617 001a 36D0     		beq	.L49
 618 001c 1346     		mov	r3, r2
 619 001e 0446     		mov	r4, r0
1036:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 620              		.loc 1 1036 0 is_stmt 0 discriminator 2
 621 0020 0122     		movs	r2, #1
 622              	.LVL51:
 623 0022 80F86820 		strb	r2, [r0, #104]
1038:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->RxXferSize = Size;
 624              		.loc 1 1038 0 is_stmt 1 discriminator 2
 625 0026 4165     		str	r1, [r0, #84]
1039:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 626              		.loc 1 1039 0 discriminator 2
 627 0028 A0F85830 		strh	r3, [r0, #88]	@ movhi
1041:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_BUSY_RX;
 628              		.loc 1 1041 0 discriminator 2
 629 002c 0025     		movs	r5, #0
 630 002e C566     		str	r5, [r0, #108]
1042:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 631              		.loc 1 1042 0 discriminator 2
 632 0030 2222     		movs	r2, #34
 633 0032 80F86A20 		strb	r2, [r0, #106]
1045:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 634              		.loc 1 1045 0 discriminator 2
 635 0036 426E     		ldr	r2, [r0, #100]
 636 0038 1549     		ldr	r1, .L51
 637              	.LVL52:
 638 003a 9162     		str	r1, [r2, #40]
 639              	.LVL53:
1048:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 640              		.loc 1 1048 0 discriminator 2
 641 003c 426E     		ldr	r2, [r0, #100]
 642 003e 1549     		ldr	r1, .L51+4
 643 0040 D162     		str	r1, [r2, #44]
1051:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 644              		.loc 1 1051 0 discriminator 2
 645 0042 426E     		ldr	r2, [r0, #100]
 646 0044 1449     		ldr	r1, .L51+8
 647 0046 1163     		str	r1, [r2, #48]
1054:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 648              		.loc 1 1054 0 discriminator 2
 649 0048 426E     		ldr	r2, [r0, #100]
 650 004a 5563     		str	r5, [r2, #52]
1057:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 651              		.loc 1 1057 0 discriminator 2
 652 004c 0168     		ldr	r1, [r0]
 653 004e 426D     		ldr	r2, [r0, #84]
ARM GAS  /tmp/cc8tmKB0.s 			page 56


 654 0050 2431     		adds	r1, r1, #36
 655 0052 406E     		ldr	r0, [r0, #100]
 656              	.LVL54:
 657 0054 FFF7FEFF 		bl	HAL_DMA_Start_IT
 658              	.LVL55:
1060:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 659              		.loc 1 1060 0 discriminator 2
 660 0058 84F86850 		strb	r5, [r4, #104]
1063:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 661              		.loc 1 1063 0 discriminator 2
 662 005c 2268     		ldr	r2, [r4]
 663 005e 1368     		ldr	r3, [r2]
 664 0060 43F48073 		orr	r3, r3, #256
 665 0064 1360     		str	r3, [r2]
1066:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 666              		.loc 1 1066 0 discriminator 2
 667 0066 2268     		ldr	r2, [r4]
 668 0068 9368     		ldr	r3, [r2, #8]
 669 006a 43F00103 		orr	r3, r3, #1
 670 006e 9360     		str	r3, [r2, #8]
1070:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 671              		.loc 1 1070 0 discriminator 2
 672 0070 2268     		ldr	r2, [r4]
 673 0072 9368     		ldr	r3, [r2, #8]
 674 0074 43F04003 		orr	r3, r3, #64
 675 0078 9360     		str	r3, [r2, #8]
1072:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 676              		.loc 1 1072 0 discriminator 2
 677 007a 2846     		mov	r0, r5
 678 007c 00E0     		b	.L45
 679              	.LVL56:
 680              	.L46:
1076:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 681              		.loc 1 1076 0
 682 007e 0220     		movs	r0, #2
 683              	.LVL57:
 684              	.L45:
1078:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 685              		.loc 1 1078 0
 686 0080 38BD     		pop	{r3, r4, r5, pc}
 687              	.LVL58:
 688              	.L47:
1032:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
 689              		.loc 1 1032 0
 690 0082 0120     		movs	r0, #1
 691              	.LVL59:
 692 0084 FCE7     		b	.L45
 693              	.LVL60:
 694              	.L48:
 695 0086 0120     		movs	r0, #1
 696              	.LVL61:
 697 0088 FAE7     		b	.L45
 698              	.LVL62:
 699              	.L49:
1036:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 700              		.loc 1 1036 0
 701 008a 0220     		movs	r0, #2
ARM GAS  /tmp/cc8tmKB0.s 			page 57


 702              	.LVL63:
 703 008c F8E7     		b	.L45
 704              	.L52:
 705 008e 00BF     		.align	2
 706              	.L51:
 707 0090 00000000 		.word	UART_DMAReceiveCplt
 708 0094 00000000 		.word	UART_DMARxHalfCplt
 709 0098 00000000 		.word	UART_DMAError
 710              		.cfi_endproc
 711              	.LFE138:
 713              		.section	.text.HAL_UART_DMAPause,"ax",%progbits
 714              		.align	1
 715              		.global	HAL_UART_DMAPause
 716              		.syntax unified
 717              		.thumb
 718              		.thumb_func
 719              		.fpu fpv4-sp-d16
 721              	HAL_UART_DMAPause:
 722              	.LFB139:
1086:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Process Locked */
 723              		.loc 1 1086 0
 724              		.cfi_startproc
 725              		@ args = 0, pretend = 0, frame = 0
 726              		@ frame_needed = 0, uses_anonymous_args = 0
 727              		@ link register save eliminated.
 728              	.LVL64:
1088:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 729              		.loc 1 1088 0
 730 0000 90F86830 		ldrb	r3, [r0, #104]	@ zero_extendqisi2
 731 0004 012B     		cmp	r3, #1
 732 0006 2FD0     		beq	.L57
1088:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 733              		.loc 1 1088 0 is_stmt 0 discriminator 2
 734 0008 0123     		movs	r3, #1
 735 000a 80F86830 		strb	r3, [r0, #104]
1090:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT)))
 736              		.loc 1 1090 0 is_stmt 1 discriminator 2
 737 000e 90F86930 		ldrb	r3, [r0, #105]	@ zero_extendqisi2
 738 0012 DBB2     		uxtb	r3, r3
 739 0014 212B     		cmp	r3, #33
 740 0016 09D0     		beq	.L58
 741              	.L55:
1096:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR)))
 742              		.loc 1 1096 0
 743 0018 90F86A30 		ldrb	r3, [r0, #106]	@ zero_extendqisi2
 744 001c DBB2     		uxtb	r3, r3
 745 001e 222B     		cmp	r3, #34
 746 0020 0ED0     		beq	.L59
 747              	.L56:
1108:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 748              		.loc 1 1108 0
 749 0022 0023     		movs	r3, #0
 750 0024 80F86830 		strb	r3, [r0, #104]
1110:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
 751              		.loc 1 1110 0
 752 0028 1846     		mov	r0, r3
 753              	.LVL65:
ARM GAS  /tmp/cc8tmKB0.s 			page 58


 754 002a 7047     		bx	lr
 755              	.LVL66:
 756              	.L58:
1091:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 757              		.loc 1 1091 0 discriminator 1
 758 002c 0368     		ldr	r3, [r0]
 759 002e 9A68     		ldr	r2, [r3, #8]
1090:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT)))
 760              		.loc 1 1090 0 discriminator 1
 761 0030 12F0800F 		tst	r2, #128
 762 0034 F0D0     		beq	.L55
1094:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 763              		.loc 1 1094 0
 764 0036 9A68     		ldr	r2, [r3, #8]
 765 0038 22F08002 		bic	r2, r2, #128
 766 003c 9A60     		str	r2, [r3, #8]
 767 003e EBE7     		b	.L55
 768              	.L59:
1097:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 769              		.loc 1 1097 0 discriminator 1
 770 0040 0368     		ldr	r3, [r0]
 771 0042 9A68     		ldr	r2, [r3, #8]
1096:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR)))
 772              		.loc 1 1096 0 discriminator 1
 773 0044 12F0400F 		tst	r2, #64
 774 0048 EBD0     		beq	.L56
1100:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 775              		.loc 1 1100 0
 776 004a 1A68     		ldr	r2, [r3]
 777 004c 22F48072 		bic	r2, r2, #256
 778 0050 1A60     		str	r2, [r3]
1101:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 779              		.loc 1 1101 0
 780 0052 0268     		ldr	r2, [r0]
 781 0054 9368     		ldr	r3, [r2, #8]
 782 0056 23F00103 		bic	r3, r3, #1
 783 005a 9360     		str	r3, [r2, #8]
1104:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 784              		.loc 1 1104 0
 785 005c 0268     		ldr	r2, [r0]
 786 005e 9368     		ldr	r3, [r2, #8]
 787 0060 23F04003 		bic	r3, r3, #64
 788 0064 9360     		str	r3, [r2, #8]
 789 0066 DCE7     		b	.L56
 790              	.L57:
1088:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 791              		.loc 1 1088 0
 792 0068 0220     		movs	r0, #2
 793              	.LVL67:
1111:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 794              		.loc 1 1111 0
 795 006a 7047     		bx	lr
 796              		.cfi_endproc
 797              	.LFE139:
 799              		.section	.text.HAL_UART_DMAResume,"ax",%progbits
 800              		.align	1
 801              		.global	HAL_UART_DMAResume
ARM GAS  /tmp/cc8tmKB0.s 			page 59


 802              		.syntax unified
 803              		.thumb
 804              		.thumb_func
 805              		.fpu fpv4-sp-d16
 807              	HAL_UART_DMAResume:
 808              	.LFB140:
1119:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Process Locked */
 809              		.loc 1 1119 0
 810              		.cfi_startproc
 811              		@ args = 0, pretend = 0, frame = 0
 812              		@ frame_needed = 0, uses_anonymous_args = 0
 813              		@ link register save eliminated.
 814              	.LVL68:
1121:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 815              		.loc 1 1121 0
 816 0000 90F86830 		ldrb	r3, [r0, #104]	@ zero_extendqisi2
 817 0004 012B     		cmp	r3, #1
 818 0006 2AD0     		beq	.L64
1121:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 819              		.loc 1 1121 0 is_stmt 0 discriminator 2
 820 0008 0123     		movs	r3, #1
 821 000a 80F86830 		strb	r3, [r0, #104]
1123:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 822              		.loc 1 1123 0 is_stmt 1 discriminator 2
 823 000e 90F86930 		ldrb	r3, [r0, #105]	@ zero_extendqisi2
 824 0012 DBB2     		uxtb	r3, r3
 825 0014 212B     		cmp	r3, #33
 826 0016 09D0     		beq	.L65
 827              	.L62:
1128:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 828              		.loc 1 1128 0
 829 0018 90F86A30 		ldrb	r3, [r0, #106]	@ zero_extendqisi2
 830 001c DBB2     		uxtb	r3, r3
 831 001e 222B     		cmp	r3, #34
 832 0020 0AD0     		beq	.L66
 833              	.L63:
1142:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 834              		.loc 1 1142 0
 835 0022 0023     		movs	r3, #0
 836 0024 80F86830 		strb	r3, [r0, #104]
1144:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
 837              		.loc 1 1144 0
 838 0028 1846     		mov	r0, r3
 839              	.LVL69:
 840 002a 7047     		bx	lr
 841              	.LVL70:
 842              	.L65:
1126:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 843              		.loc 1 1126 0
 844 002c 0268     		ldr	r2, [r0]
 845 002e 9368     		ldr	r3, [r2, #8]
 846 0030 43F08003 		orr	r3, r3, #128
 847 0034 9360     		str	r3, [r2, #8]
 848 0036 EFE7     		b	.L62
 849              	.L66:
1131:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 850              		.loc 1 1131 0
ARM GAS  /tmp/cc8tmKB0.s 			page 60


 851 0038 0368     		ldr	r3, [r0]
 852 003a 0822     		movs	r2, #8
 853 003c 1A62     		str	r2, [r3, #32]
1134:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     SET_BIT(huart->Instance->CR3, USART_CR3_EIE);
 854              		.loc 1 1134 0
 855 003e 0268     		ldr	r2, [r0]
 856 0040 1368     		ldr	r3, [r2]
 857 0042 43F48073 		orr	r3, r3, #256
 858 0046 1360     		str	r3, [r2]
1135:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 859              		.loc 1 1135 0
 860 0048 0268     		ldr	r2, [r0]
 861 004a 9368     		ldr	r3, [r2, #8]
 862 004c 43F00103 		orr	r3, r3, #1
 863 0050 9360     		str	r3, [r2, #8]
1138:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 864              		.loc 1 1138 0
 865 0052 0268     		ldr	r2, [r0]
 866 0054 9368     		ldr	r3, [r2, #8]
 867 0056 43F04003 		orr	r3, r3, #64
 868 005a 9360     		str	r3, [r2, #8]
 869 005c E1E7     		b	.L63
 870              	.L64:
1121:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 871              		.loc 1 1121 0
 872 005e 0220     		movs	r0, #2
 873              	.LVL71:
1145:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 874              		.loc 1 1145 0
 875 0060 7047     		bx	lr
 876              		.cfi_endproc
 877              	.LFE140:
 879              		.section	.text.HAL_UART_DMAStop,"ax",%progbits
 880              		.align	1
 881              		.global	HAL_UART_DMAStop
 882              		.syntax unified
 883              		.thumb
 884              		.thumb_func
 885              		.fpu fpv4-sp-d16
 887              	HAL_UART_DMAStop:
 888              	.LFB141:
1153:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* The Lock is not implemented on this API to allow the user application
 889              		.loc 1 1153 0
 890              		.cfi_startproc
 891              		@ args = 0, pretend = 0, frame = 0
 892              		@ frame_needed = 0, uses_anonymous_args = 0
 893              	.LVL72:
 894 0000 10B5     		push	{r4, lr}
 895              	.LCFI4:
 896              		.cfi_def_cfa_offset 8
 897              		.cfi_offset 4, -8
 898              		.cfi_offset 14, -4
 899 0002 0446     		mov	r4, r0
1162:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT)))
 900              		.loc 1 1162 0
 901 0004 90F86930 		ldrb	r3, [r0, #105]	@ zero_extendqisi2
 902 0008 DBB2     		uxtb	r3, r3
ARM GAS  /tmp/cc8tmKB0.s 			page 61


 903 000a 212B     		cmp	r3, #33
 904 000c 06D0     		beq	.L73
 905              	.LVL73:
 906              	.L68:
1177:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR)))
 907              		.loc 1 1177 0
 908 000e 94F86A30 		ldrb	r3, [r4, #106]	@ zero_extendqisi2
 909 0012 DBB2     		uxtb	r3, r3
 910 0014 222B     		cmp	r3, #34
 911 0016 12D0     		beq	.L74
 912              	.L70:
1192:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 913              		.loc 1 1192 0
 914 0018 0020     		movs	r0, #0
 915 001a 10BD     		pop	{r4, pc}
 916              	.LVL74:
 917              	.L73:
1163:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 918              		.loc 1 1163 0 discriminator 1
 919 001c 0368     		ldr	r3, [r0]
 920 001e 9A68     		ldr	r2, [r3, #8]
1162:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT)))
 921              		.loc 1 1162 0 discriminator 1
 922 0020 12F0800F 		tst	r2, #128
 923 0024 F3D0     		beq	.L68
1165:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 924              		.loc 1 1165 0
 925 0026 9A68     		ldr	r2, [r3, #8]
 926 0028 22F08002 		bic	r2, r2, #128
 927 002c 9A60     		str	r2, [r3, #8]
1168:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 928              		.loc 1 1168 0
 929 002e 006E     		ldr	r0, [r0, #96]
 930              	.LVL75:
 931 0030 08B1     		cbz	r0, .L69
1170:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
 932              		.loc 1 1170 0
 933 0032 FFF7FEFF 		bl	HAL_DMA_Abort
 934              	.LVL76:
 935              	.L69:
1173:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 936              		.loc 1 1173 0
 937 0036 2046     		mov	r0, r4
 938 0038 FFF7FEFF 		bl	UART_EndTxTransfer
 939              	.LVL77:
 940 003c E7E7     		b	.L68
 941              	.L74:
1178:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 942              		.loc 1 1178 0 discriminator 1
 943 003e 2368     		ldr	r3, [r4]
 944 0040 9A68     		ldr	r2, [r3, #8]
1177:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR)))
 945              		.loc 1 1177 0 discriminator 1
 946 0042 12F0400F 		tst	r2, #64
 947 0046 E7D0     		beq	.L70
1180:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 948              		.loc 1 1180 0
ARM GAS  /tmp/cc8tmKB0.s 			page 62


 949 0048 9A68     		ldr	r2, [r3, #8]
 950 004a 22F04002 		bic	r2, r2, #64
 951 004e 9A60     		str	r2, [r3, #8]
1183:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 952              		.loc 1 1183 0
 953 0050 606E     		ldr	r0, [r4, #100]
 954 0052 08B1     		cbz	r0, .L71
1185:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
 955              		.loc 1 1185 0
 956 0054 FFF7FEFF 		bl	HAL_DMA_Abort
 957              	.LVL78:
 958              	.L71:
1188:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 959              		.loc 1 1188 0
 960 0058 2046     		mov	r0, r4
 961 005a FFF7FEFF 		bl	UART_EndRxTransfer
 962              	.LVL79:
 963 005e DBE7     		b	.L70
 964              		.cfi_endproc
 965              	.LFE141:
 967              		.section	.text.HAL_UART_Abort,"ax",%progbits
 968              		.align	1
 969              		.global	HAL_UART_Abort
 970              		.syntax unified
 971              		.thumb
 972              		.thumb_func
 973              		.fpu fpv4-sp-d16
 975              	HAL_UART_Abort:
 976              	.LFB142:
1207:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Disable TXEIE, TCIE, RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
 977              		.loc 1 1207 0
 978              		.cfi_startproc
 979              		@ args = 0, pretend = 0, frame = 0
 980              		@ frame_needed = 0, uses_anonymous_args = 0
 981              	.LVL80:
 982 0000 10B5     		push	{r4, lr}
 983              	.LCFI5:
 984              		.cfi_def_cfa_offset 8
 985              		.cfi_offset 4, -8
 986              		.cfi_offset 14, -4
 987 0002 0446     		mov	r4, r0
1209:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 988              		.loc 1 1209 0
 989 0004 0268     		ldr	r2, [r0]
 990 0006 1368     		ldr	r3, [r2]
 991 0008 23F4F073 		bic	r3, r3, #480
 992 000c 1360     		str	r3, [r2]
1210:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 993              		.loc 1 1210 0
 994 000e 0268     		ldr	r2, [r0]
 995 0010 9368     		ldr	r3, [r2, #8]
 996 0012 23F00103 		bic	r3, r3, #1
 997 0016 9360     		str	r3, [r2, #8]
1213:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 998              		.loc 1 1213 0
 999 0018 0368     		ldr	r3, [r0]
 1000 001a 9A68     		ldr	r2, [r3, #8]
ARM GAS  /tmp/cc8tmKB0.s 			page 63


 1001 001c 12F0800F 		tst	r2, #128
 1002 0020 0AD0     		beq	.L76
1215:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 1003              		.loc 1 1215 0
 1004 0022 9A68     		ldr	r2, [r3, #8]
 1005 0024 22F08002 		bic	r2, r2, #128
 1006 0028 9A60     		str	r2, [r3, #8]
1218:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 1007              		.loc 1 1218 0
 1008 002a 036E     		ldr	r3, [r0, #96]
 1009 002c 23B1     		cbz	r3, .L76
1222:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 1010              		.loc 1 1222 0
 1011 002e 0022     		movs	r2, #0
 1012 0030 5A63     		str	r2, [r3, #52]
1224:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
 1013              		.loc 1 1224 0
 1014 0032 006E     		ldr	r0, [r0, #96]
 1015              	.LVL81:
 1016 0034 FFF7FEFF 		bl	HAL_DMA_Abort
 1017              	.LVL82:
 1018              	.L76:
1229:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 1019              		.loc 1 1229 0
 1020 0038 2368     		ldr	r3, [r4]
 1021 003a 9A68     		ldr	r2, [r3, #8]
 1022 003c 12F0400F 		tst	r2, #64
 1023 0040 0AD0     		beq	.L77
1231:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 1024              		.loc 1 1231 0
 1025 0042 9A68     		ldr	r2, [r3, #8]
 1026 0044 22F04002 		bic	r2, r2, #64
 1027 0048 9A60     		str	r2, [r3, #8]
1234:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 1028              		.loc 1 1234 0
 1029 004a 636E     		ldr	r3, [r4, #100]
 1030 004c 23B1     		cbz	r3, .L77
1238:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 1031              		.loc 1 1238 0
 1032 004e 0022     		movs	r2, #0
 1033 0050 5A63     		str	r2, [r3, #52]
1240:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
 1034              		.loc 1 1240 0
 1035 0052 606E     		ldr	r0, [r4, #100]
 1036 0054 FFF7FEFF 		bl	HAL_DMA_Abort
 1037              	.LVL83:
 1038              	.L77:
1245:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->RxXferCount = 0U; 
 1039              		.loc 1 1245 0
 1040 0058 0020     		movs	r0, #0
 1041 005a A4F85200 		strh	r0, [r4, #82]	@ movhi
1246:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 1042              		.loc 1 1246 0
 1043 005e A4F85A00 		strh	r0, [r4, #90]	@ movhi
1249:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 1044              		.loc 1 1249 0
 1045 0062 2368     		ldr	r3, [r4]
ARM GAS  /tmp/cc8tmKB0.s 			page 64


 1046 0064 0F22     		movs	r2, #15
 1047 0066 1A62     		str	r2, [r3, #32]
1252:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
 1048              		.loc 1 1252 0
 1049 0068 2023     		movs	r3, #32
 1050 006a 84F86930 		strb	r3, [r4, #105]
1253:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 1051              		.loc 1 1253 0
 1052 006e 84F86A30 		strb	r3, [r4, #106]
1256:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 1053              		.loc 1 1256 0
 1054 0072 E066     		str	r0, [r4, #108]
1259:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 1055              		.loc 1 1259 0
 1056 0074 10BD     		pop	{r4, pc}
 1057              		.cfi_endproc
 1058              	.LFE142:
 1060              		.section	.text.HAL_UART_AbortTransmit,"ax",%progbits
 1061              		.align	1
 1062              		.global	HAL_UART_AbortTransmit
 1063              		.syntax unified
 1064              		.thumb
 1065              		.thumb_func
 1066              		.fpu fpv4-sp-d16
 1068              	HAL_UART_AbortTransmit:
 1069              	.LFB143:
1274:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Disable TXEIE and TCIE interrupts */
 1070              		.loc 1 1274 0
 1071              		.cfi_startproc
 1072              		@ args = 0, pretend = 0, frame = 0
 1073              		@ frame_needed = 0, uses_anonymous_args = 0
 1074              	.LVL84:
 1075 0000 10B5     		push	{r4, lr}
 1076              	.LCFI6:
 1077              		.cfi_def_cfa_offset 8
 1078              		.cfi_offset 4, -8
 1079              		.cfi_offset 14, -4
 1080 0002 0446     		mov	r4, r0
1276:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 1081              		.loc 1 1276 0
 1082 0004 0268     		ldr	r2, [r0]
 1083 0006 1368     		ldr	r3, [r2]
 1084 0008 23F0C003 		bic	r3, r3, #192
 1085 000c 1360     		str	r3, [r2]
1279:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 1086              		.loc 1 1279 0
 1087 000e 0368     		ldr	r3, [r0]
 1088 0010 9A68     		ldr	r2, [r3, #8]
 1089 0012 12F0800F 		tst	r2, #128
 1090 0016 0AD0     		beq	.L80
1281:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 1091              		.loc 1 1281 0
 1092 0018 9A68     		ldr	r2, [r3, #8]
 1093 001a 22F08002 		bic	r2, r2, #128
 1094 001e 9A60     		str	r2, [r3, #8]
1284:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 1095              		.loc 1 1284 0
ARM GAS  /tmp/cc8tmKB0.s 			page 65


 1096 0020 036E     		ldr	r3, [r0, #96]
 1097 0022 23B1     		cbz	r3, .L80
1288:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 1098              		.loc 1 1288 0
 1099 0024 0022     		movs	r2, #0
 1100 0026 5A63     		str	r2, [r3, #52]
1290:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
 1101              		.loc 1 1290 0
 1102 0028 006E     		ldr	r0, [r0, #96]
 1103              	.LVL85:
 1104 002a FFF7FEFF 		bl	HAL_DMA_Abort
 1105              	.LVL86:
 1106              	.L80:
1295:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 1107              		.loc 1 1295 0
 1108 002e 0020     		movs	r0, #0
 1109 0030 A4F85200 		strh	r0, [r4, #82]	@ movhi
1298:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 1110              		.loc 1 1298 0
 1111 0034 2023     		movs	r3, #32
 1112 0036 84F86930 		strb	r3, [r4, #105]
1301:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 1113              		.loc 1 1301 0
 1114 003a 10BD     		pop	{r4, pc}
 1115              		.cfi_endproc
 1116              	.LFE143:
 1118              		.section	.text.HAL_UART_AbortReceive,"ax",%progbits
 1119              		.align	1
 1120              		.global	HAL_UART_AbortReceive
 1121              		.syntax unified
 1122              		.thumb
 1123              		.thumb_func
 1124              		.fpu fpv4-sp-d16
 1126              	HAL_UART_AbortReceive:
 1127              	.LFB144:
1316:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Disable RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
 1128              		.loc 1 1316 0
 1129              		.cfi_startproc
 1130              		@ args = 0, pretend = 0, frame = 0
 1131              		@ frame_needed = 0, uses_anonymous_args = 0
 1132              	.LVL87:
 1133 0000 10B5     		push	{r4, lr}
 1134              	.LCFI7:
 1135              		.cfi_def_cfa_offset 8
 1136              		.cfi_offset 4, -8
 1137              		.cfi_offset 14, -4
 1138 0002 0446     		mov	r4, r0
1318:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 1139              		.loc 1 1318 0
 1140 0004 0268     		ldr	r2, [r0]
 1141 0006 1368     		ldr	r3, [r2]
 1142 0008 23F49073 		bic	r3, r3, #288
 1143 000c 1360     		str	r3, [r2]
1319:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 1144              		.loc 1 1319 0
 1145 000e 0268     		ldr	r2, [r0]
 1146 0010 9368     		ldr	r3, [r2, #8]
ARM GAS  /tmp/cc8tmKB0.s 			page 66


 1147 0012 23F00103 		bic	r3, r3, #1
 1148 0016 9360     		str	r3, [r2, #8]
1322:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 1149              		.loc 1 1322 0
 1150 0018 0368     		ldr	r3, [r0]
 1151 001a 9A68     		ldr	r2, [r3, #8]
 1152 001c 12F0400F 		tst	r2, #64
 1153 0020 0AD0     		beq	.L83
1324:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 1154              		.loc 1 1324 0
 1155 0022 9A68     		ldr	r2, [r3, #8]
 1156 0024 22F04002 		bic	r2, r2, #64
 1157 0028 9A60     		str	r2, [r3, #8]
1327:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 1158              		.loc 1 1327 0
 1159 002a 436E     		ldr	r3, [r0, #100]
 1160 002c 23B1     		cbz	r3, .L83
1331:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 1161              		.loc 1 1331 0
 1162 002e 0022     		movs	r2, #0
 1163 0030 5A63     		str	r2, [r3, #52]
1333:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
 1164              		.loc 1 1333 0
 1165 0032 406E     		ldr	r0, [r0, #100]
 1166              	.LVL88:
 1167 0034 FFF7FEFF 		bl	HAL_DMA_Abort
 1168              	.LVL89:
 1169              	.L83:
1338:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 1170              		.loc 1 1338 0
 1171 0038 0020     		movs	r0, #0
 1172 003a A4F85A00 		strh	r0, [r4, #90]	@ movhi
1341:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 1173              		.loc 1 1341 0
 1174 003e 2368     		ldr	r3, [r4]
 1175 0040 0F22     		movs	r2, #15
 1176 0042 1A62     		str	r2, [r3, #32]
1344:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 1177              		.loc 1 1344 0
 1178 0044 2023     		movs	r3, #32
 1179 0046 84F86A30 		strb	r3, [r4, #106]
1347:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 1180              		.loc 1 1347 0
 1181 004a 10BD     		pop	{r4, pc}
 1182              		.cfi_endproc
 1183              	.LFE144:
 1185              		.section	.text.HAL_UART_TxCpltCallback,"ax",%progbits
 1186              		.align	1
 1187              		.weak	HAL_UART_TxCpltCallback
 1188              		.syntax unified
 1189              		.thumb
 1190              		.thumb_func
 1191              		.fpu fpv4-sp-d16
 1193              	HAL_UART_TxCpltCallback:
 1194              	.LFB149:
1769:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 1195              		.loc 1 1769 0
ARM GAS  /tmp/cc8tmKB0.s 			page 67


 1196              		.cfi_startproc
 1197              		@ args = 0, pretend = 0, frame = 0
 1198              		@ frame_needed = 0, uses_anonymous_args = 0
 1199              		@ link register save eliminated.
 1200              	.LVL90:
1776:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 1201              		.loc 1 1776 0
 1202 0000 7047     		bx	lr
 1203              		.cfi_endproc
 1204              	.LFE149:
 1206              		.section	.text.UART_DMATransmitCplt,"ax",%progbits
 1207              		.align	1
 1208              		.syntax unified
 1209              		.thumb
 1210              		.thumb_func
 1211              		.fpu fpv4-sp-d16
 1213              	UART_DMATransmitCplt:
 1214              	.LFB171:
2387:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2388:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2389:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
2390:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief DMA UART transmit process complete callback.
2391:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param hdma DMA handle.
2392:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval None
2393:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
2394:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** static void UART_DMATransmitCplt(DMA_HandleTypeDef *hdma)
2395:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
 1215              		.loc 1 2395 0
 1216              		.cfi_startproc
 1217              		@ args = 0, pretend = 0, frame = 0
 1218              		@ frame_needed = 0, uses_anonymous_args = 0
 1219              	.LVL91:
 1220 0000 08B5     		push	{r3, lr}
 1221              	.LCFI8:
 1222              		.cfi_def_cfa_offset 8
 1223              		.cfi_offset 3, -8
 1224              		.cfi_offset 14, -4
2396:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   UART_HandleTypeDef* huart = (UART_HandleTypeDef*)(hdma->Parent);
 1225              		.loc 1 2396 0
 1226 0002 436A     		ldr	r3, [r0, #36]
 1227              	.LVL92:
2397:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   
2398:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* DMA Normal mode */
2399:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if ( HAL_IS_BIT_CLR(hdma->Instance->CCR, DMA_CCR_CIRC) )
 1228              		.loc 1 2399 0
 1229 0004 0268     		ldr	r2, [r0]
 1230 0006 1268     		ldr	r2, [r2]
 1231 0008 12F0200F 		tst	r2, #32
 1232 000c 0DD1     		bne	.L87
2400:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
2401:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->TxXferCount = 0U;
 1233              		.loc 1 2401 0
 1234 000e 0022     		movs	r2, #0
 1235 0010 A3F85220 		strh	r2, [r3, #82]	@ movhi
2402:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2403:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Disable the DMA transfer for transmit request by resetting the DMAT bit
2404:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****        in the UART CR3 register */
ARM GAS  /tmp/cc8tmKB0.s 			page 68


2405:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
 1236              		.loc 1 2405 0
 1237 0014 1968     		ldr	r1, [r3]
 1238 0016 8A68     		ldr	r2, [r1, #8]
 1239 0018 22F08002 		bic	r2, r2, #128
 1240 001c 8A60     		str	r2, [r1, #8]
2406:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2407:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Enable the UART Transmit Complete Interrupt */
2408:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     SET_BIT(huart->Instance->CR1, USART_CR1_TCIE);
 1241              		.loc 1 2408 0
 1242 001e 1A68     		ldr	r2, [r3]
 1243 0020 1368     		ldr	r3, [r2]
 1244              	.LVL93:
 1245 0022 43F04003 		orr	r3, r3, #64
 1246 0026 1360     		str	r3, [r2]
 1247              	.LVL94:
 1248              	.L86:
2409:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
2410:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* DMA Circular mode */
2411:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   else
2412:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
2413:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     HAL_UART_TxCpltCallback(huart);
2414:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
2415:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2416:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
 1249              		.loc 1 2416 0
 1250 0028 08BD     		pop	{r3, pc}
 1251              	.LVL95:
 1252              	.L87:
2413:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 1253              		.loc 1 2413 0
 1254 002a 1846     		mov	r0, r3
 1255              	.LVL96:
 1256 002c FFF7FEFF 		bl	HAL_UART_TxCpltCallback
 1257              	.LVL97:
 1258              		.loc 1 2416 0
 1259 0030 FAE7     		b	.L86
 1260              		.cfi_endproc
 1261              	.LFE171:
 1263              		.section	.text.HAL_UART_TxHalfCpltCallback,"ax",%progbits
 1264              		.align	1
 1265              		.weak	HAL_UART_TxHalfCpltCallback
 1266              		.syntax unified
 1267              		.thumb
 1268              		.thumb_func
 1269              		.fpu fpv4-sp-d16
 1271              	HAL_UART_TxHalfCpltCallback:
 1272              	.LFB150:
1784:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 1273              		.loc 1 1784 0
 1274              		.cfi_startproc
 1275              		@ args = 0, pretend = 0, frame = 0
 1276              		@ frame_needed = 0, uses_anonymous_args = 0
 1277              		@ link register save eliminated.
 1278              	.LVL98:
1791:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 1279              		.loc 1 1791 0
ARM GAS  /tmp/cc8tmKB0.s 			page 69


 1280 0000 7047     		bx	lr
 1281              		.cfi_endproc
 1282              	.LFE150:
 1284              		.section	.text.UART_DMATxHalfCplt,"ax",%progbits
 1285              		.align	1
 1286              		.syntax unified
 1287              		.thumb
 1288              		.thumb_func
 1289              		.fpu fpv4-sp-d16
 1291              	UART_DMATxHalfCplt:
 1292              	.LFB172:
2417:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2418:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
2419:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief DMA UART transmit process half complete callback.
2420:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param hdma DMA handle.
2421:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval None
2422:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
2423:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** static void UART_DMATxHalfCplt(DMA_HandleTypeDef *hdma)
2424:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
 1293              		.loc 1 2424 0
 1294              		.cfi_startproc
 1295              		@ args = 0, pretend = 0, frame = 0
 1296              		@ frame_needed = 0, uses_anonymous_args = 0
 1297              	.LVL99:
 1298 0000 08B5     		push	{r3, lr}
 1299              	.LCFI9:
 1300              		.cfi_def_cfa_offset 8
 1301              		.cfi_offset 3, -8
 1302              		.cfi_offset 14, -4
 1303              	.LVL100:
2425:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   UART_HandleTypeDef* huart = (UART_HandleTypeDef*)(hdma->Parent);
2426:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2427:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   HAL_UART_TxHalfCpltCallback(huart);
 1304              		.loc 1 2427 0
 1305 0002 406A     		ldr	r0, [r0, #36]
 1306              	.LVL101:
 1307 0004 FFF7FEFF 		bl	HAL_UART_TxHalfCpltCallback
 1308              	.LVL102:
2428:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
 1309              		.loc 1 2428 0
 1310 0008 08BD     		pop	{r3, pc}
 1311              		.cfi_endproc
 1312              	.LFE172:
 1314              		.section	.text.HAL_UART_RxCpltCallback,"ax",%progbits
 1315              		.align	1
 1316              		.weak	HAL_UART_RxCpltCallback
 1317              		.syntax unified
 1318              		.thumb
 1319              		.thumb_func
 1320              		.fpu fpv4-sp-d16
 1322              	HAL_UART_RxCpltCallback:
 1323              	.LFB151:
1799:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 1324              		.loc 1 1799 0
 1325              		.cfi_startproc
 1326              		@ args = 0, pretend = 0, frame = 0
 1327              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  /tmp/cc8tmKB0.s 			page 70


 1328              		@ link register save eliminated.
 1329              	.LVL103:
1806:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 1330              		.loc 1 1806 0
 1331 0000 7047     		bx	lr
 1332              		.cfi_endproc
 1333              	.LFE151:
 1335              		.section	.text.UART_DMAReceiveCplt,"ax",%progbits
 1336              		.align	1
 1337              		.syntax unified
 1338              		.thumb
 1339              		.thumb_func
 1340              		.fpu fpv4-sp-d16
 1342              	UART_DMAReceiveCplt:
 1343              	.LFB173:
2429:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2430:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
2431:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief DMA UART receive process complete callback.
2432:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param hdma DMA handle.
2433:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval None
2434:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
2435:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** static void UART_DMAReceiveCplt(DMA_HandleTypeDef *hdma)
2436:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
 1344              		.loc 1 2436 0
 1345              		.cfi_startproc
 1346              		@ args = 0, pretend = 0, frame = 0
 1347              		@ frame_needed = 0, uses_anonymous_args = 0
 1348              	.LVL104:
 1349 0000 08B5     		push	{r3, lr}
 1350              	.LCFI10:
 1351              		.cfi_def_cfa_offset 8
 1352              		.cfi_offset 3, -8
 1353              		.cfi_offset 14, -4
2437:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   UART_HandleTypeDef* huart = (UART_HandleTypeDef*)(hdma->Parent);
 1354              		.loc 1 2437 0
 1355 0002 436A     		ldr	r3, [r0, #36]
 1356              	.LVL105:
2438:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2439:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* DMA Normal mode */
2440:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if ( HAL_IS_BIT_CLR(hdma->Instance->CCR, DMA_CCR_CIRC) )
 1357              		.loc 1 2440 0
 1358 0004 0268     		ldr	r2, [r0]
 1359 0006 1268     		ldr	r2, [r2]
 1360 0008 12F0200F 		tst	r2, #32
 1361 000c 14D1     		bne	.L95
2441:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
2442:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->RxXferCount = 0U;
 1362              		.loc 1 2442 0
 1363 000e 0022     		movs	r2, #0
 1364 0010 A3F85A20 		strh	r2, [r3, #90]	@ movhi
2443:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2444:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Disable PE and ERR (Frame error, noise error, overrun error) interrupts */
2445:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR1, USART_CR1_PEIE);
 1365              		.loc 1 2445 0
 1366 0014 1968     		ldr	r1, [r3]
 1367 0016 0A68     		ldr	r2, [r1]
 1368 0018 22F48072 		bic	r2, r2, #256
ARM GAS  /tmp/cc8tmKB0.s 			page 71


 1369 001c 0A60     		str	r2, [r1]
2446:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 1370              		.loc 1 2446 0
 1371 001e 1968     		ldr	r1, [r3]
 1372 0020 8A68     		ldr	r2, [r1, #8]
 1373 0022 22F00102 		bic	r2, r2, #1
 1374 0026 8A60     		str	r2, [r1, #8]
2447:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2448:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Disable the DMA transfer for the receiver request by resetting the DMAR bit
2449:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****        in the UART CR3 register */
2450:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
 1375              		.loc 1 2450 0
 1376 0028 1968     		ldr	r1, [r3]
 1377 002a 8A68     		ldr	r2, [r1, #8]
 1378 002c 22F04002 		bic	r2, r2, #64
 1379 0030 8A60     		str	r2, [r1, #8]
2451:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2452:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* At end of Rx process, restore huart->RxState to Ready */
2453:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_READY;
 1380              		.loc 1 2453 0
 1381 0032 2022     		movs	r2, #32
 1382 0034 83F86A20 		strb	r2, [r3, #106]
 1383              	.L95:
2454:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
2455:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2456:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   HAL_UART_RxCpltCallback(huart);
 1384              		.loc 1 2456 0
 1385 0038 1846     		mov	r0, r3
 1386              	.LVL106:
 1387 003a FFF7FEFF 		bl	HAL_UART_RxCpltCallback
 1388              	.LVL107:
2457:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
 1389              		.loc 1 2457 0
 1390 003e 08BD     		pop	{r3, pc}
 1391              		.cfi_endproc
 1392              	.LFE173:
 1394              		.section	.text.HAL_UART_RxHalfCpltCallback,"ax",%progbits
 1395              		.align	1
 1396              		.weak	HAL_UART_RxHalfCpltCallback
 1397              		.syntax unified
 1398              		.thumb
 1399              		.thumb_func
 1400              		.fpu fpv4-sp-d16
 1402              	HAL_UART_RxHalfCpltCallback:
 1403              	.LFB152:
1814:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 1404              		.loc 1 1814 0
 1405              		.cfi_startproc
 1406              		@ args = 0, pretend = 0, frame = 0
 1407              		@ frame_needed = 0, uses_anonymous_args = 0
 1408              		@ link register save eliminated.
 1409              	.LVL108:
1821:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 1410              		.loc 1 1821 0
 1411 0000 7047     		bx	lr
 1412              		.cfi_endproc
 1413              	.LFE152:
ARM GAS  /tmp/cc8tmKB0.s 			page 72


 1415              		.section	.text.UART_DMARxHalfCplt,"ax",%progbits
 1416              		.align	1
 1417              		.syntax unified
 1418              		.thumb
 1419              		.thumb_func
 1420              		.fpu fpv4-sp-d16
 1422              	UART_DMARxHalfCplt:
 1423              	.LFB174:
2458:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2459:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
2460:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief DMA UART receive process half complete callback.
2461:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param hdma DMA handle.
2462:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval None
2463:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
2464:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** static void UART_DMARxHalfCplt(DMA_HandleTypeDef *hdma)
2465:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
 1424              		.loc 1 2465 0
 1425              		.cfi_startproc
 1426              		@ args = 0, pretend = 0, frame = 0
 1427              		@ frame_needed = 0, uses_anonymous_args = 0
 1428              	.LVL109:
 1429 0000 08B5     		push	{r3, lr}
 1430              	.LCFI11:
 1431              		.cfi_def_cfa_offset 8
 1432              		.cfi_offset 3, -8
 1433              		.cfi_offset 14, -4
 1434              	.LVL110:
2466:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   UART_HandleTypeDef* huart = (UART_HandleTypeDef*)(hdma->Parent);
2467:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2468:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   HAL_UART_RxHalfCpltCallback(huart);
 1435              		.loc 1 2468 0
 1436 0002 406A     		ldr	r0, [r0, #36]
 1437              	.LVL111:
 1438 0004 FFF7FEFF 		bl	HAL_UART_RxHalfCpltCallback
 1439              	.LVL112:
2469:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
 1440              		.loc 1 2469 0
 1441 0008 08BD     		pop	{r3, pc}
 1442              		.cfi_endproc
 1443              	.LFE174:
 1445              		.section	.text.HAL_UART_ErrorCallback,"ax",%progbits
 1446              		.align	1
 1447              		.weak	HAL_UART_ErrorCallback
 1448              		.syntax unified
 1449              		.thumb
 1450              		.thumb_func
 1451              		.fpu fpv4-sp-d16
 1453              	HAL_UART_ErrorCallback:
 1454              	.LFB153:
1829:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 1455              		.loc 1 1829 0
 1456              		.cfi_startproc
 1457              		@ args = 0, pretend = 0, frame = 0
 1458              		@ frame_needed = 0, uses_anonymous_args = 0
 1459              		@ link register save eliminated.
 1460              	.LVL113:
1836:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
ARM GAS  /tmp/cc8tmKB0.s 			page 73


 1461              		.loc 1 1836 0
 1462 0000 7047     		bx	lr
 1463              		.cfi_endproc
 1464              	.LFE153:
 1466              		.section	.text.UART_DMAError,"ax",%progbits
 1467              		.align	1
 1468              		.syntax unified
 1469              		.thumb
 1470              		.thumb_func
 1471              		.fpu fpv4-sp-d16
 1473              	UART_DMAError:
 1474              	.LFB175:
2470:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2471:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
2472:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief DMA UART communication error callback.
2473:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param hdma DMA handle.
2474:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval None
2475:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
2476:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** static void UART_DMAError(DMA_HandleTypeDef *hdma)
2477:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
 1475              		.loc 1 2477 0
 1476              		.cfi_startproc
 1477              		@ args = 0, pretend = 0, frame = 0
 1478              		@ frame_needed = 0, uses_anonymous_args = 0
 1479              	.LVL114:
 1480 0000 10B5     		push	{r4, lr}
 1481              	.LCFI12:
 1482              		.cfi_def_cfa_offset 8
 1483              		.cfi_offset 4, -8
 1484              		.cfi_offset 14, -4
2478:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   UART_HandleTypeDef* huart = (UART_HandleTypeDef*)(hdma->Parent);
 1485              		.loc 1 2478 0
 1486 0002 446A     		ldr	r4, [r0, #36]
 1487              	.LVL115:
2479:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2480:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Stop UART DMA Tx request if ongoing */
2481:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if (  (huart->gState == HAL_UART_STATE_BUSY_TX)
 1488              		.loc 1 2481 0
 1489 0004 94F86930 		ldrb	r3, [r4, #105]	@ zero_extendqisi2
 1490 0008 DBB2     		uxtb	r3, r3
 1491 000a 212B     		cmp	r3, #33
 1492 000c 0CD0     		beq	.L105
 1493              	.LVL116:
 1494              	.L102:
2482:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       &&(HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT)) )
2483:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
2484:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->TxXferCount = 0U;
2485:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     UART_EndTxTransfer(huart);
2486:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
2487:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2488:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Stop UART DMA Rx request if ongoing */
2489:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if (  (huart->RxState == HAL_UART_STATE_BUSY_RX)
 1495              		.loc 1 2489 0
 1496 000e 94F86A30 		ldrb	r3, [r4, #106]	@ zero_extendqisi2
 1497 0012 DBB2     		uxtb	r3, r3
 1498 0014 222B     		cmp	r3, #34
 1499 0016 13D0     		beq	.L106
ARM GAS  /tmp/cc8tmKB0.s 			page 74


 1500              	.L103:
2490:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       &&(HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR)) )
2491:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
2492:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->RxXferCount = 0U;
2493:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     UART_EndRxTransfer(huart);
2494:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
2495:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2496:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->ErrorCode |= HAL_UART_ERROR_DMA;
 1501              		.loc 1 2496 0
 1502 0018 E36E     		ldr	r3, [r4, #108]
 1503 001a 43F01003 		orr	r3, r3, #16
 1504 001e E366     		str	r3, [r4, #108]
2497:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   HAL_UART_ErrorCallback(huart);
 1505              		.loc 1 2497 0
 1506 0020 2046     		mov	r0, r4
 1507 0022 FFF7FEFF 		bl	HAL_UART_ErrorCallback
 1508              	.LVL117:
2498:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
 1509              		.loc 1 2498 0
 1510 0026 10BD     		pop	{r4, pc}
 1511              	.LVL118:
 1512              	.L105:
2482:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 1513              		.loc 1 2482 0
 1514 0028 2368     		ldr	r3, [r4]
 1515 002a 9B68     		ldr	r3, [r3, #8]
 1516 002c 13F0800F 		tst	r3, #128
 1517 0030 EDD0     		beq	.L102
2484:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     UART_EndTxTransfer(huart);
 1518              		.loc 1 2484 0
 1519 0032 0023     		movs	r3, #0
 1520 0034 A4F85230 		strh	r3, [r4, #82]	@ movhi
2485:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 1521              		.loc 1 2485 0
 1522 0038 2046     		mov	r0, r4
 1523              	.LVL119:
 1524 003a FFF7FEFF 		bl	UART_EndTxTransfer
 1525              	.LVL120:
 1526 003e E6E7     		b	.L102
 1527              	.L106:
2490:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 1528              		.loc 1 2490 0
 1529 0040 2368     		ldr	r3, [r4]
 1530 0042 9B68     		ldr	r3, [r3, #8]
 1531 0044 13F0400F 		tst	r3, #64
 1532 0048 E6D0     		beq	.L103
2492:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     UART_EndRxTransfer(huart);
 1533              		.loc 1 2492 0
 1534 004a 0023     		movs	r3, #0
 1535 004c A4F85A30 		strh	r3, [r4, #90]	@ movhi
2493:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 1536              		.loc 1 2493 0
 1537 0050 2046     		mov	r0, r4
 1538 0052 FFF7FEFF 		bl	UART_EndRxTransfer
 1539              	.LVL121:
 1540 0056 DFE7     		b	.L103
 1541              		.cfi_endproc
ARM GAS  /tmp/cc8tmKB0.s 			page 75


 1542              	.LFE175:
 1544              		.section	.text.UART_DMAAbortOnError,"ax",%progbits
 1545              		.align	1
 1546              		.syntax unified
 1547              		.thumb
 1548              		.thumb_func
 1549              		.fpu fpv4-sp-d16
 1551              	UART_DMAAbortOnError:
 1552              	.LFB176:
2499:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2500:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
2501:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief  DMA UART communication abort callback, when initiated by HAL services on Error
2502:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *         (To be called at end of DMA Abort procedure following error occurrence).
2503:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param  hdma DMA handle.
2504:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval None
2505:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
2506:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** static void UART_DMAAbortOnError(DMA_HandleTypeDef *hdma)
2507:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
 1553              		.loc 1 2507 0
 1554              		.cfi_startproc
 1555              		@ args = 0, pretend = 0, frame = 0
 1556              		@ frame_needed = 0, uses_anonymous_args = 0
 1557              	.LVL122:
 1558 0000 08B5     		push	{r3, lr}
 1559              	.LCFI13:
 1560              		.cfi_def_cfa_offset 8
 1561              		.cfi_offset 3, -8
 1562              		.cfi_offset 14, -4
2508:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   UART_HandleTypeDef* huart = (UART_HandleTypeDef*)(hdma->Parent);
 1563              		.loc 1 2508 0
 1564 0002 406A     		ldr	r0, [r0, #36]
 1565              	.LVL123:
2509:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->RxXferCount = 0U;
 1566              		.loc 1 2509 0
 1567 0004 0023     		movs	r3, #0
 1568 0006 A0F85A30 		strh	r3, [r0, #90]	@ movhi
2510:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->TxXferCount = 0U;
 1569              		.loc 1 2510 0
 1570 000a A0F85230 		strh	r3, [r0, #82]	@ movhi
2511:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2512:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   HAL_UART_ErrorCallback(huart);
 1571              		.loc 1 2512 0
 1572 000e FFF7FEFF 		bl	HAL_UART_ErrorCallback
 1573              	.LVL124:
2513:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
 1574              		.loc 1 2513 0
 1575 0012 08BD     		pop	{r3, pc}
 1576              		.cfi_endproc
 1577              	.LFE176:
 1579              		.section	.text.HAL_UART_AbortCpltCallback,"ax",%progbits
 1580              		.align	1
 1581              		.weak	HAL_UART_AbortCpltCallback
 1582              		.syntax unified
 1583              		.thumb
 1584              		.thumb_func
 1585              		.fpu fpv4-sp-d16
 1587              	HAL_UART_AbortCpltCallback:
ARM GAS  /tmp/cc8tmKB0.s 			page 76


 1588              	.LFB154:
1844:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 1589              		.loc 1 1844 0
 1590              		.cfi_startproc
 1591              		@ args = 0, pretend = 0, frame = 0
 1592              		@ frame_needed = 0, uses_anonymous_args = 0
 1593              		@ link register save eliminated.
 1594              	.LVL125:
1851:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 1595              		.loc 1 1851 0
 1596 0000 7047     		bx	lr
 1597              		.cfi_endproc
 1598              	.LFE154:
 1600              		.section	.text.HAL_UART_Abort_IT,"ax",%progbits
 1601              		.align	1
 1602              		.global	HAL_UART_Abort_IT
 1603              		.syntax unified
 1604              		.thumb
 1605              		.thumb_func
 1606              		.fpu fpv4-sp-d16
 1608              	HAL_UART_Abort_IT:
 1609              	.LFB145:
1364:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   uint32_t abortcplt = 1U;
 1610              		.loc 1 1364 0
 1611              		.cfi_startproc
 1612              		@ args = 0, pretend = 0, frame = 0
 1613              		@ frame_needed = 0, uses_anonymous_args = 0
 1614              	.LVL126:
 1615 0000 10B5     		push	{r4, lr}
 1616              	.LCFI14:
 1617              		.cfi_def_cfa_offset 8
 1618              		.cfi_offset 4, -8
 1619              		.cfi_offset 14, -4
 1620 0002 0446     		mov	r4, r0
 1621              	.LVL127:
1368:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 1622              		.loc 1 1368 0
 1623 0004 0268     		ldr	r2, [r0]
 1624 0006 1368     		ldr	r3, [r2]
 1625 0008 23F4F073 		bic	r3, r3, #480
 1626 000c 1360     		str	r3, [r2]
1369:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 1627              		.loc 1 1369 0
 1628 000e 0268     		ldr	r2, [r0]
 1629 0010 9368     		ldr	r3, [r2, #8]
 1630 0012 23F00103 		bic	r3, r3, #1
 1631 0016 9360     		str	r3, [r2, #8]
1374:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 1632              		.loc 1 1374 0
 1633 0018 036E     		ldr	r3, [r0, #96]
 1634 001a 33B1     		cbz	r3, .L111
1378:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 1635              		.loc 1 1378 0
 1636 001c 0268     		ldr	r2, [r0]
 1637 001e 9268     		ldr	r2, [r2, #8]
 1638 0020 12F0800F 		tst	r2, #128
 1639 0024 1DD0     		beq	.L112
ARM GAS  /tmp/cc8tmKB0.s 			page 77


1380:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
 1640              		.loc 1 1380 0
 1641 0026 284A     		ldr	r2, .L123
 1642 0028 5A63     		str	r2, [r3, #52]
 1643              	.L111:
1388:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 1644              		.loc 1 1388 0
 1645 002a 636E     		ldr	r3, [r4, #100]
 1646 002c 33B1     		cbz	r3, .L113
1392:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 1647              		.loc 1 1392 0
 1648 002e 2268     		ldr	r2, [r4]
 1649 0030 9268     		ldr	r2, [r2, #8]
 1650 0032 12F0400F 		tst	r2, #64
 1651 0036 17D0     		beq	.L114
1394:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
 1652              		.loc 1 1394 0
 1653 0038 244A     		ldr	r2, .L123+4
 1654 003a 5A63     		str	r2, [r3, #52]
 1655              	.L113:
1403:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 1656              		.loc 1 1403 0
 1657 003c 2368     		ldr	r3, [r4]
 1658 003e 9A68     		ldr	r2, [r3, #8]
 1659 0040 12F0800F 		tst	r2, #128
 1660 0044 13D0     		beq	.L119
1406:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 1661              		.loc 1 1406 0
 1662 0046 9A68     		ldr	r2, [r3, #8]
 1663 0048 22F08002 		bic	r2, r2, #128
 1664 004c 9A60     		str	r2, [r3, #8]
1409:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 1665              		.loc 1 1409 0
 1666 004e 206E     		ldr	r0, [r4, #96]
 1667              	.LVL128:
 1668 0050 88B3     		cbz	r0, .L120
1415:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       {
 1669              		.loc 1 1415 0
 1670 0052 FFF7FEFF 		bl	HAL_DMA_Abort_IT
 1671              	.LVL129:
 1672 0056 80B3     		cbz	r0, .L121
1417:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       }
 1673              		.loc 1 1417 0
 1674 0058 236E     		ldr	r3, [r4, #96]
 1675 005a 0022     		movs	r2, #0
 1676 005c 5A63     		str	r2, [r3, #52]
1365:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   
 1677              		.loc 1 1365 0
 1678 005e 0121     		movs	r1, #1
 1679 0060 06E0     		b	.L115
 1680              	.LVL130:
 1681              	.L112:
1384:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
 1682              		.loc 1 1384 0
 1683 0062 0022     		movs	r2, #0
 1684 0064 5A63     		str	r2, [r3, #52]
 1685 0066 E0E7     		b	.L111
ARM GAS  /tmp/cc8tmKB0.s 			page 78


 1686              	.L114:
1398:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
 1687              		.loc 1 1398 0
 1688 0068 0022     		movs	r2, #0
 1689 006a 5A63     		str	r2, [r3, #52]
 1690 006c E6E7     		b	.L113
 1691              	.L119:
1365:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   
 1692              		.loc 1 1365 0
 1693 006e 0121     		movs	r1, #1
 1694              	.LVL131:
 1695              	.L115:
1427:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 1696              		.loc 1 1427 0
 1697 0070 2368     		ldr	r3, [r4]
 1698 0072 9A68     		ldr	r2, [r3, #8]
 1699 0074 12F0400F 		tst	r2, #64
 1700 0078 21D0     		beq	.L116
1429:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 1701              		.loc 1 1429 0
 1702 007a 9A68     		ldr	r2, [r3, #8]
 1703 007c 22F04002 		bic	r2, r2, #64
 1704 0080 9A60     		str	r2, [r3, #8]
1432:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 1705              		.loc 1 1432 0
 1706 0082 606E     		ldr	r0, [r4, #100]
 1707 0084 D8B1     		cbz	r0, .L116
1438:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       {
 1708              		.loc 1 1438 0
 1709 0086 FFF7FEFF 		bl	HAL_DMA_Abort_IT
 1710              	.LVL132:
 1711 008a D0B1     		cbz	r0, .L117
1440:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         abortcplt = 1U;
 1712              		.loc 1 1440 0
 1713 008c 636E     		ldr	r3, [r4, #100]
 1714 008e 0022     		movs	r2, #0
 1715 0090 5A63     		str	r2, [r3, #52]
 1716              	.LVL133:
 1717              	.L118:
1454:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->RxXferCount = 0U;
 1718              		.loc 1 1454 0
 1719 0092 0023     		movs	r3, #0
 1720 0094 A4F85230 		strh	r3, [r4, #82]	@ movhi
1455:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 1721              		.loc 1 1455 0
 1722 0098 A4F85A30 		strh	r3, [r4, #90]	@ movhi
1458:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 1723              		.loc 1 1458 0
 1724 009c E366     		str	r3, [r4, #108]
1461:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 1725              		.loc 1 1461 0
 1726 009e 2368     		ldr	r3, [r4]
 1727 00a0 0F22     		movs	r2, #15
 1728 00a2 1A62     		str	r2, [r3, #32]
1464:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_READY;
 1729              		.loc 1 1464 0
 1730 00a4 2023     		movs	r3, #32
ARM GAS  /tmp/cc8tmKB0.s 			page 79


 1731 00a6 84F86930 		strb	r3, [r4, #105]
1465:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 1732              		.loc 1 1465 0
 1733 00aa 84F86A30 		strb	r3, [r4, #106]
1468:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 1734              		.loc 1 1468 0
 1735 00ae 2046     		mov	r0, r4
 1736 00b0 FFF7FEFF 		bl	HAL_UART_AbortCpltCallback
 1737              	.LVL134:
 1738 00b4 05E0     		b	.L117
 1739              	.LVL135:
 1740              	.L120:
1365:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   
 1741              		.loc 1 1365 0
 1742 00b6 0121     		movs	r1, #1
 1743 00b8 DAE7     		b	.L115
 1744              	.L121:
1421:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       }
 1745              		.loc 1 1421 0
 1746 00ba 0021     		movs	r1, #0
 1747 00bc D8E7     		b	.L115
 1748              	.LVL136:
 1749              	.L116:
1451:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 1750              		.loc 1 1451 0
 1751 00be 0029     		cmp	r1, #0
 1752 00c0 E7D1     		bne	.L118
 1753              	.LVL137:
 1754              	.L117:
1472:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 1755              		.loc 1 1472 0
 1756 00c2 0020     		movs	r0, #0
 1757 00c4 10BD     		pop	{r4, pc}
 1758              	.LVL138:
 1759              	.L124:
 1760 00c6 00BF     		.align	2
 1761              	.L123:
 1762 00c8 00000000 		.word	UART_DMATxAbortCallback
 1763 00cc 00000000 		.word	UART_DMARxAbortCallback
 1764              		.cfi_endproc
 1765              	.LFE145:
 1767              		.section	.text.UART_DMARxAbortCallback,"ax",%progbits
 1768              		.align	1
 1769              		.syntax unified
 1770              		.thumb
 1771              		.thumb_func
 1772              		.fpu fpv4-sp-d16
 1774              	UART_DMARxAbortCallback:
 1775              	.LFB178:
2514:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2515:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
2516:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief  DMA UART Tx communication abort callback, when initiated by user
2517:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *         (To be called at end of DMA Tx Abort procedure following user abort request).
2518:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @note   When this callback is executed, User Abort complete call back is called only if no
2519:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *         Abort still ongoing for Rx DMA Handle.
2520:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param  hdma DMA handle.
2521:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval None
ARM GAS  /tmp/cc8tmKB0.s 			page 80


2522:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
2523:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** static void UART_DMATxAbortCallback(DMA_HandleTypeDef *hdma)
2524:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
2525:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   UART_HandleTypeDef* huart = (UART_HandleTypeDef* )(hdma->Parent);
2526:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   
2527:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->hdmatx->XferAbortCallback = NULL;
2528:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2529:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Check if an Abort process is still ongoing */
2530:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if(huart->hdmarx != NULL)
2531:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
2532:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     if(huart->hdmarx->XferAbortCallback != NULL)
2533:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
2534:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       return;
2535:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
2536:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
2537:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   
2538:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* No Abort process still ongoing : All DMA channels are aborted, call user Abort Complete callba
2539:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->TxXferCount = 0U;
2540:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->RxXferCount = 0U;
2541:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2542:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Reset errorCode */
2543:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
2544:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2545:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Clear the Error flags in the ICR register */
2546:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF | UART_CLEAR_NEF | UART_CLEAR_PEF | UART_CLEAR_FEF);
2547:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2548:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Restore huart->gState and huart->RxState to Ready */
2549:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->gState  = HAL_UART_STATE_READY;
2550:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
2551:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2552:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Call user Abort complete callback */
2553:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   HAL_UART_AbortCpltCallback(huart);
2554:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
2555:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2556:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2557:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
2558:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief  DMA UART Rx communication abort callback, when initiated by user
2559:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *         (To be called at end of DMA Rx Abort procedure following user abort request).
2560:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @note   When this callback is executed, User Abort complete call back is called only if no
2561:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *         Abort still ongoing for Tx DMA Handle.
2562:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param  hdma DMA handle.
2563:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval None
2564:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
2565:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** static void UART_DMARxAbortCallback(DMA_HandleTypeDef *hdma)
2566:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
 1776              		.loc 1 2566 0
 1777              		.cfi_startproc
 1778              		@ args = 0, pretend = 0, frame = 0
 1779              		@ frame_needed = 0, uses_anonymous_args = 0
 1780              	.LVL139:
 1781 0000 08B5     		push	{r3, lr}
 1782              	.LCFI15:
 1783              		.cfi_def_cfa_offset 8
 1784              		.cfi_offset 3, -8
 1785              		.cfi_offset 14, -4
2567:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   UART_HandleTypeDef* huart = (UART_HandleTypeDef* )(hdma->Parent);
 1786              		.loc 1 2567 0
ARM GAS  /tmp/cc8tmKB0.s 			page 81


 1787 0002 406A     		ldr	r0, [r0, #36]
 1788              	.LVL140:
2568:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   
2569:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->hdmarx->XferAbortCallback = NULL;
 1789              		.loc 1 2569 0
 1790 0004 436E     		ldr	r3, [r0, #100]
 1791 0006 0022     		movs	r2, #0
 1792 0008 5A63     		str	r2, [r3, #52]
2570:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2571:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Check if an Abort process is still ongoing */
2572:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if(huart->hdmatx != NULL)
 1793              		.loc 1 2572 0
 1794 000a 036E     		ldr	r3, [r0, #96]
 1795 000c 13B1     		cbz	r3, .L126
2573:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
2574:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     if(huart->hdmatx->XferAbortCallback != NULL)
 1796              		.loc 1 2574 0
 1797 000e 5B6B     		ldr	r3, [r3, #52]
 1798 0010 03B1     		cbz	r3, .L126
 1799              	.LVL141:
 1800              	.L125:
2575:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
2576:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       return;
2577:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
2578:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
2579:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   
2580:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* No Abort process still ongoing : All DMA channels are aborted, call user Abort Complete callba
2581:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->TxXferCount = 0U;
2582:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->RxXferCount = 0U;
2583:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2584:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Reset errorCode */
2585:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
2586:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2587:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Clear the Error flags in the ICR register */
2588:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF | UART_CLEAR_NEF | UART_CLEAR_PEF | UART_CLEAR_FEF);
2589:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2590:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Restore huart->gState and huart->RxState to Ready */
2591:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->gState  = HAL_UART_STATE_READY;
2592:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
2593:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2594:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Call user Abort complete callback */
2595:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   HAL_UART_AbortCpltCallback(huart);
2596:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
 1801              		.loc 1 2596 0
 1802 0012 08BD     		pop	{r3, pc}
 1803              	.LVL142:
 1804              	.L126:
2581:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->RxXferCount = 0U;
 1805              		.loc 1 2581 0
 1806 0014 0023     		movs	r3, #0
 1807 0016 A0F85230 		strh	r3, [r0, #82]	@ movhi
2582:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 1808              		.loc 1 2582 0
 1809 001a A0F85A30 		strh	r3, [r0, #90]	@ movhi
2585:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 1810              		.loc 1 2585 0
 1811 001e C366     		str	r3, [r0, #108]
ARM GAS  /tmp/cc8tmKB0.s 			page 82


2588:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 1812              		.loc 1 2588 0
 1813 0020 0368     		ldr	r3, [r0]
 1814 0022 0F22     		movs	r2, #15
 1815 0024 1A62     		str	r2, [r3, #32]
2591:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
 1816              		.loc 1 2591 0
 1817 0026 2023     		movs	r3, #32
 1818 0028 80F86930 		strb	r3, [r0, #105]
2592:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 1819              		.loc 1 2592 0
 1820 002c 80F86A30 		strb	r3, [r0, #106]
2595:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
 1821              		.loc 1 2595 0
 1822 0030 FFF7FEFF 		bl	HAL_UART_AbortCpltCallback
 1823              	.LVL143:
 1824 0034 EDE7     		b	.L125
 1825              		.cfi_endproc
 1826              	.LFE178:
 1828              		.section	.text.UART_DMATxAbortCallback,"ax",%progbits
 1829              		.align	1
 1830              		.syntax unified
 1831              		.thumb
 1832              		.thumb_func
 1833              		.fpu fpv4-sp-d16
 1835              	UART_DMATxAbortCallback:
 1836              	.LFB177:
2524:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   UART_HandleTypeDef* huart = (UART_HandleTypeDef* )(hdma->Parent);
 1837              		.loc 1 2524 0
 1838              		.cfi_startproc
 1839              		@ args = 0, pretend = 0, frame = 0
 1840              		@ frame_needed = 0, uses_anonymous_args = 0
 1841              	.LVL144:
 1842 0000 08B5     		push	{r3, lr}
 1843              	.LCFI16:
 1844              		.cfi_def_cfa_offset 8
 1845              		.cfi_offset 3, -8
 1846              		.cfi_offset 14, -4
2525:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   
 1847              		.loc 1 2525 0
 1848 0002 406A     		ldr	r0, [r0, #36]
 1849              	.LVL145:
2527:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 1850              		.loc 1 2527 0
 1851 0004 036E     		ldr	r3, [r0, #96]
 1852 0006 0022     		movs	r2, #0
 1853 0008 5A63     		str	r2, [r3, #52]
2530:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 1854              		.loc 1 2530 0
 1855 000a 436E     		ldr	r3, [r0, #100]
 1856 000c 13B1     		cbz	r3, .L130
2532:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 1857              		.loc 1 2532 0
 1858 000e 5B6B     		ldr	r3, [r3, #52]
 1859 0010 03B1     		cbz	r3, .L130
 1860              	.LVL146:
 1861              	.L129:
ARM GAS  /tmp/cc8tmKB0.s 			page 83


2554:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 1862              		.loc 1 2554 0
 1863 0012 08BD     		pop	{r3, pc}
 1864              	.LVL147:
 1865              	.L130:
2539:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->RxXferCount = 0U;
 1866              		.loc 1 2539 0
 1867 0014 0023     		movs	r3, #0
 1868 0016 A0F85230 		strh	r3, [r0, #82]	@ movhi
2540:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 1869              		.loc 1 2540 0
 1870 001a A0F85A30 		strh	r3, [r0, #90]	@ movhi
2543:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 1871              		.loc 1 2543 0
 1872 001e C366     		str	r3, [r0, #108]
2546:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 1873              		.loc 1 2546 0
 1874 0020 0368     		ldr	r3, [r0]
 1875 0022 0F22     		movs	r2, #15
 1876 0024 1A62     		str	r2, [r3, #32]
2549:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
 1877              		.loc 1 2549 0
 1878 0026 2023     		movs	r3, #32
 1879 0028 80F86930 		strb	r3, [r0, #105]
2550:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 1880              		.loc 1 2550 0
 1881 002c 80F86A30 		strb	r3, [r0, #106]
2553:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
 1882              		.loc 1 2553 0
 1883 0030 FFF7FEFF 		bl	HAL_UART_AbortCpltCallback
 1884              	.LVL148:
 1885 0034 EDE7     		b	.L129
 1886              		.cfi_endproc
 1887              	.LFE177:
 1889              		.section	.text.HAL_UART_AbortTransmitCpltCallback,"ax",%progbits
 1890              		.align	1
 1891              		.weak	HAL_UART_AbortTransmitCpltCallback
 1892              		.syntax unified
 1893              		.thumb
 1894              		.thumb_func
 1895              		.fpu fpv4-sp-d16
 1897              	HAL_UART_AbortTransmitCpltCallback:
 1898              	.LFB155:
1859:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 1899              		.loc 1 1859 0
 1900              		.cfi_startproc
 1901              		@ args = 0, pretend = 0, frame = 0
 1902              		@ frame_needed = 0, uses_anonymous_args = 0
 1903              		@ link register save eliminated.
 1904              	.LVL149:
1866:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 1905              		.loc 1 1866 0
 1906 0000 7047     		bx	lr
 1907              		.cfi_endproc
 1908              	.LFE155:
 1910              		.section	.text.HAL_UART_AbortTransmit_IT,"ax",%progbits
 1911              		.align	1
ARM GAS  /tmp/cc8tmKB0.s 			page 84


 1912              		.global	HAL_UART_AbortTransmit_IT
 1913              		.syntax unified
 1914              		.thumb
 1915              		.thumb_func
 1916              		.fpu fpv4-sp-d16
 1918              	HAL_UART_AbortTransmit_IT:
 1919              	.LFB146:
1489:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Disable TXEIE and TCIE interrupts */
 1920              		.loc 1 1489 0
 1921              		.cfi_startproc
 1922              		@ args = 0, pretend = 0, frame = 0
 1923              		@ frame_needed = 0, uses_anonymous_args = 0
 1924              	.LVL150:
 1925 0000 10B5     		push	{r4, lr}
 1926              	.LCFI17:
 1927              		.cfi_def_cfa_offset 8
 1928              		.cfi_offset 4, -8
 1929              		.cfi_offset 14, -4
 1930 0002 0446     		mov	r4, r0
1491:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 1931              		.loc 1 1491 0
 1932 0004 0268     		ldr	r2, [r0]
 1933 0006 1368     		ldr	r3, [r2]
 1934 0008 23F0C003 		bic	r3, r3, #192
 1935 000c 1360     		str	r3, [r2]
1494:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 1936              		.loc 1 1494 0
 1937 000e 0368     		ldr	r3, [r0]
 1938 0010 9A68     		ldr	r2, [r3, #8]
 1939 0012 12F0800F 		tst	r2, #128
 1940 0016 19D0     		beq	.L135
1496:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 1941              		.loc 1 1496 0
 1942 0018 9A68     		ldr	r2, [r3, #8]
 1943 001a 22F08002 		bic	r2, r2, #128
 1944 001e 9A60     		str	r2, [r3, #8]
1499:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 1945              		.loc 1 1499 0
 1946 0020 036E     		ldr	r3, [r0, #96]
 1947 0022 53B1     		cbz	r3, .L136
1503:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 1948              		.loc 1 1503 0
 1949 0024 0E4A     		ldr	r2, .L139
 1950 0026 5A63     		str	r2, [r3, #52]
1506:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       {
 1951              		.loc 1 1506 0
 1952 0028 006E     		ldr	r0, [r0, #96]
 1953              	.LVL151:
 1954 002a FFF7FEFF 		bl	HAL_DMA_Abort_IT
 1955              	.LVL152:
 1956 002e 10B1     		cbz	r0, .L137
1509:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       }
 1957              		.loc 1 1509 0
 1958 0030 206E     		ldr	r0, [r4, #96]
 1959 0032 436B     		ldr	r3, [r0, #52]
 1960 0034 9847     		blx	r3
 1961              	.LVL153:
ARM GAS  /tmp/cc8tmKB0.s 			page 85


 1962              	.L137:
1537:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 1963              		.loc 1 1537 0
 1964 0036 0020     		movs	r0, #0
 1965 0038 10BD     		pop	{r4, pc}
 1966              	.LVL154:
 1967              	.L136:
1515:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 1968              		.loc 1 1515 0
 1969 003a 0023     		movs	r3, #0
 1970 003c A0F85230 		strh	r3, [r0, #82]	@ movhi
1518:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 1971              		.loc 1 1518 0
 1972 0040 2023     		movs	r3, #32
 1973 0042 80F86930 		strb	r3, [r0, #105]
1521:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
 1974              		.loc 1 1521 0
 1975 0046 FFF7FEFF 		bl	HAL_UART_AbortTransmitCpltCallback
 1976              	.LVL155:
 1977 004a F4E7     		b	.L137
 1978              	.LVL156:
 1979              	.L135:
1527:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 1980              		.loc 1 1527 0
 1981 004c 0023     		movs	r3, #0
 1982 004e A0F85230 		strh	r3, [r0, #82]	@ movhi
1530:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 1983              		.loc 1 1530 0
 1984 0052 2023     		movs	r3, #32
 1985 0054 80F86930 		strb	r3, [r0, #105]
1533:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 1986              		.loc 1 1533 0
 1987 0058 FFF7FEFF 		bl	HAL_UART_AbortTransmitCpltCallback
 1988              	.LVL157:
 1989 005c EBE7     		b	.L137
 1990              	.L140:
 1991 005e 00BF     		.align	2
 1992              	.L139:
 1993 0060 00000000 		.word	UART_DMATxOnlyAbortCallback
 1994              		.cfi_endproc
 1995              	.LFE146:
 1997              		.section	.text.UART_DMATxOnlyAbortCallback,"ax",%progbits
 1998              		.align	1
 1999              		.syntax unified
 2000              		.thumb
 2001              		.thumb_func
 2002              		.fpu fpv4-sp-d16
 2004              	UART_DMATxOnlyAbortCallback:
 2005              	.LFB179:
2597:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2598:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2599:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
2600:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief  DMA UART Tx communication abort callback, when initiated by user by a call to
2601:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *         HAL_UART_AbortTransmit_IT API (Abort only Tx transfer)
2602:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *         (This callback is executed at end of DMA Tx Abort procedure following user abort reques
2603:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *         and leads to user Tx Abort Complete callback execution).
2604:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param  hdma DMA handle.
ARM GAS  /tmp/cc8tmKB0.s 			page 86


2605:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval None
2606:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
2607:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** static void UART_DMATxOnlyAbortCallback(DMA_HandleTypeDef *hdma)
2608:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
 2006              		.loc 1 2608 0
 2007              		.cfi_startproc
 2008              		@ args = 0, pretend = 0, frame = 0
 2009              		@ frame_needed = 0, uses_anonymous_args = 0
 2010              	.LVL158:
 2011 0000 08B5     		push	{r3, lr}
 2012              	.LCFI18:
 2013              		.cfi_def_cfa_offset 8
 2014              		.cfi_offset 3, -8
 2015              		.cfi_offset 14, -4
2609:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   UART_HandleTypeDef* huart = (UART_HandleTypeDef*)(hdma->Parent);
 2016              		.loc 1 2609 0
 2017 0002 406A     		ldr	r0, [r0, #36]
 2018              	.LVL159:
2610:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2611:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->TxXferCount = 0U;
 2019              		.loc 1 2611 0
 2020 0004 0023     		movs	r3, #0
 2021 0006 A0F85230 		strh	r3, [r0, #82]	@ movhi
2612:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2613:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Restore huart->gState to Ready */
2614:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
 2022              		.loc 1 2614 0
 2023 000a 2023     		movs	r3, #32
 2024 000c 80F86930 		strb	r3, [r0, #105]
2615:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2616:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Call user Abort complete callback */
2617:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   HAL_UART_AbortTransmitCpltCallback(huart);
 2025              		.loc 1 2617 0
 2026 0010 FFF7FEFF 		bl	HAL_UART_AbortTransmitCpltCallback
 2027              	.LVL160:
2618:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
 2028              		.loc 1 2618 0
 2029 0014 08BD     		pop	{r3, pc}
 2030              		.cfi_endproc
 2031              	.LFE179:
 2033              		.section	.text.HAL_UART_AbortReceiveCpltCallback,"ax",%progbits
 2034              		.align	1
 2035              		.weak	HAL_UART_AbortReceiveCpltCallback
 2036              		.syntax unified
 2037              		.thumb
 2038              		.thumb_func
 2039              		.fpu fpv4-sp-d16
 2041              	HAL_UART_AbortReceiveCpltCallback:
 2042              	.LFB156:
1874:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 2043              		.loc 1 1874 0
 2044              		.cfi_startproc
 2045              		@ args = 0, pretend = 0, frame = 0
 2046              		@ frame_needed = 0, uses_anonymous_args = 0
 2047              		@ link register save eliminated.
 2048              	.LVL161:
1881:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
ARM GAS  /tmp/cc8tmKB0.s 			page 87


 2049              		.loc 1 1881 0
 2050 0000 7047     		bx	lr
 2051              		.cfi_endproc
 2052              	.LFE156:
 2054              		.section	.text.HAL_UART_AbortReceive_IT,"ax",%progbits
 2055              		.align	1
 2056              		.global	HAL_UART_AbortReceive_IT
 2057              		.syntax unified
 2058              		.thumb
 2059              		.thumb_func
 2060              		.fpu fpv4-sp-d16
 2062              	HAL_UART_AbortReceive_IT:
 2063              	.LFB147:
1554:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Disable RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
 2064              		.loc 1 1554 0
 2065              		.cfi_startproc
 2066              		@ args = 0, pretend = 0, frame = 0
 2067              		@ frame_needed = 0, uses_anonymous_args = 0
 2068              	.LVL162:
 2069 0000 10B5     		push	{r4, lr}
 2070              	.LCFI19:
 2071              		.cfi_def_cfa_offset 8
 2072              		.cfi_offset 4, -8
 2073              		.cfi_offset 14, -4
 2074 0002 0446     		mov	r4, r0
1556:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 2075              		.loc 1 1556 0
 2076 0004 0268     		ldr	r2, [r0]
 2077 0006 1368     		ldr	r3, [r2]
 2078 0008 23F49073 		bic	r3, r3, #288
 2079 000c 1360     		str	r3, [r2]
1557:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2080              		.loc 1 1557 0
 2081 000e 0268     		ldr	r2, [r0]
 2082 0010 9368     		ldr	r3, [r2, #8]
 2083 0012 23F00103 		bic	r3, r3, #1
 2084 0016 9360     		str	r3, [r2, #8]
1560:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 2085              		.loc 1 1560 0
 2086 0018 0368     		ldr	r3, [r0]
 2087 001a 9A68     		ldr	r2, [r3, #8]
 2088 001c 12F0400F 		tst	r2, #64
 2089 0020 1CD0     		beq	.L145
1562:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2090              		.loc 1 1562 0
 2091 0022 9A68     		ldr	r2, [r3, #8]
 2092 0024 22F04002 		bic	r2, r2, #64
 2093 0028 9A60     		str	r2, [r3, #8]
1565:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 2094              		.loc 1 1565 0
 2095 002a 436E     		ldr	r3, [r0, #100]
 2096 002c 53B1     		cbz	r3, .L146
1569:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2097              		.loc 1 1569 0
 2098 002e 114A     		ldr	r2, .L149
 2099 0030 5A63     		str	r2, [r3, #52]
1572:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       {
ARM GAS  /tmp/cc8tmKB0.s 			page 88


 2100              		.loc 1 1572 0
 2101 0032 406E     		ldr	r0, [r0, #100]
 2102              	.LVL163:
 2103 0034 FFF7FEFF 		bl	HAL_DMA_Abort_IT
 2104              	.LVL164:
 2105 0038 10B1     		cbz	r0, .L147
1575:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       }
 2106              		.loc 1 1575 0
 2107 003a 606E     		ldr	r0, [r4, #100]
 2108 003c 436B     		ldr	r3, [r0, #52]
 2109 003e 9847     		blx	r3
 2110              	.LVL165:
 2111              	.L147:
1609:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2112              		.loc 1 1609 0
 2113 0040 0020     		movs	r0, #0
 2114 0042 10BD     		pop	{r4, pc}
 2115              	.LVL166:
 2116              	.L146:
1581:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2117              		.loc 1 1581 0
 2118 0044 0023     		movs	r3, #0
 2119 0046 A0F85A30 		strh	r3, [r0, #90]	@ movhi
1584:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2120              		.loc 1 1584 0
 2121 004a 0368     		ldr	r3, [r0]
 2122 004c 0F22     		movs	r2, #15
 2123 004e 1A62     		str	r2, [r3, #32]
1587:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2124              		.loc 1 1587 0
 2125 0050 2023     		movs	r3, #32
 2126 0052 80F86A30 		strb	r3, [r0, #106]
1590:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
 2127              		.loc 1 1590 0
 2128 0056 FFF7FEFF 		bl	HAL_UART_AbortReceiveCpltCallback
 2129              	.LVL167:
 2130 005a F1E7     		b	.L147
 2131              	.LVL168:
 2132              	.L145:
1596:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2133              		.loc 1 1596 0
 2134 005c 0022     		movs	r2, #0
 2135 005e A0F85A20 		strh	r2, [r0, #90]	@ movhi
1599:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2136              		.loc 1 1599 0
 2137 0062 0F22     		movs	r2, #15
 2138 0064 1A62     		str	r2, [r3, #32]
1602:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2139              		.loc 1 1602 0
 2140 0066 2023     		movs	r3, #32
 2141 0068 80F86A30 		strb	r3, [r0, #106]
1605:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 2142              		.loc 1 1605 0
 2143 006c FFF7FEFF 		bl	HAL_UART_AbortReceiveCpltCallback
 2144              	.LVL169:
 2145 0070 E6E7     		b	.L147
 2146              	.L150:
ARM GAS  /tmp/cc8tmKB0.s 			page 89


 2147 0072 00BF     		.align	2
 2148              	.L149:
 2149 0074 00000000 		.word	UART_DMARxOnlyAbortCallback
 2150              		.cfi_endproc
 2151              	.LFE147:
 2153              		.section	.text.UART_DMARxOnlyAbortCallback,"ax",%progbits
 2154              		.align	1
 2155              		.syntax unified
 2156              		.thumb
 2157              		.thumb_func
 2158              		.fpu fpv4-sp-d16
 2160              	UART_DMARxOnlyAbortCallback:
 2161              	.LFB180:
2619:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2620:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
2621:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief  DMA UART Rx communication abort callback, when initiated by user by a call to
2622:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *         HAL_UART_AbortReceive_IT API (Abort only Rx transfer)
2623:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *         (This callback is executed at end of DMA Rx Abort procedure following user abort reques
2624:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *         and leads to user Rx Abort Complete callback execution).
2625:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param  hdma DMA handle.
2626:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval None
2627:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
2628:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** static void UART_DMARxOnlyAbortCallback(DMA_HandleTypeDef *hdma)
2629:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
 2162              		.loc 1 2629 0
 2163              		.cfi_startproc
 2164              		@ args = 0, pretend = 0, frame = 0
 2165              		@ frame_needed = 0, uses_anonymous_args = 0
 2166              	.LVL170:
 2167 0000 08B5     		push	{r3, lr}
 2168              	.LCFI20:
 2169              		.cfi_def_cfa_offset 8
 2170              		.cfi_offset 3, -8
 2171              		.cfi_offset 14, -4
2630:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   UART_HandleTypeDef* huart = ( UART_HandleTypeDef* )((DMA_HandleTypeDef* )hdma)->Parent;
 2172              		.loc 1 2630 0
 2173 0002 406A     		ldr	r0, [r0, #36]
 2174              	.LVL171:
2631:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2632:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->RxXferCount = 0U;
 2175              		.loc 1 2632 0
 2176 0004 0023     		movs	r3, #0
 2177 0006 A0F85A30 		strh	r3, [r0, #90]	@ movhi
2633:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2634:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Clear the Error flags in the ICR register */
2635:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF | UART_CLEAR_NEF | UART_CLEAR_PEF | UART_CLEAR_FEF);
 2178              		.loc 1 2635 0
 2179 000a 0368     		ldr	r3, [r0]
 2180 000c 0F22     		movs	r2, #15
 2181 000e 1A62     		str	r2, [r3, #32]
2636:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2637:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Restore huart->RxState to Ready */
2638:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
 2182              		.loc 1 2638 0
 2183 0010 2023     		movs	r3, #32
 2184 0012 80F86A30 		strb	r3, [r0, #106]
2639:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
ARM GAS  /tmp/cc8tmKB0.s 			page 90


2640:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Call user Abort complete callback */
2641:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   HAL_UART_AbortReceiveCpltCallback(huart);
 2185              		.loc 1 2641 0
 2186 0016 FFF7FEFF 		bl	HAL_UART_AbortReceiveCpltCallback
 2187              	.LVL172:
2642:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
 2188              		.loc 1 2642 0
 2189 001a 08BD     		pop	{r3, pc}
 2190              		.cfi_endproc
 2191              	.LFE180:
 2193              		.section	.text.HAL_MultiProcessor_EnterMuteMode,"ax",%progbits
 2194              		.align	1
 2195              		.global	HAL_MultiProcessor_EnterMuteMode
 2196              		.syntax unified
 2197              		.thumb
 2198              		.thumb_func
 2199              		.fpu fpv4-sp-d16
 2201              	HAL_MultiProcessor_EnterMuteMode:
 2202              	.LFB159:
1955:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   __HAL_UART_SEND_REQ(huart, UART_MUTE_MODE_REQUEST);
 2203              		.loc 1 1955 0
 2204              		.cfi_startproc
 2205              		@ args = 0, pretend = 0, frame = 0
 2206              		@ frame_needed = 0, uses_anonymous_args = 0
 2207              		@ link register save eliminated.
 2208              	.LVL173:
1956:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
 2209              		.loc 1 1956 0
 2210 0000 0268     		ldr	r2, [r0]
 2211 0002 9369     		ldr	r3, [r2, #24]
 2212 0004 43F00403 		orr	r3, r3, #4
 2213 0008 9361     		str	r3, [r2, #24]
1957:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2214              		.loc 1 1957 0
 2215 000a 7047     		bx	lr
 2216              		.cfi_endproc
 2217              	.LFE159:
 2219              		.section	.text.HAL_HalfDuplex_EnableTransmitter,"ax",%progbits
 2220              		.align	1
 2221              		.global	HAL_HalfDuplex_EnableTransmitter
 2222              		.syntax unified
 2223              		.thumb
 2224              		.thumb_func
 2225              		.fpu fpv4-sp-d16
 2227              	HAL_HalfDuplex_EnableTransmitter:
 2228              	.LFB160:
1965:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Process Locked */
 2229              		.loc 1 1965 0
 2230              		.cfi_startproc
 2231              		@ args = 0, pretend = 0, frame = 0
 2232              		@ frame_needed = 0, uses_anonymous_args = 0
 2233              		@ link register save eliminated.
 2234              	.LVL174:
1967:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 2235              		.loc 1 1967 0
 2236 0000 90F86830 		ldrb	r3, [r0, #104]	@ zero_extendqisi2
 2237 0004 012B     		cmp	r3, #1
ARM GAS  /tmp/cc8tmKB0.s 			page 91


 2238 0006 17D0     		beq	.L156
1967:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 2239              		.loc 1 1967 0 is_stmt 0 discriminator 2
 2240 0008 0123     		movs	r3, #1
 2241 000a 80F86830 		strb	r3, [r0, #104]
1968:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2242              		.loc 1 1968 0 is_stmt 1 discriminator 2
 2243 000e 2423     		movs	r3, #36
 2244 0010 80F86930 		strb	r3, [r0, #105]
1971:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Enable the USART's transmit interface by setting the TE bit in the USART CR1 register */
 2245              		.loc 1 1971 0 discriminator 2
 2246 0014 0268     		ldr	r2, [r0]
 2247 0016 1368     		ldr	r3, [r2]
 2248 0018 23F00C03 		bic	r3, r3, #12
 2249 001c 1360     		str	r3, [r2]
1973:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2250              		.loc 1 1973 0 discriminator 2
 2251 001e 0268     		ldr	r2, [r0]
 2252 0020 1368     		ldr	r3, [r2]
 2253 0022 43F00803 		orr	r3, r3, #8
 2254 0026 1360     		str	r3, [r2]
1975:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2255              		.loc 1 1975 0 discriminator 2
 2256 0028 2023     		movs	r3, #32
 2257 002a 80F86930 		strb	r3, [r0, #105]
1978:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2258              		.loc 1 1978 0 discriminator 2
 2259 002e 0023     		movs	r3, #0
 2260 0030 80F86830 		strb	r3, [r0, #104]
1980:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
 2261              		.loc 1 1980 0 discriminator 2
 2262 0034 1846     		mov	r0, r3
 2263              	.LVL175:
 2264 0036 7047     		bx	lr
 2265              	.LVL176:
 2266              	.L156:
1967:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 2267              		.loc 1 1967 0
 2268 0038 0220     		movs	r0, #2
 2269              	.LVL177:
1981:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2270              		.loc 1 1981 0
 2271 003a 7047     		bx	lr
 2272              		.cfi_endproc
 2273              	.LFE160:
 2275              		.section	.text.HAL_HalfDuplex_EnableReceiver,"ax",%progbits
 2276              		.align	1
 2277              		.global	HAL_HalfDuplex_EnableReceiver
 2278              		.syntax unified
 2279              		.thumb
 2280              		.thumb_func
 2281              		.fpu fpv4-sp-d16
 2283              	HAL_HalfDuplex_EnableReceiver:
 2284              	.LFB161:
1989:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Process Locked */
 2285              		.loc 1 1989 0
 2286              		.cfi_startproc
ARM GAS  /tmp/cc8tmKB0.s 			page 92


 2287              		@ args = 0, pretend = 0, frame = 0
 2288              		@ frame_needed = 0, uses_anonymous_args = 0
 2289              		@ link register save eliminated.
 2290              	.LVL178:
1991:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 2291              		.loc 1 1991 0
 2292 0000 90F86830 		ldrb	r3, [r0, #104]	@ zero_extendqisi2
 2293 0004 012B     		cmp	r3, #1
 2294 0006 17D0     		beq	.L159
1991:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 2295              		.loc 1 1991 0 is_stmt 0 discriminator 2
 2296 0008 0123     		movs	r3, #1
 2297 000a 80F86830 		strb	r3, [r0, #104]
1992:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2298              		.loc 1 1992 0 is_stmt 1 discriminator 2
 2299 000e 2423     		movs	r3, #36
 2300 0010 80F86930 		strb	r3, [r0, #105]
1995:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Enable the USART's receive interface by setting the RE bit in the USART CR1 register */
 2301              		.loc 1 1995 0 discriminator 2
 2302 0014 0268     		ldr	r2, [r0]
 2303 0016 1368     		ldr	r3, [r2]
 2304 0018 23F00C03 		bic	r3, r3, #12
 2305 001c 1360     		str	r3, [r2]
1997:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2306              		.loc 1 1997 0 discriminator 2
 2307 001e 0268     		ldr	r2, [r0]
 2308 0020 1368     		ldr	r3, [r2]
 2309 0022 43F00403 		orr	r3, r3, #4
 2310 0026 1360     		str	r3, [r2]
1999:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Process Unlocked */
 2311              		.loc 1 1999 0 discriminator 2
 2312 0028 2023     		movs	r3, #32
 2313 002a 80F86930 		strb	r3, [r0, #105]
2001:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2314              		.loc 1 2001 0 discriminator 2
 2315 002e 0023     		movs	r3, #0
 2316 0030 80F86830 		strb	r3, [r0, #104]
2003:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
 2317              		.loc 1 2003 0 discriminator 2
 2318 0034 1846     		mov	r0, r3
 2319              	.LVL179:
 2320 0036 7047     		bx	lr
 2321              	.LVL180:
 2322              	.L159:
1991:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 2323              		.loc 1 1991 0
 2324 0038 0220     		movs	r0, #2
 2325              	.LVL181:
2004:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2326              		.loc 1 2004 0
 2327 003a 7047     		bx	lr
 2328              		.cfi_endproc
 2329              	.LFE161:
 2331              		.section	.text.HAL_LIN_SendBreak,"ax",%progbits
 2332              		.align	1
 2333              		.global	HAL_LIN_SendBreak
 2334              		.syntax unified
ARM GAS  /tmp/cc8tmKB0.s 			page 93


 2335              		.thumb
 2336              		.thumb_func
 2337              		.fpu fpv4-sp-d16
 2339              	HAL_LIN_SendBreak:
 2340              	.LFB162:
2013:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Check the parameters */
 2341              		.loc 1 2013 0
 2342              		.cfi_startproc
 2343              		@ args = 0, pretend = 0, frame = 0
 2344              		@ frame_needed = 0, uses_anonymous_args = 0
 2345              	.LVL182:
 2346 0000 10B5     		push	{r4, lr}
 2347              	.LCFI21:
 2348              		.cfi_def_cfa_offset 8
 2349              		.cfi_offset 4, -8
 2350              		.cfi_offset 14, -4
 2351 0002 0446     		mov	r4, r0
2015:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2352              		.loc 1 2015 0
 2353 0004 0368     		ldr	r3, [r0]
 2354 0006 184A     		ldr	r2, .L165
 2355 0008 9342     		cmp	r3, r2
 2356 000a 14D0     		beq	.L161
2015:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2357              		.loc 1 2015 0 is_stmt 0 discriminator 1
 2358 000c A2F57442 		sub	r2, r2, #62464
 2359 0010 9342     		cmp	r3, r2
 2360 0012 10D0     		beq	.L161
2015:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2361              		.loc 1 2015 0 discriminator 2
 2362 0014 02F58062 		add	r2, r2, #1024
 2363 0018 9342     		cmp	r3, r2
 2364 001a 0CD0     		beq	.L161
2015:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2365              		.loc 1 2015 0 discriminator 3
 2366 001c 02F58062 		add	r2, r2, #1024
 2367 0020 9342     		cmp	r3, r2
 2368 0022 08D0     		beq	.L161
2015:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2369              		.loc 1 2015 0 discriminator 4
 2370 0024 02F58062 		add	r2, r2, #1024
 2371 0028 9342     		cmp	r3, r2
 2372 002a 04D0     		beq	.L161
2015:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2373              		.loc 1 2015 0 discriminator 5
 2374 002c 40F2DF71 		movw	r1, #2015
 2375 0030 0E48     		ldr	r0, .L165+4
 2376              	.LVL183:
 2377 0032 FFF7FEFF 		bl	assert_failed
 2378              	.LVL184:
 2379              	.L161:
2018:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2380              		.loc 1 2018 0 is_stmt 1
 2381 0036 94F86830 		ldrb	r3, [r4, #104]	@ zero_extendqisi2
 2382 003a 012B     		cmp	r3, #1
 2383 003c 11D0     		beq	.L163
2018:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
ARM GAS  /tmp/cc8tmKB0.s 			page 94


 2384              		.loc 1 2018 0 is_stmt 0 discriminator 2
 2385 003e 0123     		movs	r3, #1
 2386 0040 84F86830 		strb	r3, [r4, #104]
2020:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2387              		.loc 1 2020 0 is_stmt 1 discriminator 2
 2388 0044 2423     		movs	r3, #36
 2389 0046 84F86930 		strb	r3, [r4, #105]
2023:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2390              		.loc 1 2023 0 discriminator 2
 2391 004a 2268     		ldr	r2, [r4]
 2392 004c 9369     		ldr	r3, [r2, #24]
 2393 004e 43F00203 		orr	r3, r3, #2
 2394 0052 9361     		str	r3, [r2, #24]
2025:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2395              		.loc 1 2025 0 discriminator 2
 2396 0054 2023     		movs	r3, #32
 2397 0056 84F86930 		strb	r3, [r4, #105]
2028:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2398              		.loc 1 2028 0 discriminator 2
 2399 005a 0020     		movs	r0, #0
 2400 005c 84F86800 		strb	r0, [r4, #104]
 2401              	.L162:
2031:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2402              		.loc 1 2031 0
 2403 0060 10BD     		pop	{r4, pc}
 2404              	.LVL185:
 2405              	.L163:
2018:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2406              		.loc 1 2018 0
 2407 0062 0220     		movs	r0, #2
 2408 0064 FCE7     		b	.L162
 2409              	.L166:
 2410 0066 00BF     		.align	2
 2411              	.L165:
 2412 0068 00380140 		.word	1073821696
 2413 006c 00000000 		.word	.LC0
 2414              		.cfi_endproc
 2415              	.LFE162:
 2417              		.section	.text.HAL_UART_GetState,"ax",%progbits
 2418              		.align	1
 2419              		.global	HAL_UART_GetState
 2420              		.syntax unified
 2421              		.thumb
 2422              		.thumb_func
 2423              		.fpu fpv4-sp-d16
 2425              	HAL_UART_GetState:
 2426              	.LFB163:
2061:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   uint32_t temp1= 0x00U, temp2 = 0x00U;
 2427              		.loc 1 2061 0
 2428              		.cfi_startproc
 2429              		@ args = 0, pretend = 0, frame = 0
 2430              		@ frame_needed = 0, uses_anonymous_args = 0
 2431              		@ link register save eliminated.
 2432              	.LVL186:
2063:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   temp2 = huart->RxState;
 2433              		.loc 1 2063 0
 2434 0000 90F86930 		ldrb	r3, [r0, #105]	@ zero_extendqisi2
ARM GAS  /tmp/cc8tmKB0.s 			page 95


 2435              	.LVL187:
2064:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2436              		.loc 1 2064 0
 2437 0004 90F86A00 		ldrb	r0, [r0, #106]	@ zero_extendqisi2
 2438              	.LVL188:
2067:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2439              		.loc 1 2067 0
 2440 0008 1843     		orrs	r0, r0, r3
 2441              	.LVL189:
 2442 000a 7047     		bx	lr
 2443              		.cfi_endproc
 2444              	.LFE163:
 2446              		.section	.text.HAL_UART_GetError,"ax",%progbits
 2447              		.align	1
 2448              		.global	HAL_UART_GetError
 2449              		.syntax unified
 2450              		.thumb
 2451              		.thumb_func
 2452              		.fpu fpv4-sp-d16
 2454              	HAL_UART_GetError:
 2455              	.LFB164:
2076:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   return huart->ErrorCode;
 2456              		.loc 1 2076 0
 2457              		.cfi_startproc
 2458              		@ args = 0, pretend = 0, frame = 0
 2459              		@ frame_needed = 0, uses_anonymous_args = 0
 2460              		@ link register save eliminated.
 2461              	.LVL190:
2077:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
 2462              		.loc 1 2077 0
 2463 0000 C06E     		ldr	r0, [r0, #108]
 2464              	.LVL191:
2078:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
 2465              		.loc 1 2078 0
 2466 0002 7047     		bx	lr
 2467              		.cfi_endproc
 2468              	.LFE164:
 2470              		.section	.text.UART_SetConfig,"ax",%progbits
 2471              		.align	1
 2472              		.global	UART_SetConfig
 2473              		.syntax unified
 2474              		.thumb
 2475              		.thumb_func
 2476              		.fpu fpv4-sp-d16
 2478              	UART_SetConfig:
 2479              	.LFB165:
2097:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   uint32_t tmpreg                     = 0x00000000U;
 2480              		.loc 1 2097 0
 2481              		.cfi_startproc
 2482              		@ args = 0, pretend = 0, frame = 0
 2483              		@ frame_needed = 0, uses_anonymous_args = 0
 2484              	.LVL192:
 2485 0000 10B5     		push	{r4, lr}
 2486              	.LCFI22:
 2487              		.cfi_def_cfa_offset 8
 2488              		.cfi_offset 4, -8
 2489              		.cfi_offset 14, -4
ARM GAS  /tmp/cc8tmKB0.s 			page 96


 2490 0002 0446     		mov	r4, r0
 2491              	.LVL193:
2105:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   assert_param(IS_UART_WORD_LENGTH(huart->Init.WordLength));
 2492              		.loc 1 2105 0
 2493 0004 4268     		ldr	r2, [r0, #4]
 2494 0006 984B     		ldr	r3, .L250
 2495 0008 9A42     		cmp	r2, r3
 2496 000a 7CD8     		bhi	.L233
 2497              	.LVL194:
 2498              	.L170:
2106:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   assert_param(IS_UART_STOPBITS(huart->Init.StopBits));
 2499              		.loc 1 2106 0
 2500 000c A368     		ldr	r3, [r4, #8]
 2501 000e B3F1805F 		cmp	r3, #268435456
 2502 0012 03D0     		beq	.L171
2106:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   assert_param(IS_UART_STOPBITS(huart->Init.StopBits));
 2503              		.loc 1 2106 0 is_stmt 0 discriminator 1
 2504 0014 13B1     		cbz	r3, .L171
2106:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   assert_param(IS_UART_STOPBITS(huart->Init.StopBits));
 2505              		.loc 1 2106 0 discriminator 2
 2506 0016 B3F5805F 		cmp	r3, #4096
 2507 001a 7AD1     		bne	.L234
 2508              	.L171:
2107:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   assert_param(IS_UART_PARITY(huart->Init.Parity));
 2509              		.loc 1 2107 0 is_stmt 1
 2510 001c E368     		ldr	r3, [r4, #12]
 2511 001e B3F5805F 		cmp	r3, #4096
 2512 0022 06D0     		beq	.L172
2107:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   assert_param(IS_UART_PARITY(huart->Init.Parity));
 2513              		.loc 1 2107 0 is_stmt 0 discriminator 1
 2514 0024 2BB1     		cbz	r3, .L172
2107:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   assert_param(IS_UART_PARITY(huart->Init.Parity));
 2515              		.loc 1 2107 0 discriminator 2
 2516 0026 B3F5405F 		cmp	r3, #12288
 2517 002a 02D0     		beq	.L172
2107:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   assert_param(IS_UART_PARITY(huart->Init.Parity));
 2518              		.loc 1 2107 0 discriminator 3
 2519 002c B3F5005F 		cmp	r3, #8192
 2520 0030 75D1     		bne	.L235
 2521              	.L172:
2108:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   assert_param(IS_UART_MODE(huart->Init.Mode));
 2522              		.loc 1 2108 0 is_stmt 1
 2523 0032 2369     		ldr	r3, [r4, #16]
 2524 0034 2BB1     		cbz	r3, .L173
2108:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   assert_param(IS_UART_MODE(huart->Init.Mode));
 2525              		.loc 1 2108 0 is_stmt 0 discriminator 1
 2526 0036 B3F5806F 		cmp	r3, #1024
 2527 003a 02D0     		beq	.L173
2108:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   assert_param(IS_UART_MODE(huart->Init.Mode));
 2528              		.loc 1 2108 0 discriminator 2
 2529 003c B3F5C06F 		cmp	r3, #1536
 2530 0040 73D1     		bne	.L236
 2531              	.L173:
2109:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   assert_param(IS_UART_HARDWARE_FLOW_CONTROL(huart->Init.HwFlowCtl));
 2532              		.loc 1 2109 0 is_stmt 1
 2533 0042 6369     		ldr	r3, [r4, #20]
 2534 0044 33F00C02 		bics	r2, r3, #12
ARM GAS  /tmp/cc8tmKB0.s 			page 97


 2535 0048 00D1     		bne	.L174
2109:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   assert_param(IS_UART_HARDWARE_FLOW_CONTROL(huart->Init.HwFlowCtl));
 2536              		.loc 1 2109 0 is_stmt 0 discriminator 2
 2537 004a 23B9     		cbnz	r3, .L175
 2538              	.L174:
2109:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   assert_param(IS_UART_HARDWARE_FLOW_CONTROL(huart->Init.HwFlowCtl));
 2539              		.loc 1 2109 0 discriminator 3
 2540 004c 40F63D01 		movw	r1, #2109
 2541 0050 8648     		ldr	r0, .L250+4
 2542 0052 FFF7FEFF 		bl	assert_failed
 2543              	.LVL195:
 2544              	.L175:
2110:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   assert_param(IS_UART_ONE_BIT_SAMPLE(huart->Init.OneBitSampling));
 2545              		.loc 1 2110 0 is_stmt 1
 2546 0056 A369     		ldr	r3, [r4, #24]
 2547 0058 43B1     		cbz	r3, .L176
2110:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   assert_param(IS_UART_ONE_BIT_SAMPLE(huart->Init.OneBitSampling));
 2548              		.loc 1 2110 0 is_stmt 0 discriminator 1
 2549 005a B3F5807F 		cmp	r3, #256
 2550 005e 05D0     		beq	.L176
2110:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   assert_param(IS_UART_ONE_BIT_SAMPLE(huart->Init.OneBitSampling));
 2551              		.loc 1 2110 0 discriminator 2
 2552 0060 B3F5007F 		cmp	r3, #512
 2553 0064 02D0     		beq	.L176
2110:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   assert_param(IS_UART_ONE_BIT_SAMPLE(huart->Init.OneBitSampling));
 2554              		.loc 1 2110 0 discriminator 3
 2555 0066 B3F5407F 		cmp	r3, #768
 2556 006a 64D1     		bne	.L237
 2557              	.L176:
2111:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   assert_param(IS_UART_OVERSAMPLING(huart->Init.OverSampling));
 2558              		.loc 1 2111 0 is_stmt 1
 2559 006c 236A     		ldr	r3, [r4, #32]
 2560 006e 13B1     		cbz	r3, .L177
2111:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   assert_param(IS_UART_OVERSAMPLING(huart->Init.OverSampling));
 2561              		.loc 1 2111 0 is_stmt 0 discriminator 1
 2562 0070 B3F5006F 		cmp	r3, #2048
 2563 0074 65D1     		bne	.L238
 2564              	.L177:
2112:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2565              		.loc 1 2112 0 is_stmt 1
 2566 0076 E369     		ldr	r3, [r4, #28]
 2567 0078 13B1     		cbz	r3, .L178
2112:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2568              		.loc 1 2112 0 is_stmt 0 discriminator 1
 2569 007a B3F5004F 		cmp	r3, #32768
 2570 007e 66D1     		bne	.L239
 2571              	.L178:
2122:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   MODIFY_REG(huart->Instance->CR1, UART_CR1_FIELDS, tmpreg);
 2572              		.loc 1 2122 0 is_stmt 1
 2573 0080 A368     		ldr	r3, [r4, #8]
 2574 0082 2269     		ldr	r2, [r4, #16]
 2575 0084 1343     		orrs	r3, r3, r2
 2576 0086 6269     		ldr	r2, [r4, #20]
 2577 0088 1343     		orrs	r3, r3, r2
 2578 008a E269     		ldr	r2, [r4, #28]
 2579 008c 1343     		orrs	r3, r3, r2
 2580              	.LVL196:
ARM GAS  /tmp/cc8tmKB0.s 			page 98


2123:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2581              		.loc 1 2123 0
 2582 008e 2168     		ldr	r1, [r4]
 2583 0090 0868     		ldr	r0, [r1]
 2584 0092 774A     		ldr	r2, .L250+8
 2585 0094 0240     		ands	r2, r2, r0
 2586 0096 1343     		orrs	r3, r3, r2
 2587              	.LVL197:
 2588 0098 0B60     		str	r3, [r1]
 2589              	.LVL198:
2128:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2590              		.loc 1 2128 0
 2591 009a 2268     		ldr	r2, [r4]
 2592 009c 5368     		ldr	r3, [r2, #4]
 2593 009e 23F44053 		bic	r3, r3, #12288
 2594 00a2 E168     		ldr	r1, [r4, #12]
 2595 00a4 0B43     		orrs	r3, r3, r1
 2596 00a6 5360     		str	r3, [r2, #4]
2136:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   MODIFY_REG(huart->Instance->CR3, (USART_CR3_RTSE | USART_CR3_CTSE | USART_CR3_ONEBIT), tmpreg);
 2597              		.loc 1 2136 0
 2598 00a8 A369     		ldr	r3, [r4, #24]
 2599 00aa 226A     		ldr	r2, [r4, #32]
 2600 00ac 1A43     		orrs	r2, r2, r3
 2601              	.LVL199:
2137:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2602              		.loc 1 2137 0
 2603 00ae 2168     		ldr	r1, [r4]
 2604 00b0 8B68     		ldr	r3, [r1, #8]
 2605 00b2 23F43063 		bic	r3, r3, #2816
 2606 00b6 1343     		orrs	r3, r3, r2
 2607 00b8 8B60     		str	r3, [r1, #8]
2140:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2608              		.loc 1 2140 0
 2609 00ba 2368     		ldr	r3, [r4]
 2610 00bc 6D4A     		ldr	r2, .L250+12
 2611              	.LVL200:
 2612 00be 9342     		cmp	r3, r2
 2613 00c0 4BD0     		beq	.L240
2140:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2614              		.loc 1 2140 0 is_stmt 0 discriminator 2
 2615 00c2 6D4A     		ldr	r2, .L250+16
 2616 00c4 9342     		cmp	r3, r2
 2617 00c6 5BD0     		beq	.L241
2140:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2618              		.loc 1 2140 0 discriminator 14
 2619 00c8 6C4A     		ldr	r2, .L250+20
 2620 00ca 9342     		cmp	r3, r2
 2621 00cc 72D0     		beq	.L242
2140:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2622              		.loc 1 2140 0 discriminator 26
 2623 00ce 6C4A     		ldr	r2, .L250+24
 2624 00d0 9342     		cmp	r3, r2
 2625 00d2 00F08980 		beq	.L243
2140:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2626              		.loc 1 2140 0 discriminator 38
 2627 00d6 6B4A     		ldr	r2, .L250+28
 2628 00d8 9342     		cmp	r3, r2
ARM GAS  /tmp/cc8tmKB0.s 			page 99


 2629 00da 00F09F80 		beq	.L244
2140:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2630              		.loc 1 2140 0
 2631 00de 1022     		movs	r2, #16
 2632              	.LVL201:
 2633              	.L185:
2143:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 2634              		.loc 1 2143 0 is_stmt 1
 2635 00e0 E169     		ldr	r1, [r4, #28]
 2636 00e2 B1F5004F 		cmp	r1, #32768
 2637 00e6 00F0B580 		beq	.L245
2174:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 2638              		.loc 1 2174 0
 2639 00ea 082A     		cmp	r2, #8
 2640 00ec 00F24581 		bhi	.L231
 2641 00f0 DFE812F0 		tbh	[pc, r2, lsl #1]
 2642              	.L219:
 2643 00f4 0901     		.2byte	(.L218-.L219)/2
 2644 00f6 1501     		.2byte	(.L220-.L219)/2
 2645 00f8 2101     		.2byte	(.L221-.L219)/2
 2646 00fa 4301     		.2byte	(.L231-.L219)/2
 2647 00fc 2D01     		.2byte	(.L222-.L219)/2
 2648 00fe 4301     		.2byte	(.L231-.L219)/2
 2649 0100 4301     		.2byte	(.L231-.L219)/2
 2650 0102 4301     		.2byte	(.L231-.L219)/2
 2651 0104 3901     		.2byte	(.L223-.L219)/2
 2652              	.LVL202:
 2653              		.p2align 1
 2654              	.L233:
2105:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   assert_param(IS_UART_WORD_LENGTH(huart->Init.WordLength));
 2655              		.loc 1 2105 0 discriminator 1
 2656 0106 40F63901 		movw	r1, #2105
 2657 010a 5848     		ldr	r0, .L250+4
 2658              	.LVL203:
 2659 010c FFF7FEFF 		bl	assert_failed
 2660              	.LVL204:
 2661 0110 7CE7     		b	.L170
 2662              	.L234:
2106:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   assert_param(IS_UART_STOPBITS(huart->Init.StopBits));
 2663              		.loc 1 2106 0 discriminator 3
 2664 0112 40F63A01 		movw	r1, #2106
 2665 0116 5548     		ldr	r0, .L250+4
 2666 0118 FFF7FEFF 		bl	assert_failed
 2667              	.LVL205:
 2668 011c 7EE7     		b	.L171
 2669              	.L235:
2107:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   assert_param(IS_UART_PARITY(huart->Init.Parity));
 2670              		.loc 1 2107 0 discriminator 4
 2671 011e 40F63B01 		movw	r1, #2107
 2672 0122 5248     		ldr	r0, .L250+4
 2673 0124 FFF7FEFF 		bl	assert_failed
 2674              	.LVL206:
 2675 0128 83E7     		b	.L172
 2676              	.L236:
2108:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   assert_param(IS_UART_MODE(huart->Init.Mode));
 2677              		.loc 1 2108 0 discriminator 3
 2678 012a 40F63C01 		movw	r1, #2108
ARM GAS  /tmp/cc8tmKB0.s 			page 100


 2679 012e 4F48     		ldr	r0, .L250+4
 2680 0130 FFF7FEFF 		bl	assert_failed
 2681              	.LVL207:
 2682 0134 85E7     		b	.L173
 2683              	.L237:
2110:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   assert_param(IS_UART_ONE_BIT_SAMPLE(huart->Init.OneBitSampling));
 2684              		.loc 1 2110 0 discriminator 4
 2685 0136 40F63E01 		movw	r1, #2110
 2686 013a 4C48     		ldr	r0, .L250+4
 2687 013c FFF7FEFF 		bl	assert_failed
 2688              	.LVL208:
 2689 0140 94E7     		b	.L176
 2690              	.L238:
2111:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   assert_param(IS_UART_OVERSAMPLING(huart->Init.OverSampling));
 2691              		.loc 1 2111 0 discriminator 2
 2692 0142 40F63F01 		movw	r1, #2111
 2693 0146 4948     		ldr	r0, .L250+4
 2694 0148 FFF7FEFF 		bl	assert_failed
 2695              	.LVL209:
 2696 014c 93E7     		b	.L177
 2697              	.L239:
2112:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2698              		.loc 1 2112 0 discriminator 2
 2699 014e 4FF40461 		mov	r1, #2112
 2700 0152 4648     		ldr	r0, .L250+4
 2701 0154 FFF7FEFF 		bl	assert_failed
 2702              	.LVL210:
 2703 0158 92E7     		b	.L178
 2704              	.LVL211:
 2705              	.L240:
2140:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2706              		.loc 1 2140 0 discriminator 1
 2707 015a 02F55842 		add	r2, r2, #55296
 2708 015e 126B     		ldr	r2, [r2, #48]
 2709 0160 02F00302 		and	r2, r2, #3
 2710 0164 032A     		cmp	r2, #3
 2711 0166 09D8     		bhi	.L180
 2712 0168 DFE802F0 		tbb	[pc, r2]
 2713              	.L182:
 2714 016c 02       		.byte	(.L181-.L182)/2
 2715 016d 04       		.byte	(.L183-.L182)/2
 2716 016e 06       		.byte	(.L184-.L182)/2
 2717 016f 72       		.byte	(.L224-.L182)/2
 2718              		.p2align 1
 2719              	.L181:
2140:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2720              		.loc 1 2140 0 is_stmt 0
 2721 0170 0122     		movs	r2, #1
 2722 0172 B5E7     		b	.L185
 2723              	.L183:
 2724              	.LVL212:
2140:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2725              		.loc 1 2140 0 discriminator 5
 2726 0174 0422     		movs	r2, #4
 2727 0176 B3E7     		b	.L185
 2728              	.LVL213:
 2729              	.L184:
ARM GAS  /tmp/cc8tmKB0.s 			page 101


2140:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2730              		.loc 1 2140 0 discriminator 6
 2731 0178 0822     		movs	r2, #8
 2732 017a B1E7     		b	.L185
 2733              	.LVL214:
 2734              	.L180:
2140:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2735              		.loc 1 2140 0 discriminator 3
 2736 017c 1022     		movs	r2, #16
 2737 017e AFE7     		b	.L185
 2738              	.L241:
2140:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2739              		.loc 1 2140 0 discriminator 13
 2740 0180 02F5E632 		add	r2, r2, #117760
 2741 0184 126B     		ldr	r2, [r2, #48]
 2742 0186 02F44032 		and	r2, r2, #196608
 2743 018a B2F5803F 		cmp	r2, #65536
 2744 018e 0BD0     		beq	.L188
 2745 0190 07D9     		bls	.L246
 2746 0192 B2F5003F 		cmp	r2, #131072
 2747 0196 09D0     		beq	.L191
 2748 0198 B2F5403F 		cmp	r2, #196608
 2749 019c 08D1     		bne	.L187
2140:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2750              		.loc 1 2140 0
 2751 019e 0222     		movs	r2, #2
 2752 01a0 9EE7     		b	.L185
 2753              	.L246:
2140:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2754              		.loc 1 2140 0 discriminator 13
 2755 01a2 2AB9     		cbnz	r2, .L187
2140:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2756              		.loc 1 2140 0
 2757 01a4 0022     		movs	r2, #0
 2758 01a6 9BE7     		b	.L185
 2759              	.L188:
 2760              	.LVL215:
2140:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2761              		.loc 1 2140 0 discriminator 17
 2762 01a8 0422     		movs	r2, #4
 2763 01aa 99E7     		b	.L185
 2764              	.LVL216:
 2765              	.L191:
2140:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2766              		.loc 1 2140 0 discriminator 18
 2767 01ac 0822     		movs	r2, #8
 2768 01ae 97E7     		b	.L185
 2769              	.LVL217:
 2770              	.L187:
2140:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2771              		.loc 1 2140 0 discriminator 15
 2772 01b0 1022     		movs	r2, #16
 2773 01b2 95E7     		b	.L185
 2774              	.L242:
2140:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2775              		.loc 1 2140 0 discriminator 25
 2776 01b4 02F5E432 		add	r2, r2, #116736
ARM GAS  /tmp/cc8tmKB0.s 			page 102


 2777 01b8 126B     		ldr	r2, [r2, #48]
 2778 01ba 02F44022 		and	r2, r2, #786432
 2779 01be B2F5802F 		cmp	r2, #262144
 2780 01c2 0BD0     		beq	.L194
 2781 01c4 07D9     		bls	.L247
 2782 01c6 B2F5002F 		cmp	r2, #524288
 2783 01ca 09D0     		beq	.L197
 2784 01cc B2F5402F 		cmp	r2, #786432
 2785 01d0 08D1     		bne	.L193
2140:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2786              		.loc 1 2140 0
 2787 01d2 0222     		movs	r2, #2
 2788 01d4 84E7     		b	.L185
 2789              	.L247:
2140:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2790              		.loc 1 2140 0 discriminator 25
 2791 01d6 2AB9     		cbnz	r2, .L193
2140:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2792              		.loc 1 2140 0
 2793 01d8 0022     		movs	r2, #0
 2794 01da 81E7     		b	.L185
 2795              	.L194:
 2796              	.LVL218:
2140:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2797              		.loc 1 2140 0 discriminator 29
 2798 01dc 0422     		movs	r2, #4
 2799 01de 7FE7     		b	.L185
 2800              	.LVL219:
 2801              	.L197:
2140:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2802              		.loc 1 2140 0 discriminator 30
 2803 01e0 0822     		movs	r2, #8
 2804 01e2 7DE7     		b	.L185
 2805              	.LVL220:
 2806              	.L193:
2140:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2807              		.loc 1 2140 0 discriminator 27
 2808 01e4 1022     		movs	r2, #16
 2809 01e6 7BE7     		b	.L185
 2810              	.L243:
2140:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2811              		.loc 1 2140 0 discriminator 37
 2812 01e8 02F5E232 		add	r2, r2, #115712
 2813 01ec 126B     		ldr	r2, [r2, #48]
 2814 01ee 02F44012 		and	r2, r2, #3145728
 2815 01f2 B2F5801F 		cmp	r2, #1048576
 2816 01f6 0BD0     		beq	.L200
 2817 01f8 07D9     		bls	.L248
 2818 01fa B2F5001F 		cmp	r2, #2097152
 2819 01fe 09D0     		beq	.L203
 2820 0200 B2F5401F 		cmp	r2, #3145728
 2821 0204 08D1     		bne	.L199
2140:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2822              		.loc 1 2140 0
 2823 0206 0222     		movs	r2, #2
 2824 0208 6AE7     		b	.L185
 2825              	.L248:
ARM GAS  /tmp/cc8tmKB0.s 			page 103


2140:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2826              		.loc 1 2140 0 discriminator 37
 2827 020a 2AB9     		cbnz	r2, .L199
2140:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2828              		.loc 1 2140 0
 2829 020c 0022     		movs	r2, #0
 2830 020e 67E7     		b	.L185
 2831              	.L200:
 2832              	.LVL221:
2140:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2833              		.loc 1 2140 0 discriminator 41
 2834 0210 0422     		movs	r2, #4
 2835 0212 65E7     		b	.L185
 2836              	.LVL222:
 2837              	.L203:
2140:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2838              		.loc 1 2140 0 discriminator 42
 2839 0214 0822     		movs	r2, #8
 2840 0216 63E7     		b	.L185
 2841              	.LVL223:
 2842              	.L199:
2140:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2843              		.loc 1 2140 0 discriminator 39
 2844 0218 1022     		movs	r2, #16
 2845 021a 61E7     		b	.L185
 2846              	.L244:
2140:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2847              		.loc 1 2140 0 discriminator 49
 2848 021c 02F5E032 		add	r2, r2, #114688
 2849 0220 126B     		ldr	r2, [r2, #48]
 2850 0222 02F44002 		and	r2, r2, #12582912
 2851 0226 B2F5800F 		cmp	r2, #4194304
 2852 022a 0BD0     		beq	.L205
 2853 022c 07D9     		bls	.L249
 2854 022e B2F5000F 		cmp	r2, #8388608
 2855 0232 09D0     		beq	.L208
 2856 0234 B2F5400F 		cmp	r2, #12582912
 2857 0238 08D1     		bne	.L204
2140:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2858              		.loc 1 2140 0
 2859 023a 0222     		movs	r2, #2
 2860 023c 50E7     		b	.L185
 2861              	.L249:
2140:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2862              		.loc 1 2140 0 discriminator 49
 2863 023e 2AB9     		cbnz	r2, .L204
2140:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2864              		.loc 1 2140 0
 2865 0240 0022     		movs	r2, #0
 2866 0242 4DE7     		b	.L185
 2867              	.L205:
 2868              	.LVL224:
2140:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2869              		.loc 1 2140 0 discriminator 53
 2870 0244 0422     		movs	r2, #4
 2871 0246 4BE7     		b	.L185
 2872              	.LVL225:
ARM GAS  /tmp/cc8tmKB0.s 			page 104


 2873              	.L208:
2140:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2874              		.loc 1 2140 0 discriminator 54
 2875 0248 0822     		movs	r2, #8
 2876 024a 49E7     		b	.L185
 2877              	.LVL226:
 2878              	.L204:
2140:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2879              		.loc 1 2140 0 discriminator 51
 2880 024c 1022     		movs	r2, #16
 2881 024e 47E7     		b	.L185
 2882              	.L224:
2140:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2883              		.loc 1 2140 0
 2884 0250 0222     		movs	r2, #2
 2885 0252 45E7     		b	.L185
 2886              	.LVL227:
 2887              	.L245:
2145:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 2888              		.loc 1 2145 0 is_stmt 1
 2889 0254 082A     		cmp	r2, #8
 2890 0256 53D8     		bhi	.L230
 2891 0258 DFE802F0 		tbb	[pc, r2]
 2892              	.L212:
 2893 025c 16       		.byte	(.L211-.L212)/2
 2894 025d 28       		.byte	(.L213-.L212)/2
 2895 025e 33       		.byte	(.L214-.L212)/2
 2896 025f 52       		.byte	(.L230-.L212)/2
 2897 0260 3E       		.byte	(.L215-.L212)/2
 2898 0261 52       		.byte	(.L230-.L212)/2
 2899 0262 52       		.byte	(.L230-.L212)/2
 2900 0263 52       		.byte	(.L230-.L212)/2
 2901 0264 49       		.byte	(.L216-.L212)/2
 2902 0265 00       		.p2align 1
 2903              	.L251:
 2904 0266 00BF     		.align	2
 2905              	.L250:
 2906 0268 40548900 		.word	9000000
 2907 026c 00000000 		.word	.LC0
 2908 0270 F369FFEF 		.word	-268473869
 2909 0274 00380140 		.word	1073821696
 2910 0278 00440040 		.word	1073759232
 2911 027c 00480040 		.word	1073760256
 2912 0280 004C0040 		.word	1073761280
 2913 0284 00500040 		.word	1073762304
 2914              	.L211:
2148:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         break;
 2915              		.loc 1 2148 0
 2916 0288 FFF7FEFF 		bl	HAL_RCC_GetPCLK1Freq
 2917              	.LVL228:
 2918 028c 6268     		ldr	r2, [r4, #4]
 2919 028e 5308     		lsrs	r3, r2, #1
 2920 0290 03EB4003 		add	r3, r3, r0, lsl #1
 2921 0294 B3FBF2F3 		udiv	r3, r3, r2
 2922 0298 9BB2     		uxth	r3, r3
 2923              	.LVL229:
2102:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
ARM GAS  /tmp/cc8tmKB0.s 			page 105


 2924              		.loc 1 2102 0
 2925 029a 0020     		movs	r0, #0
 2926              	.LVL230:
 2927              	.L210:
2168:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     brrtemp |= (uint16_t)((usartdiv & (uint16_t)0x000FU) >> 1U);
 2928              		.loc 1 2168 0
 2929 029c 23F00F02 		bic	r2, r3, #15
 2930              	.LVL231:
2169:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->Instance->BRR = brrtemp;
 2931              		.loc 1 2169 0
 2932 02a0 C3F34203 		ubfx	r3, r3, #1, #3
 2933              	.LVL232:
 2934 02a4 1343     		orrs	r3, r3, r2
 2935              	.LVL233:
2170:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 2936              		.loc 1 2170 0
 2937 02a6 2268     		ldr	r2, [r4]
 2938 02a8 D360     		str	r3, [r2, #12]
 2939              	.LVL234:
 2940              	.L217:
2200:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2941              		.loc 1 2200 0
 2942 02aa 10BD     		pop	{r4, pc}
 2943              	.LVL235:
 2944              	.L213:
2151:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         break;
 2945              		.loc 1 2151 0
 2946 02ac FFF7FEFF 		bl	HAL_RCC_GetPCLK2Freq
 2947              	.LVL236:
 2948 02b0 6268     		ldr	r2, [r4, #4]
 2949 02b2 5308     		lsrs	r3, r2, #1
 2950 02b4 03EB4003 		add	r3, r3, r0, lsl #1
 2951 02b8 B3FBF2F3 		udiv	r3, r3, r2
 2952 02bc 9BB2     		uxth	r3, r3
 2953              	.LVL237:
2102:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2954              		.loc 1 2102 0
 2955 02be 0020     		movs	r0, #0
2152:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       case UART_CLOCKSOURCE_HSI:
 2956              		.loc 1 2152 0
 2957 02c0 ECE7     		b	.L210
 2958              	.LVL238:
 2959              	.L214:
2154:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         break;
 2960              		.loc 1 2154 0
 2961 02c2 6268     		ldr	r2, [r4, #4]
 2962              	.LVL239:
 2963 02c4 5308     		lsrs	r3, r2, #1
 2964 02c6 03F57403 		add	r3, r3, #15990784
 2965 02ca 03F51053 		add	r3, r3, #9216
 2966 02ce B3FBF2F3 		udiv	r3, r3, r2
 2967 02d2 9BB2     		uxth	r3, r3
 2968              	.LVL240:
2102:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2969              		.loc 1 2102 0
 2970 02d4 0020     		movs	r0, #0
2155:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       case UART_CLOCKSOURCE_SYSCLK:
ARM GAS  /tmp/cc8tmKB0.s 			page 106


 2971              		.loc 1 2155 0
 2972 02d6 E1E7     		b	.L210
 2973              	.LVL241:
 2974              	.L215:
2157:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         break;
 2975              		.loc 1 2157 0
 2976 02d8 FFF7FEFF 		bl	HAL_RCC_GetSysClockFreq
 2977              	.LVL242:
 2978 02dc 6268     		ldr	r2, [r4, #4]
 2979 02de 5308     		lsrs	r3, r2, #1
 2980 02e0 03EB4003 		add	r3, r3, r0, lsl #1
 2981 02e4 B3FBF2F3 		udiv	r3, r3, r2
 2982 02e8 9BB2     		uxth	r3, r3
 2983              	.LVL243:
2102:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2984              		.loc 1 2102 0
 2985 02ea 0020     		movs	r0, #0
2158:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       case UART_CLOCKSOURCE_LSE:
 2986              		.loc 1 2158 0
 2987 02ec D6E7     		b	.L210
 2988              	.LVL244:
 2989              	.L216:
2160:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         break;
 2990              		.loc 1 2160 0
 2991 02ee 6268     		ldr	r2, [r4, #4]
 2992              	.LVL245:
 2993 02f0 5308     		lsrs	r3, r2, #1
 2994 02f2 03F58033 		add	r3, r3, #65536
 2995 02f6 B3FBF2F3 		udiv	r3, r3, r2
 2996 02fa 9BB2     		uxth	r3, r3
 2997              	.LVL246:
2102:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2998              		.loc 1 2102 0
 2999 02fc 0020     		movs	r0, #0
2161:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       case UART_CLOCKSOURCE_UNDEFINED:
 3000              		.loc 1 2161 0
 3001 02fe CDE7     		b	.L210
 3002              	.LVL247:
 3003              	.L230:
2164:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         break;
 3004              		.loc 1 2164 0
 3005 0300 0120     		movs	r0, #1
2101:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   HAL_StatusTypeDef ret               = HAL_OK;
 3006              		.loc 1 2101 0
 3007 0302 0023     		movs	r3, #0
 3008 0304 CAE7     		b	.L210
 3009              	.L218:
2177:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         break;
 3010              		.loc 1 2177 0
 3011 0306 FFF7FEFF 		bl	HAL_RCC_GetPCLK1Freq
 3012              	.LVL248:
 3013 030a 6368     		ldr	r3, [r4, #4]
 3014 030c 00EB5300 		add	r0, r0, r3, lsr #1
 3015 0310 B0FBF3F0 		udiv	r0, r0, r3
 3016 0314 2368     		ldr	r3, [r4]
 3017 0316 80B2     		uxth	r0, r0
 3018 0318 D860     		str	r0, [r3, #12]
ARM GAS  /tmp/cc8tmKB0.s 			page 107


2102:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3019              		.loc 1 2102 0
 3020 031a 0020     		movs	r0, #0
2178:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       case UART_CLOCKSOURCE_PCLK2:
 3021              		.loc 1 2178 0
 3022 031c C5E7     		b	.L217
 3023              	.LVL249:
 3024              	.L220:
2180:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         break;
 3025              		.loc 1 2180 0
 3026 031e FFF7FEFF 		bl	HAL_RCC_GetPCLK2Freq
 3027              	.LVL250:
 3028 0322 6368     		ldr	r3, [r4, #4]
 3029 0324 00EB5300 		add	r0, r0, r3, lsr #1
 3030 0328 B0FBF3F0 		udiv	r0, r0, r3
 3031 032c 2368     		ldr	r3, [r4]
 3032 032e 80B2     		uxth	r0, r0
 3033 0330 D860     		str	r0, [r3, #12]
2102:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3034              		.loc 1 2102 0
 3035 0332 0020     		movs	r0, #0
2181:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       case UART_CLOCKSOURCE_HSI:
 3036              		.loc 1 2181 0
 3037 0334 B9E7     		b	.L217
 3038              	.LVL251:
 3039              	.L221:
2183:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         break;
 3040              		.loc 1 2183 0
 3041 0336 6168     		ldr	r1, [r4, #4]
 3042 0338 4A08     		lsrs	r2, r1, #1
 3043              	.LVL252:
 3044 033a 02F5F402 		add	r2, r2, #7995392
 3045 033e 02F59052 		add	r2, r2, #4608
 3046 0342 B2FBF1F2 		udiv	r2, r2, r1
 3047 0346 92B2     		uxth	r2, r2
 3048 0348 DA60     		str	r2, [r3, #12]
2102:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3049              		.loc 1 2102 0
 3050 034a 0020     		movs	r0, #0
2184:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       case UART_CLOCKSOURCE_SYSCLK:
 3051              		.loc 1 2184 0
 3052 034c ADE7     		b	.L217
 3053              	.LVL253:
 3054              	.L222:
2186:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         break;
 3055              		.loc 1 2186 0
 3056 034e FFF7FEFF 		bl	HAL_RCC_GetSysClockFreq
 3057              	.LVL254:
 3058 0352 6368     		ldr	r3, [r4, #4]
 3059 0354 00EB5300 		add	r0, r0, r3, lsr #1
 3060 0358 B0FBF3F0 		udiv	r0, r0, r3
 3061 035c 2368     		ldr	r3, [r4]
 3062 035e 80B2     		uxth	r0, r0
 3063 0360 D860     		str	r0, [r3, #12]
2102:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3064              		.loc 1 2102 0
 3065 0362 0020     		movs	r0, #0
ARM GAS  /tmp/cc8tmKB0.s 			page 108


2187:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       case UART_CLOCKSOURCE_LSE:
 3066              		.loc 1 2187 0
 3067 0364 A1E7     		b	.L217
 3068              	.LVL255:
 3069              	.L223:
2189:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         break;
 3070              		.loc 1 2189 0
 3071 0366 6168     		ldr	r1, [r4, #4]
 3072 0368 4A08     		lsrs	r2, r1, #1
 3073              	.LVL256:
 3074 036a 02F50042 		add	r2, r2, #32768
 3075 036e B2FBF1F2 		udiv	r2, r2, r1
 3076 0372 92B2     		uxth	r2, r2
 3077 0374 DA60     		str	r2, [r3, #12]
2102:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3078              		.loc 1 2102 0
 3079 0376 0020     		movs	r0, #0
2190:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       case UART_CLOCKSOURCE_UNDEFINED:
 3080              		.loc 1 2190 0
 3081 0378 97E7     		b	.L217
 3082              	.LVL257:
 3083              	.L231:
2193:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         break;
 3084              		.loc 1 2193 0
 3085 037a 0120     		movs	r0, #1
 3086 037c 95E7     		b	.L217
 3087              		.cfi_endproc
 3088              	.LFE165:
 3090 037e 00BF     		.section	.text.UART_AdvFeatureConfig,"ax",%progbits
 3091              		.align	1
 3092              		.global	UART_AdvFeatureConfig
 3093              		.syntax unified
 3094              		.thumb
 3095              		.thumb_func
 3096              		.fpu fpv4-sp-d16
 3098              	UART_AdvFeatureConfig:
 3099              	.LFB166:
2208:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Check whether the set of advanced features to configure is properly set */
 3100              		.loc 1 2208 0
 3101              		.cfi_startproc
 3102              		@ args = 0, pretend = 0, frame = 0
 3103              		@ frame_needed = 0, uses_anonymous_args = 0
 3104              	.LVL258:
 3105 0000 10B5     		push	{r4, lr}
 3106              	.LCFI23:
 3107              		.cfi_def_cfa_offset 8
 3108              		.cfi_offset 4, -8
 3109              		.cfi_offset 14, -4
 3110 0002 0446     		mov	r4, r0
2210:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3111              		.loc 1 2210 0
 3112 0004 436A     		ldr	r3, [r0, #36]
 3113 0006 FF2B     		cmp	r3, #255
 3114 0008 00F29880 		bhi	.L273
 3115              	.LVL259:
 3116              	.L253:
2213:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
ARM GAS  /tmp/cc8tmKB0.s 			page 109


 3117              		.loc 1 2213 0
 3118 000c 636A     		ldr	r3, [r4, #36]
 3119 000e 13F0010F 		tst	r3, #1
 3120 0012 0CD0     		beq	.L254
2215:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR2, USART_CR2_TXINV, huart->AdvancedInit.TxPinLevelInvert);
 3121              		.loc 1 2215 0
 3122 0014 A36A     		ldr	r3, [r4, #40]
 3123 0016 1BB1     		cbz	r3, .L255
2215:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR2, USART_CR2_TXINV, huart->AdvancedInit.TxPinLevelInvert);
 3124              		.loc 1 2215 0 is_stmt 0 discriminator 1
 3125 0018 B3F5003F 		cmp	r3, #131072
 3126 001c 40F09480 		bne	.L274
 3127              	.L255:
2216:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 3128              		.loc 1 2216 0 is_stmt 1
 3129 0020 2268     		ldr	r2, [r4]
 3130 0022 5368     		ldr	r3, [r2, #4]
 3131 0024 23F40033 		bic	r3, r3, #131072
 3132 0028 A16A     		ldr	r1, [r4, #40]
 3133 002a 0B43     		orrs	r3, r3, r1
 3134 002c 5360     		str	r3, [r2, #4]
 3135              	.L254:
2220:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 3136              		.loc 1 2220 0
 3137 002e 636A     		ldr	r3, [r4, #36]
 3138 0030 13F0020F 		tst	r3, #2
 3139 0034 0CD0     		beq	.L256
2222:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR2, USART_CR2_RXINV, huart->AdvancedInit.RxPinLevelInvert);
 3140              		.loc 1 2222 0
 3141 0036 E36A     		ldr	r3, [r4, #44]
 3142 0038 1BB1     		cbz	r3, .L257
2222:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR2, USART_CR2_RXINV, huart->AdvancedInit.RxPinLevelInvert);
 3143              		.loc 1 2222 0 is_stmt 0 discriminator 1
 3144 003a B3F5803F 		cmp	r3, #65536
 3145 003e 40F08980 		bne	.L275
 3146              	.L257:
2223:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 3147              		.loc 1 2223 0 is_stmt 1
 3148 0042 2268     		ldr	r2, [r4]
 3149 0044 5368     		ldr	r3, [r2, #4]
 3150 0046 23F48033 		bic	r3, r3, #65536
 3151 004a E16A     		ldr	r1, [r4, #44]
 3152 004c 0B43     		orrs	r3, r3, r1
 3153 004e 5360     		str	r3, [r2, #4]
 3154              	.L256:
2227:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 3155              		.loc 1 2227 0
 3156 0050 636A     		ldr	r3, [r4, #36]
 3157 0052 13F0040F 		tst	r3, #4
 3158 0056 0BD0     		beq	.L258
2229:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR2, USART_CR2_DATAINV, huart->AdvancedInit.DataInvert);
 3159              		.loc 1 2229 0
 3160 0058 236B     		ldr	r3, [r4, #48]
 3161 005a 13B1     		cbz	r3, .L259
2229:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR2, USART_CR2_DATAINV, huart->AdvancedInit.DataInvert);
 3162              		.loc 1 2229 0 is_stmt 0 discriminator 1
 3163 005c B3F5802F 		cmp	r3, #262144
ARM GAS  /tmp/cc8tmKB0.s 			page 110


 3164 0060 7ED1     		bne	.L276
 3165              	.L259:
2230:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 3166              		.loc 1 2230 0 is_stmt 1
 3167 0062 2268     		ldr	r2, [r4]
 3168 0064 5368     		ldr	r3, [r2, #4]
 3169 0066 23F48023 		bic	r3, r3, #262144
 3170 006a 216B     		ldr	r1, [r4, #48]
 3171 006c 0B43     		orrs	r3, r3, r1
 3172 006e 5360     		str	r3, [r2, #4]
 3173              	.L258:
2234:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 3174              		.loc 1 2234 0
 3175 0070 636A     		ldr	r3, [r4, #36]
 3176 0072 13F0080F 		tst	r3, #8
 3177 0076 0BD0     		beq	.L260
2236:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR2, USART_CR2_SWAP, huart->AdvancedInit.Swap);
 3178              		.loc 1 2236 0
 3179 0078 636B     		ldr	r3, [r4, #52]
 3180 007a 13B1     		cbz	r3, .L261
2236:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR2, USART_CR2_SWAP, huart->AdvancedInit.Swap);
 3181              		.loc 1 2236 0 is_stmt 0 discriminator 1
 3182 007c B3F5004F 		cmp	r3, #32768
 3183 0080 74D1     		bne	.L277
 3184              	.L261:
2237:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 3185              		.loc 1 2237 0 is_stmt 1
 3186 0082 2268     		ldr	r2, [r4]
 3187 0084 5368     		ldr	r3, [r2, #4]
 3188 0086 23F40043 		bic	r3, r3, #32768
 3189 008a 616B     		ldr	r1, [r4, #52]
 3190 008c 0B43     		orrs	r3, r3, r1
 3191 008e 5360     		str	r3, [r2, #4]
 3192              	.L260:
2241:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 3193              		.loc 1 2241 0
 3194 0090 636A     		ldr	r3, [r4, #36]
 3195 0092 13F0100F 		tst	r3, #16
 3196 0096 0BD0     		beq	.L262
2243:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR3, USART_CR3_OVRDIS, huart->AdvancedInit.OverrunDisable);
 3197              		.loc 1 2243 0
 3198 0098 A36B     		ldr	r3, [r4, #56]
 3199 009a 13B1     		cbz	r3, .L263
2243:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR3, USART_CR3_OVRDIS, huart->AdvancedInit.OverrunDisable);
 3200              		.loc 1 2243 0 is_stmt 0 discriminator 1
 3201 009c B3F5805F 		cmp	r3, #4096
 3202 00a0 6AD1     		bne	.L278
 3203              	.L263:
2244:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 3204              		.loc 1 2244 0 is_stmt 1
 3205 00a2 2268     		ldr	r2, [r4]
 3206 00a4 9368     		ldr	r3, [r2, #8]
 3207 00a6 23F48053 		bic	r3, r3, #4096
 3208 00aa A16B     		ldr	r1, [r4, #56]
 3209 00ac 0B43     		orrs	r3, r3, r1
 3210 00ae 9360     		str	r3, [r2, #8]
 3211              	.L262:
ARM GAS  /tmp/cc8tmKB0.s 			page 111


2248:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 3212              		.loc 1 2248 0
 3213 00b0 636A     		ldr	r3, [r4, #36]
 3214 00b2 13F0200F 		tst	r3, #32
 3215 00b6 0BD0     		beq	.L264
2250:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR3, USART_CR3_DDRE, huart->AdvancedInit.DMADisableonRxError);
 3216              		.loc 1 2250 0
 3217 00b8 E36B     		ldr	r3, [r4, #60]
 3218 00ba 13B1     		cbz	r3, .L265
2250:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR3, USART_CR3_DDRE, huart->AdvancedInit.DMADisableonRxError);
 3219              		.loc 1 2250 0 is_stmt 0 discriminator 1
 3220 00bc B3F5005F 		cmp	r3, #8192
 3221 00c0 60D1     		bne	.L279
 3222              	.L265:
2251:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 3223              		.loc 1 2251 0 is_stmt 1
 3224 00c2 2268     		ldr	r2, [r4]
 3225 00c4 9368     		ldr	r3, [r2, #8]
 3226 00c6 23F40053 		bic	r3, r3, #8192
 3227 00ca E16B     		ldr	r1, [r4, #60]
 3228 00cc 0B43     		orrs	r3, r3, r1
 3229 00ce 9360     		str	r3, [r2, #8]
 3230              	.L264:
2255:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 3231              		.loc 1 2255 0
 3232 00d0 636A     		ldr	r3, [r4, #36]
 3233 00d2 13F0400F 		tst	r3, #64
 3234 00d6 20D0     		beq	.L266
2257:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     assert_param(IS_UART_ADVFEATURE_AUTOBAUDRATE(huart->AdvancedInit.AutoBaudRateEnable));
 3235              		.loc 1 2257 0
 3236 00d8 2368     		ldr	r3, [r4]
 3237 00da 404A     		ldr	r2, .L284
 3238 00dc 9342     		cmp	r3, r2
 3239 00de 0CD0     		beq	.L267
2257:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     assert_param(IS_UART_ADVFEATURE_AUTOBAUDRATE(huart->AdvancedInit.AutoBaudRateEnable));
 3240              		.loc 1 2257 0 is_stmt 0 discriminator 1
 3241 00e0 A2F57442 		sub	r2, r2, #62464
 3242 00e4 9342     		cmp	r3, r2
 3243 00e6 08D0     		beq	.L267
2257:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     assert_param(IS_UART_ADVFEATURE_AUTOBAUDRATE(huart->AdvancedInit.AutoBaudRateEnable));
 3244              		.loc 1 2257 0 discriminator 2
 3245 00e8 02F58062 		add	r2, r2, #1024
 3246 00ec 9342     		cmp	r3, r2
 3247 00ee 04D0     		beq	.L267
2257:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     assert_param(IS_UART_ADVFEATURE_AUTOBAUDRATE(huart->AdvancedInit.AutoBaudRateEnable));
 3248              		.loc 1 2257 0 discriminator 3
 3249 00f0 40F6D101 		movw	r1, #2257
 3250 00f4 3A48     		ldr	r0, .L284+4
 3251 00f6 FFF7FEFF 		bl	assert_failed
 3252              	.LVL260:
 3253              	.L267:
2258:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR2, USART_CR2_ABREN, huart->AdvancedInit.AutoBaudRateEnable);
 3254              		.loc 1 2258 0 is_stmt 1
 3255 00fa 236C     		ldr	r3, [r4, #64]
 3256 00fc 13B1     		cbz	r3, .L268
2258:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR2, USART_CR2_ABREN, huart->AdvancedInit.AutoBaudRateEnable);
 3257              		.loc 1 2258 0 is_stmt 0 discriminator 1
ARM GAS  /tmp/cc8tmKB0.s 			page 112


 3258 00fe B3F5801F 		cmp	r3, #1048576
 3259 0102 45D1     		bne	.L280
 3260              	.L268:
2259:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* set auto Baudrate detection parameters if detection is enabled */
 3261              		.loc 1 2259 0 is_stmt 1
 3262 0104 2268     		ldr	r2, [r4]
 3263 0106 5368     		ldr	r3, [r2, #4]
 3264 0108 23F48013 		bic	r3, r3, #1048576
 3265 010c 216C     		ldr	r1, [r4, #64]
 3266 010e 0B43     		orrs	r3, r3, r1
 3267 0110 5360     		str	r3, [r2, #4]
2261:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 3268              		.loc 1 2261 0
 3269 0112 236C     		ldr	r3, [r4, #64]
 3270 0114 B3F5801F 		cmp	r3, #1048576
 3271 0118 40D0     		beq	.L281
 3272              	.L266:
2269:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 3273              		.loc 1 2269 0
 3274 011a 636A     		ldr	r3, [r4, #36]
 3275 011c 13F0800F 		tst	r3, #128
 3276 0120 0BD0     		beq	.L252
2271:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR2, USART_CR2_MSBFIRST, huart->AdvancedInit.MSBFirst);
 3277              		.loc 1 2271 0
 3278 0122 A36C     		ldr	r3, [r4, #72]
 3279 0124 13B1     		cbz	r3, .L271
2271:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR2, USART_CR2_MSBFIRST, huart->AdvancedInit.MSBFirst);
 3280              		.loc 1 2271 0 is_stmt 0 discriminator 1
 3281 0126 B3F5002F 		cmp	r3, #524288
 3282 012a 50D1     		bne	.L282
 3283              	.L271:
2272:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 3284              		.loc 1 2272 0 is_stmt 1
 3285 012c 2268     		ldr	r2, [r4]
 3286 012e 5368     		ldr	r3, [r2, #4]
 3287 0130 23F40023 		bic	r3, r3, #524288
 3288 0134 A16C     		ldr	r1, [r4, #72]
 3289 0136 0B43     		orrs	r3, r3, r1
 3290 0138 5360     		str	r3, [r2, #4]
 3291              	.L252:
2274:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3292              		.loc 1 2274 0
 3293 013a 10BD     		pop	{r4, pc}
 3294              	.LVL261:
 3295              	.L273:
2210:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3296              		.loc 1 2210 0 discriminator 1
 3297 013c 40F6A201 		movw	r1, #2210
 3298 0140 2748     		ldr	r0, .L284+4
 3299              	.LVL262:
 3300 0142 FFF7FEFF 		bl	assert_failed
 3301              	.LVL263:
 3302 0146 61E7     		b	.L253
 3303              	.L274:
2215:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR2, USART_CR2_TXINV, huart->AdvancedInit.TxPinLevelInvert);
 3304              		.loc 1 2215 0 discriminator 2
 3305 0148 40F6A701 		movw	r1, #2215
ARM GAS  /tmp/cc8tmKB0.s 			page 113


 3306 014c 2448     		ldr	r0, .L284+4
 3307 014e FFF7FEFF 		bl	assert_failed
 3308              	.LVL264:
 3309 0152 65E7     		b	.L255
 3310              	.L275:
2222:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR2, USART_CR2_RXINV, huart->AdvancedInit.RxPinLevelInvert);
 3311              		.loc 1 2222 0 discriminator 2
 3312 0154 40F6AE01 		movw	r1, #2222
 3313 0158 2148     		ldr	r0, .L284+4
 3314 015a FFF7FEFF 		bl	assert_failed
 3315              	.LVL265:
 3316 015e 70E7     		b	.L257
 3317              	.L276:
2229:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR2, USART_CR2_DATAINV, huart->AdvancedInit.DataInvert);
 3318              		.loc 1 2229 0 discriminator 2
 3319 0160 40F6B501 		movw	r1, #2229
 3320 0164 1E48     		ldr	r0, .L284+4
 3321 0166 FFF7FEFF 		bl	assert_failed
 3322              	.LVL266:
 3323 016a 7AE7     		b	.L259
 3324              	.L277:
2236:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR2, USART_CR2_SWAP, huart->AdvancedInit.Swap);
 3325              		.loc 1 2236 0 discriminator 2
 3326 016c 40F6BC01 		movw	r1, #2236
 3327 0170 1B48     		ldr	r0, .L284+4
 3328 0172 FFF7FEFF 		bl	assert_failed
 3329              	.LVL267:
 3330 0176 84E7     		b	.L261
 3331              	.L278:
2243:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR3, USART_CR3_OVRDIS, huart->AdvancedInit.OverrunDisable);
 3332              		.loc 1 2243 0 discriminator 2
 3333 0178 40F6C301 		movw	r1, #2243
 3334 017c 1848     		ldr	r0, .L284+4
 3335 017e FFF7FEFF 		bl	assert_failed
 3336              	.LVL268:
 3337 0182 8EE7     		b	.L263
 3338              	.L279:
2250:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR3, USART_CR3_DDRE, huart->AdvancedInit.DMADisableonRxError);
 3339              		.loc 1 2250 0 discriminator 2
 3340 0184 40F6CA01 		movw	r1, #2250
 3341 0188 1548     		ldr	r0, .L284+4
 3342 018a FFF7FEFF 		bl	assert_failed
 3343              	.LVL269:
 3344 018e 98E7     		b	.L265
 3345              	.L280:
2258:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR2, USART_CR2_ABREN, huart->AdvancedInit.AutoBaudRateEnable);
 3346              		.loc 1 2258 0 discriminator 2
 3347 0190 40F6D201 		movw	r1, #2258
 3348 0194 1248     		ldr	r0, .L284+4
 3349 0196 FFF7FEFF 		bl	assert_failed
 3350              	.LVL270:
 3351 019a B3E7     		b	.L268
 3352              	.L281:
2263:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       MODIFY_REG(huart->Instance->CR2, USART_CR2_ABRMODE, huart->AdvancedInit.AutoBaudRateMode);
 3353              		.loc 1 2263 0
 3354 019c 636C     		ldr	r3, [r4, #68]
 3355 019e 43B1     		cbz	r3, .L269
ARM GAS  /tmp/cc8tmKB0.s 			page 114


2263:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       MODIFY_REG(huart->Instance->CR2, USART_CR2_ABRMODE, huart->AdvancedInit.AutoBaudRateMode);
 3356              		.loc 1 2263 0 is_stmt 0 discriminator 1
 3357 01a0 B3F5001F 		cmp	r3, #2097152
 3358 01a4 05D0     		beq	.L269
2263:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       MODIFY_REG(huart->Instance->CR2, USART_CR2_ABRMODE, huart->AdvancedInit.AutoBaudRateMode);
 3359              		.loc 1 2263 0 discriminator 2
 3360 01a6 B3F5800F 		cmp	r3, #4194304
 3361 01aa 02D0     		beq	.L269
2263:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       MODIFY_REG(huart->Instance->CR2, USART_CR2_ABRMODE, huart->AdvancedInit.AutoBaudRateMode);
 3362              		.loc 1 2263 0 discriminator 3
 3363 01ac B3F5C00F 		cmp	r3, #6291456
 3364 01b0 07D1     		bne	.L283
 3365              	.L269:
2264:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
 3366              		.loc 1 2264 0 is_stmt 1
 3367 01b2 2268     		ldr	r2, [r4]
 3368 01b4 5368     		ldr	r3, [r2, #4]
 3369 01b6 23F4C003 		bic	r3, r3, #6291456
 3370 01ba 616C     		ldr	r1, [r4, #68]
 3371 01bc 0B43     		orrs	r3, r3, r1
 3372 01be 5360     		str	r3, [r2, #4]
 3373 01c0 ABE7     		b	.L266
 3374              	.L283:
2263:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       MODIFY_REG(huart->Instance->CR2, USART_CR2_ABRMODE, huart->AdvancedInit.AutoBaudRateMode);
 3375              		.loc 1 2263 0 discriminator 4
 3376 01c2 40F6D701 		movw	r1, #2263
 3377 01c6 0648     		ldr	r0, .L284+4
 3378 01c8 FFF7FEFF 		bl	assert_failed
 3379              	.LVL271:
 3380 01cc F1E7     		b	.L269
 3381              	.L282:
2271:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR2, USART_CR2_MSBFIRST, huart->AdvancedInit.MSBFirst);
 3382              		.loc 1 2271 0 discriminator 2
 3383 01ce 40F6DF01 		movw	r1, #2271
 3384 01d2 0348     		ldr	r0, .L284+4
 3385 01d4 FFF7FEFF 		bl	assert_failed
 3386              	.LVL272:
 3387 01d8 A8E7     		b	.L271
 3388              	.L285:
 3389 01da 00BF     		.align	2
 3390              	.L284:
 3391 01dc 00380140 		.word	1073821696
 3392 01e0 00000000 		.word	.LC0
 3393              		.cfi_endproc
 3394              	.LFE166:
 3396              		.section	.text.UART_WaitOnFlagUntilTimeout,"ax",%progbits
 3397              		.align	1
 3398              		.global	UART_WaitOnFlagUntilTimeout
 3399              		.syntax unified
 3400              		.thumb
 3401              		.thumb_func
 3402              		.fpu fpv4-sp-d16
 3404              	UART_WaitOnFlagUntilTimeout:
 3405              	.LFB168:
2332:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Wait until flag is set */
 3406              		.loc 1 2332 0
 3407              		.cfi_startproc
ARM GAS  /tmp/cc8tmKB0.s 			page 115


 3408              		@ args = 4, pretend = 0, frame = 0
 3409              		@ frame_needed = 0, uses_anonymous_args = 0
 3410              	.LVL273:
 3411 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 3412              	.LCFI24:
 3413              		.cfi_def_cfa_offset 24
 3414              		.cfi_offset 4, -24
 3415              		.cfi_offset 5, -20
 3416              		.cfi_offset 6, -16
 3417              		.cfi_offset 7, -12
 3418              		.cfi_offset 8, -8
 3419              		.cfi_offset 14, -4
 3420 0004 0546     		mov	r5, r0
 3421 0006 0F46     		mov	r7, r1
 3422 0008 1646     		mov	r6, r2
 3423 000a 9846     		mov	r8, r3
 3424 000c 069C     		ldr	r4, [sp, #24]
 3425              	.LVL274:
 3426              	.L288:
2334:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 3427              		.loc 1 2334 0
 3428 000e 2B68     		ldr	r3, [r5]
 3429 0010 DB69     		ldr	r3, [r3, #28]
 3430 0012 37EA0303 		bics	r3, r7, r3
 3431 0016 0CBF     		ite	eq
 3432 0018 0123     		moveq	r3, #1
 3433 001a 0023     		movne	r3, #0
 3434 001c B342     		cmp	r3, r6
 3435 001e 1DD1     		bne	.L293
2337:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 3436              		.loc 1 2337 0
 3437 0020 B4F1FF3F 		cmp	r4, #-1
 3438 0024 F3D0     		beq	.L288
2339:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       {
 3439              		.loc 1 2339 0
 3440 0026 2CB1     		cbz	r4, .L289
2339:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       {
 3441              		.loc 1 2339 0 is_stmt 0 discriminator 1
 3442 0028 FFF7FEFF 		bl	HAL_GetTick
 3443              	.LVL275:
 3444 002c A0EB0800 		sub	r0, r0, r8
 3445 0030 A042     		cmp	r0, r4
 3446 0032 ECD9     		bls	.L288
 3447              	.L289:
2342:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 3448              		.loc 1 2342 0 is_stmt 1
 3449 0034 2A68     		ldr	r2, [r5]
 3450 0036 1368     		ldr	r3, [r2]
 3451 0038 23F4D073 		bic	r3, r3, #416
 3452 003c 1360     		str	r3, [r2]
2343:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3453              		.loc 1 2343 0
 3454 003e 2A68     		ldr	r2, [r5]
 3455 0040 9368     		ldr	r3, [r2, #8]
 3456 0042 23F00103 		bic	r3, r3, #1
 3457 0046 9360     		str	r3, [r2, #8]
2345:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         huart->RxState = HAL_UART_STATE_READY;
ARM GAS  /tmp/cc8tmKB0.s 			page 116


 3458              		.loc 1 2345 0
 3459 0048 2023     		movs	r3, #32
 3460 004a 85F86930 		strb	r3, [r5, #105]
2346:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3461              		.loc 1 2346 0
 3462 004e 85F86A30 		strb	r3, [r5, #106]
2349:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         return HAL_TIMEOUT;
 3463              		.loc 1 2349 0
 3464 0052 0023     		movs	r3, #0
 3465 0054 85F86830 		strb	r3, [r5, #104]
2350:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       }
 3466              		.loc 1 2350 0
 3467 0058 0320     		movs	r0, #3
 3468 005a 00E0     		b	.L290
 3469              	.L293:
2354:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
 3470              		.loc 1 2354 0
 3471 005c 0020     		movs	r0, #0
 3472              	.L290:
2355:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3473              		.loc 1 2355 0
 3474 005e BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 3475              		.cfi_endproc
 3476              	.LFE168:
 3478              		.section	.text.HAL_UART_Transmit,"ax",%progbits
 3479              		.align	1
 3480              		.global	HAL_UART_Transmit
 3481              		.syntax unified
 3482              		.thumb
 3483              		.thumb_func
 3484              		.fpu fpv4-sp-d16
 3486              	HAL_UART_Transmit:
 3487              	.LFB133:
 724:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   uint16_t* tmp;
 3488              		.loc 1 724 0
 3489              		.cfi_startproc
 3490              		@ args = 0, pretend = 0, frame = 0
 3491              		@ frame_needed = 0, uses_anonymous_args = 0
 3492              	.LVL276:
 3493 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 3494              	.LCFI25:
 3495              		.cfi_def_cfa_offset 24
 3496              		.cfi_offset 4, -24
 3497              		.cfi_offset 5, -20
 3498              		.cfi_offset 6, -16
 3499              		.cfi_offset 7, -12
 3500              		.cfi_offset 8, -8
 3501              		.cfi_offset 14, -4
 3502 0004 82B0     		sub	sp, sp, #8
 3503              	.LCFI26:
 3504              		.cfi_def_cfa_offset 32
 3505 0006 1E46     		mov	r6, r3
 3506              	.LVL277:
 729:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 3507              		.loc 1 729 0
 3508 0008 90F86930 		ldrb	r3, [r0, #105]	@ zero_extendqisi2
 3509              	.LVL278:
ARM GAS  /tmp/cc8tmKB0.s 			page 117


 3510 000c DBB2     		uxtb	r3, r3
 3511 000e 202B     		cmp	r3, #32
 3512 0010 4ED1     		bne	.L300
 3513 0012 0446     		mov	r4, r0
 3514 0014 0D46     		mov	r5, r1
 3515 0016 9046     		mov	r8, r2
 731:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 3516              		.loc 1 731 0
 3517 0018 0029     		cmp	r1, #0
 3518 001a 4ED0     		beq	.L301
 731:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 3519              		.loc 1 731 0 is_stmt 0 discriminator 1
 3520 001c 002A     		cmp	r2, #0
 3521 001e 4ED0     		beq	.L302
 737:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3522              		.loc 1 737 0 is_stmt 1
 3523 0020 90F86830 		ldrb	r3, [r0, #104]	@ zero_extendqisi2
 3524 0024 012B     		cmp	r3, #1
 3525 0026 4CD0     		beq	.L303
 737:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3526              		.loc 1 737 0 is_stmt 0 discriminator 2
 3527 0028 0123     		movs	r3, #1
 3528 002a 80F86830 		strb	r3, [r0, #104]
 739:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_BUSY_TX;
 3529              		.loc 1 739 0 is_stmt 1 discriminator 2
 3530 002e 0023     		movs	r3, #0
 3531 0030 C366     		str	r3, [r0, #108]
 740:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3532              		.loc 1 740 0 discriminator 2
 3533 0032 2123     		movs	r3, #33
 3534 0034 80F86930 		strb	r3, [r0, #105]
 743:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3535              		.loc 1 743 0 discriminator 2
 3536 0038 FFF7FEFF 		bl	HAL_GetTick
 3537              	.LVL279:
 3538 003c 0746     		mov	r7, r0
 3539              	.LVL280:
 745:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->TxXferCount = Size;
 3540              		.loc 1 745 0 discriminator 2
 3541 003e A4F85080 		strh	r8, [r4, #80]	@ movhi
 746:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     while(huart->TxXferCount > 0U)
 3542              		.loc 1 746 0 discriminator 2
 3543 0042 A4F85280 		strh	r8, [r4, #82]	@ movhi
 747:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 3544              		.loc 1 747 0 discriminator 2
 3545 0046 03E0     		b	.L296
 3546              	.LVL281:
 3547              	.L297:
 762:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       }
 3548              		.loc 1 762 0
 3549 0048 2368     		ldr	r3, [r4]
 3550 004a 2A78     		ldrb	r2, [r5]	@ zero_extendqisi2
 3551 004c 1A85     		strh	r2, [r3, #40]	@ movhi
 3552 004e 0135     		adds	r5, r5, #1
 3553              	.LVL282:
 3554              	.L296:
 747:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
ARM GAS  /tmp/cc8tmKB0.s 			page 118


 3555              		.loc 1 747 0
 3556 0050 B4F85230 		ldrh	r3, [r4, #82]
 3557 0054 9BB2     		uxth	r3, r3
 3558 0056 DBB1     		cbz	r3, .L307
 749:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       if(UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_TXE, RESET, tickstart, Timeout) != HAL_OK)
 3559              		.loc 1 749 0
 3560 0058 B4F85230 		ldrh	r3, [r4, #82]
 3561 005c 013B     		subs	r3, r3, #1
 3562 005e 9BB2     		uxth	r3, r3
 3563 0060 A4F85230 		strh	r3, [r4, #82]	@ movhi
 750:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       {
 3564              		.loc 1 750 0
 3565 0064 0096     		str	r6, [sp]
 3566 0066 3B46     		mov	r3, r7
 3567 0068 0022     		movs	r2, #0
 3568 006a 8021     		movs	r1, #128
 3569 006c 2046     		mov	r0, r4
 3570 006e FFF7FEFF 		bl	UART_WaitOnFlagUntilTimeout
 3571              	.LVL283:
 3572 0072 40BB     		cbnz	r0, .L304
 754:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       {
 3573              		.loc 1 754 0
 3574 0074 A368     		ldr	r3, [r4, #8]
 3575 0076 B3F5805F 		cmp	r3, #4096
 3576 007a E5D1     		bne	.L297
 754:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       {
 3577              		.loc 1 754 0 is_stmt 0 discriminator 1
 3578 007c 2369     		ldr	r3, [r4, #16]
 3579 007e 002B     		cmp	r3, #0
 3580 0080 E2D1     		bne	.L297
 3581              	.LVL284:
 757:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         pData += 2U;
 3582              		.loc 1 757 0 is_stmt 1
 3583 0082 2268     		ldr	r2, [r4]
 3584 0084 35F8023B 		ldrh	r3, [r5], #2
 3585              	.LVL285:
 3586 0088 C3F30803 		ubfx	r3, r3, #0, #9
 3587 008c 1385     		strh	r3, [r2, #40]	@ movhi
 3588              	.LVL286:
 758:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       }
 3589              		.loc 1 758 0
 3590 008e DFE7     		b	.L296
 3591              	.LVL287:
 3592              	.L307:
 765:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 3593              		.loc 1 765 0
 3594 0090 0096     		str	r6, [sp]
 3595 0092 3B46     		mov	r3, r7
 3596 0094 0022     		movs	r2, #0
 3597 0096 4021     		movs	r1, #64
 3598 0098 2046     		mov	r0, r4
 3599 009a FFF7FEFF 		bl	UART_WaitOnFlagUntilTimeout
 3600              	.LVL288:
 3601 009e 0346     		mov	r3, r0
 3602 00a0 98B9     		cbnz	r0, .L305
 771:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3603              		.loc 1 771 0
ARM GAS  /tmp/cc8tmKB0.s 			page 119


 3604 00a2 2022     		movs	r2, #32
 3605 00a4 84F86920 		strb	r2, [r4, #105]
 774:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3606              		.loc 1 774 0
 3607 00a8 0022     		movs	r2, #0
 3608 00aa 84F86820 		strb	r2, [r4, #104]
 776:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 3609              		.loc 1 776 0
 3610 00ae 00E0     		b	.L295
 3611              	.LVL289:
 3612              	.L300:
 780:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 3613              		.loc 1 780 0
 3614 00b0 0223     		movs	r3, #2
 3615              	.LVL290:
 3616              	.L295:
 782:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3617              		.loc 1 782 0
 3618 00b2 1846     		mov	r0, r3
 3619 00b4 02B0     		add	sp, sp, #8
 3620              	.LCFI27:
 3621              		.cfi_remember_state
 3622              		.cfi_def_cfa_offset 24
 3623              		@ sp needed
 3624 00b6 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 3625              	.LVL291:
 3626              	.L301:
 3627              	.LCFI28:
 3628              		.cfi_restore_state
 733:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
 3629              		.loc 1 733 0
 3630 00ba 0123     		movs	r3, #1
 3631 00bc F9E7     		b	.L295
 3632              	.L302:
 3633 00be 0123     		movs	r3, #1
 3634 00c0 F7E7     		b	.L295
 3635              	.L303:
 737:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3636              		.loc 1 737 0
 3637 00c2 0223     		movs	r3, #2
 3638 00c4 F5E7     		b	.L295
 3639              	.LVL292:
 3640              	.L304:
 752:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       }
 3641              		.loc 1 752 0
 3642 00c6 0323     		movs	r3, #3
 3643 00c8 F3E7     		b	.L295
 3644              	.L305:
 767:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
 3645              		.loc 1 767 0
 3646 00ca 0323     		movs	r3, #3
 3647 00cc F1E7     		b	.L295
 3648              		.cfi_endproc
 3649              	.LFE133:
 3651              		.section	.text.HAL_UART_Receive,"ax",%progbits
 3652              		.align	1
 3653              		.global	HAL_UART_Receive
ARM GAS  /tmp/cc8tmKB0.s 			page 120


 3654              		.syntax unified
 3655              		.thumb
 3656              		.thumb_func
 3657              		.fpu fpv4-sp-d16
 3659              	HAL_UART_Receive:
 3660              	.LFB134:
 793:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   uint16_t* tmp;
 3661              		.loc 1 793 0
 3662              		.cfi_startproc
 3663              		@ args = 0, pretend = 0, frame = 0
 3664              		@ frame_needed = 0, uses_anonymous_args = 0
 3665              	.LVL293:
 3666 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 3667              	.LCFI29:
 3668              		.cfi_def_cfa_offset 24
 3669              		.cfi_offset 4, -24
 3670              		.cfi_offset 5, -20
 3671              		.cfi_offset 6, -16
 3672              		.cfi_offset 7, -12
 3673              		.cfi_offset 8, -8
 3674              		.cfi_offset 14, -4
 3675 0004 82B0     		sub	sp, sp, #8
 3676              	.LCFI30:
 3677              		.cfi_def_cfa_offset 32
 3678 0006 1E46     		mov	r6, r3
 3679              	.LVL294:
 799:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 3680              		.loc 1 799 0
 3681 0008 90F86A30 		ldrb	r3, [r0, #106]	@ zero_extendqisi2
 3682              	.LVL295:
 3683 000c DBB2     		uxtb	r3, r3
 3684 000e 202B     		cmp	r3, #32
 3685 0010 71D1     		bne	.L320
 3686 0012 0446     		mov	r4, r0
 3687 0014 0D46     		mov	r5, r1
 3688 0016 9046     		mov	r8, r2
 801:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 3689              		.loc 1 801 0
 3690 0018 0029     		cmp	r1, #0
 3691 001a 70D0     		beq	.L321
 801:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 3692              		.loc 1 801 0 is_stmt 0 discriminator 1
 3693 001c 002A     		cmp	r2, #0
 3694 001e 70D0     		beq	.L322
 807:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3695              		.loc 1 807 0 is_stmt 1
 3696 0020 90F86830 		ldrb	r3, [r0, #104]	@ zero_extendqisi2
 3697 0024 012B     		cmp	r3, #1
 3698 0026 6ED0     		beq	.L323
 807:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3699              		.loc 1 807 0 is_stmt 0 discriminator 2
 3700 0028 0123     		movs	r3, #1
 3701 002a 80F86830 		strb	r3, [r0, #104]
 809:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_BUSY_RX;
 3702              		.loc 1 809 0 is_stmt 1 discriminator 2
 3703 002e 0023     		movs	r3, #0
 3704 0030 C366     		str	r3, [r0, #108]
ARM GAS  /tmp/cc8tmKB0.s 			page 121


 810:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3705              		.loc 1 810 0 discriminator 2
 3706 0032 2223     		movs	r3, #34
 3707 0034 80F86A30 		strb	r3, [r0, #106]
 813:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3708              		.loc 1 813 0 discriminator 2
 3709 0038 FFF7FEFF 		bl	HAL_GetTick
 3710              	.LVL296:
 3711 003c 0746     		mov	r7, r0
 3712              	.LVL297:
 815:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->RxXferCount = Size;
 3713              		.loc 1 815 0 discriminator 2
 3714 003e A4F85880 		strh	r8, [r4, #88]	@ movhi
 816:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3715              		.loc 1 816 0 discriminator 2
 3716 0042 A4F85A80 		strh	r8, [r4, #90]	@ movhi
 819:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     uhMask = huart->Mask;
 3717              		.loc 1 819 0 discriminator 2
 3718 0046 A368     		ldr	r3, [r4, #8]
 3719 0048 B3F5805F 		cmp	r3, #4096
 3720 004c 06D0     		beq	.L326
 3721 004e A3B9     		cbnz	r3, .L313
 819:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     uhMask = huart->Mask;
 3722              		.loc 1 819 0 is_stmt 0 discriminator 5
 3723 0050 2369     		ldr	r3, [r4, #16]
 3724 0052 73B9     		cbnz	r3, .L314
 819:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     uhMask = huart->Mask;
 3725              		.loc 1 819 0 discriminator 7
 3726 0054 FF23     		movs	r3, #255
 3727 0056 A4F85C30 		strh	r3, [r4, #92]	@ movhi
 3728 005a 11E0     		b	.L312
 3729              	.L326:
 819:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     uhMask = huart->Mask;
 3730              		.loc 1 819 0 discriminator 1
 3731 005c 2369     		ldr	r3, [r4, #16]
 3732 005e 23B9     		cbnz	r3, .L311
 819:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     uhMask = huart->Mask;
 3733              		.loc 1 819 0 discriminator 3
 3734 0060 40F2FF13 		movw	r3, #511
 3735 0064 A4F85C30 		strh	r3, [r4, #92]	@ movhi
 3736 0068 0AE0     		b	.L312
 3737              	.L311:
 819:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     uhMask = huart->Mask;
 3738              		.loc 1 819 0 discriminator 4
 3739 006a FF23     		movs	r3, #255
 3740 006c A4F85C30 		strh	r3, [r4, #92]	@ movhi
 3741 0070 06E0     		b	.L312
 3742              	.L314:
 819:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     uhMask = huart->Mask;
 3743              		.loc 1 819 0 discriminator 8
 3744 0072 7F23     		movs	r3, #127
 3745 0074 A4F85C30 		strh	r3, [r4, #92]	@ movhi
 3746 0078 02E0     		b	.L312
 3747              	.L313:
 819:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     uhMask = huart->Mask;
 3748              		.loc 1 819 0 discriminator 6
 3749 007a B3F1805F 		cmp	r3, #268435456
ARM GAS  /tmp/cc8tmKB0.s 			page 122


 3750 007e 02D0     		beq	.L327
 3751              	.L312:
 820:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3752              		.loc 1 820 0 is_stmt 1
 3753 0080 B4F85C80 		ldrh	r8, [r4, #92]
 3754              	.LVL298:
 823:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 3755              		.loc 1 823 0
 3756 0084 10E0     		b	.L316
 3757              	.LVL299:
 3758              	.L327:
 819:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     uhMask = huart->Mask;
 3759              		.loc 1 819 0 discriminator 9
 3760 0086 2369     		ldr	r3, [r4, #16]
 3761 0088 1BB9     		cbnz	r3, .L315
 819:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     uhMask = huart->Mask;
 3762              		.loc 1 819 0 is_stmt 0 discriminator 10
 3763 008a 7F23     		movs	r3, #127
 3764 008c A4F85C30 		strh	r3, [r4, #92]	@ movhi
 3765 0090 F6E7     		b	.L312
 3766              	.L315:
 819:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     uhMask = huart->Mask;
 3767              		.loc 1 819 0 discriminator 11
 3768 0092 3F23     		movs	r3, #63
 3769 0094 A4F85C30 		strh	r3, [r4, #92]	@ movhi
 3770 0098 F2E7     		b	.L312
 3771              	.LVL300:
 3772              	.L317:
 838:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       }
 3773              		.loc 1 838 0 is_stmt 1
 3774 009a 2368     		ldr	r3, [r4]
 3775 009c 9A8C     		ldrh	r2, [r3, #36]
 3776 009e 5FFA88F3 		uxtb	r3, r8
 3777              	.LVL301:
 3778 00a2 1340     		ands	r3, r3, r2
 3779 00a4 2B70     		strb	r3, [r5]
 3780 00a6 0135     		adds	r5, r5, #1
 3781              	.LVL302:
 3782              	.L316:
 823:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 3783              		.loc 1 823 0
 3784 00a8 B4F85A30 		ldrh	r3, [r4, #90]
 3785 00ac 9BB2     		uxth	r3, r3
 3786 00ae DBB1     		cbz	r3, .L328
 825:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       if(UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_RXNE, RESET, tickstart, Timeout) != HAL_OK)
 3787              		.loc 1 825 0
 3788 00b0 B4F85A30 		ldrh	r3, [r4, #90]
 3789 00b4 013B     		subs	r3, r3, #1
 3790 00b6 9BB2     		uxth	r3, r3
 3791 00b8 A4F85A30 		strh	r3, [r4, #90]	@ movhi
 826:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       {
 3792              		.loc 1 826 0
 3793 00bc 0096     		str	r6, [sp]
 3794 00be 3B46     		mov	r3, r7
 3795 00c0 0022     		movs	r2, #0
 3796 00c2 2021     		movs	r1, #32
 3797 00c4 2046     		mov	r0, r4
ARM GAS  /tmp/cc8tmKB0.s 			page 123


 3798 00c6 FFF7FEFF 		bl	UART_WaitOnFlagUntilTimeout
 3799              	.LVL303:
 3800 00ca F0B9     		cbnz	r0, .L324
 830:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       {
 3801              		.loc 1 830 0
 3802 00cc A368     		ldr	r3, [r4, #8]
 3803 00ce B3F5805F 		cmp	r3, #4096
 3804 00d2 E2D1     		bne	.L317
 830:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       {
 3805              		.loc 1 830 0 is_stmt 0 discriminator 1
 3806 00d4 2369     		ldr	r3, [r4, #16]
 3807 00d6 002B     		cmp	r3, #0
 3808 00d8 DFD1     		bne	.L317
 3809              	.LVL304:
 833:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         pData +=2U;
 3810              		.loc 1 833 0 is_stmt 1
 3811 00da 2368     		ldr	r3, [r4]
 3812 00dc 9B8C     		ldrh	r3, [r3, #36]
 3813 00de 08EA0303 		and	r3, r8, r3
 3814 00e2 25F8023B 		strh	r3, [r5], #2	@ movhi
 3815              	.LVL305:
 834:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       }
 3816              		.loc 1 834 0
 3817 00e6 DFE7     		b	.L316
 3818              	.LVL306:
 3819              	.L328:
 843:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3820              		.loc 1 843 0
 3821 00e8 2023     		movs	r3, #32
 3822 00ea 84F86A30 		strb	r3, [r4, #106]
 846:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3823              		.loc 1 846 0
 3824 00ee 0020     		movs	r0, #0
 3825 00f0 84F86800 		strb	r0, [r4, #104]
 848:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 3826              		.loc 1 848 0
 3827 00f4 00E0     		b	.L309
 3828              	.LVL307:
 3829              	.L320:
 852:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 3830              		.loc 1 852 0
 3831 00f6 0220     		movs	r0, #2
 3832              	.LVL308:
 3833              	.L309:
 854:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3834              		.loc 1 854 0
 3835 00f8 02B0     		add	sp, sp, #8
 3836              	.LCFI31:
 3837              		.cfi_remember_state
 3838              		.cfi_def_cfa_offset 24
 3839              		@ sp needed
 3840 00fa BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 3841              	.LVL309:
 3842              	.L321:
 3843              	.LCFI32:
 3844              		.cfi_restore_state
 803:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
ARM GAS  /tmp/cc8tmKB0.s 			page 124


 3845              		.loc 1 803 0
 3846 00fe 0120     		movs	r0, #1
 3847              	.LVL310:
 3848 0100 FAE7     		b	.L309
 3849              	.LVL311:
 3850              	.L322:
 3851 0102 0120     		movs	r0, #1
 3852              	.LVL312:
 3853 0104 F8E7     		b	.L309
 3854              	.LVL313:
 3855              	.L323:
 807:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3856              		.loc 1 807 0
 3857 0106 0220     		movs	r0, #2
 3858              	.LVL314:
 3859 0108 F6E7     		b	.L309
 3860              	.LVL315:
 3861              	.L324:
 828:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       }
 3862              		.loc 1 828 0
 3863 010a 0320     		movs	r0, #3
 3864 010c F4E7     		b	.L309
 3865              		.cfi_endproc
 3866              	.LFE134:
 3868              		.section	.text.UART_CheckIdleState,"ax",%progbits
 3869              		.align	1
 3870              		.global	UART_CheckIdleState
 3871              		.syntax unified
 3872              		.thumb
 3873              		.thumb_func
 3874              		.fpu fpv4-sp-d16
 3876              	UART_CheckIdleState:
 3877              	.LFB167:
2282:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   uint32_t tickstart = 0U;
 3878              		.loc 1 2282 0
 3879              		.cfi_startproc
 3880              		@ args = 0, pretend = 0, frame = 0
 3881              		@ frame_needed = 0, uses_anonymous_args = 0
 3882              	.LVL316:
 3883 0000 30B5     		push	{r4, r5, lr}
 3884              	.LCFI33:
 3885              		.cfi_def_cfa_offset 12
 3886              		.cfi_offset 4, -12
 3887              		.cfi_offset 5, -8
 3888              		.cfi_offset 14, -4
 3889 0002 83B0     		sub	sp, sp, #12
 3890              	.LCFI34:
 3891              		.cfi_def_cfa_offset 24
 3892 0004 0446     		mov	r4, r0
 3893              	.LVL317:
2286:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3894              		.loc 1 2286 0
 3895 0006 0023     		movs	r3, #0
 3896 0008 C366     		str	r3, [r0, #108]
2289:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3897              		.loc 1 2289 0
 3898 000a FFF7FEFF 		bl	HAL_GetTick
ARM GAS  /tmp/cc8tmKB0.s 			page 125


 3899              	.LVL318:
 3900 000e 0546     		mov	r5, r0
 3901              	.LVL319:
2292:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 3902              		.loc 1 2292 0
 3903 0010 2368     		ldr	r3, [r4]
 3904 0012 1B68     		ldr	r3, [r3]
 3905 0014 13F0080F 		tst	r3, #8
 3906 0018 0ED1     		bne	.L336
 3907              	.LVL320:
 3908              	.L330:
2302:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 3909              		.loc 1 2302 0
 3910 001a 2368     		ldr	r3, [r4]
 3911 001c 1B68     		ldr	r3, [r3]
 3912 001e 13F0040F 		tst	r3, #4
 3913 0022 17D1     		bne	.L337
 3914              	.L332:
2313:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
 3915              		.loc 1 2313 0
 3916 0024 2023     		movs	r3, #32
 3917 0026 84F86930 		strb	r3, [r4, #105]
2314:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3918              		.loc 1 2314 0
 3919 002a 84F86A30 		strb	r3, [r4, #106]
2317:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3920              		.loc 1 2317 0
 3921 002e 0020     		movs	r0, #0
 3922 0030 84F86800 		strb	r0, [r4, #104]
 3923              	.L331:
2320:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3924              		.loc 1 2320 0
 3925 0034 03B0     		add	sp, sp, #12
 3926              	.LCFI35:
 3927              		.cfi_remember_state
 3928              		.cfi_def_cfa_offset 12
 3929              		@ sp needed
 3930 0036 30BD     		pop	{r4, r5, pc}
 3931              	.LVL321:
 3932              	.L336:
 3933              	.LCFI36:
 3934              		.cfi_restore_state
2295:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 3935              		.loc 1 2295 0
 3936 0038 6FF07E43 		mvn	r3, #-33554432
 3937 003c 0093     		str	r3, [sp]
 3938 003e 0346     		mov	r3, r0
 3939 0040 0022     		movs	r2, #0
 3940 0042 4FF40011 		mov	r1, #2097152
 3941 0046 2046     		mov	r0, r4
 3942              	.LVL322:
 3943 0048 FFF7FEFF 		bl	UART_WaitOnFlagUntilTimeout
 3944              	.LVL323:
 3945 004c 0028     		cmp	r0, #0
 3946 004e E4D0     		beq	.L330
2298:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
 3947              		.loc 1 2298 0
ARM GAS  /tmp/cc8tmKB0.s 			page 126


 3948 0050 0320     		movs	r0, #3
 3949 0052 EFE7     		b	.L331
 3950              	.L337:
2305:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 3951              		.loc 1 2305 0
 3952 0054 6FF07E43 		mvn	r3, #-33554432
 3953 0058 0093     		str	r3, [sp]
 3954 005a 2B46     		mov	r3, r5
 3955 005c 0022     		movs	r2, #0
 3956 005e 4FF48001 		mov	r1, #4194304
 3957 0062 2046     		mov	r0, r4
 3958 0064 FFF7FEFF 		bl	UART_WaitOnFlagUntilTimeout
 3959              	.LVL324:
 3960 0068 0028     		cmp	r0, #0
 3961 006a DBD0     		beq	.L332
2308:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
 3962              		.loc 1 2308 0
 3963 006c 0320     		movs	r0, #3
 3964 006e E1E7     		b	.L331
 3965              		.cfi_endproc
 3966              	.LFE167:
 3968              		.section	.text.HAL_UART_Init,"ax",%progbits
 3969              		.align	1
 3970              		.global	HAL_UART_Init
 3971              		.syntax unified
 3972              		.thumb
 3973              		.thumb_func
 3974              		.fpu fpv4-sp-d16
 3976              	HAL_UART_Init:
 3977              	.LFB126:
 295:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Check the UART handle allocation */
 3978              		.loc 1 295 0
 3979              		.cfi_startproc
 3980              		@ args = 0, pretend = 0, frame = 0
 3981              		@ frame_needed = 0, uses_anonymous_args = 0
 3982              	.LVL325:
 297:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 3983              		.loc 1 297 0
 3984 0000 0028     		cmp	r0, #0
 3985 0002 5FD0     		beq	.L344
 295:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Check the UART handle allocation */
 3986              		.loc 1 295 0
 3987 0004 10B5     		push	{r4, lr}
 3988              	.LCFI37:
 3989              		.cfi_def_cfa_offset 8
 3990              		.cfi_offset 4, -8
 3991              		.cfi_offset 14, -4
 3992 0006 0446     		mov	r4, r0
 302:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 3993              		.loc 1 302 0
 3994 0008 8369     		ldr	r3, [r0, #24]
 3995 000a 002B     		cmp	r3, #0
 3996 000c 36D0     		beq	.L340
 305:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 3997              		.loc 1 305 0
 3998 000e 0368     		ldr	r3, [r0]
 3999 0010 2D4A     		ldr	r2, .L351
ARM GAS  /tmp/cc8tmKB0.s 			page 127


 4000 0012 9342     		cmp	r3, r2
 4001 0014 0CD0     		beq	.L341
 305:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 4002              		.loc 1 305 0 is_stmt 0 discriminator 1
 4003 0016 A2F57442 		sub	r2, r2, #62464
 4004 001a 9342     		cmp	r3, r2
 4005 001c 08D0     		beq	.L341
 305:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 4006              		.loc 1 305 0 discriminator 2
 4007 001e 02F58062 		add	r2, r2, #1024
 4008 0022 9342     		cmp	r3, r2
 4009 0024 04D0     		beq	.L341
 305:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 4010              		.loc 1 305 0 discriminator 3
 4011 0026 40F23111 		movw	r1, #305
 4012 002a 2848     		ldr	r0, .L351+4
 4013              	.LVL326:
 4014 002c FFF7FEFF 		bl	assert_failed
 4015              	.LVL327:
 4016              	.L341:
 313:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 4017              		.loc 1 313 0 is_stmt 1
 4018 0030 94F86930 		ldrb	r3, [r4, #105]	@ zero_extendqisi2
 4019 0034 002B     		cmp	r3, #0
 4020 0036 3BD0     		beq	.L349
 4021              	.L342:
 322:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 4022              		.loc 1 322 0
 4023 0038 2423     		movs	r3, #36
 4024 003a 84F86930 		strb	r3, [r4, #105]
 325:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 4025              		.loc 1 325 0
 4026 003e 2268     		ldr	r2, [r4]
 4027 0040 1368     		ldr	r3, [r2]
 4028 0042 23F00103 		bic	r3, r3, #1
 4029 0046 1360     		str	r3, [r2]
 328:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 4030              		.loc 1 328 0
 4031 0048 2046     		mov	r0, r4
 4032 004a FFF7FEFF 		bl	UART_SetConfig
 4033              	.LVL328:
 4034 004e 0128     		cmp	r0, #1
 4035 0050 13D0     		beq	.L339
 333:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 4036              		.loc 1 333 0
 4037 0052 636A     		ldr	r3, [r4, #36]
 4038 0054 93BB     		cbnz	r3, .L350
 4039              	.L343:
 341:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL | USART_CR3_IREN));
 4040              		.loc 1 341 0
 4041 0056 2268     		ldr	r2, [r4]
 4042 0058 5368     		ldr	r3, [r2, #4]
 4043 005a 23F49043 		bic	r3, r3, #18432
 4044 005e 5360     		str	r3, [r2, #4]
 342:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 4045              		.loc 1 342 0
 4046 0060 2268     		ldr	r2, [r4]
ARM GAS  /tmp/cc8tmKB0.s 			page 128


 4047 0062 9368     		ldr	r3, [r2, #8]
 4048 0064 23F02A03 		bic	r3, r3, #42
 4049 0068 9360     		str	r3, [r2, #8]
 345:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 4050              		.loc 1 345 0
 4051 006a 2268     		ldr	r2, [r4]
 4052 006c 1368     		ldr	r3, [r2]
 4053 006e 43F00103 		orr	r3, r3, #1
 4054 0072 1360     		str	r3, [r2]
 348:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
 4055              		.loc 1 348 0
 4056 0074 2046     		mov	r0, r4
 4057 0076 FFF7FEFF 		bl	UART_CheckIdleState
 4058              	.LVL329:
 4059              	.L339:
 349:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 4060              		.loc 1 349 0
 4061 007a 10BD     		pop	{r4, pc}
 4062              	.LVL330:
 4063              	.L340:
 310:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 4064              		.loc 1 310 0
 4065 007c 0368     		ldr	r3, [r0]
 4066 007e 124A     		ldr	r2, .L351
 4067 0080 9342     		cmp	r3, r2
 4068 0082 D5D0     		beq	.L341
 310:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 4069              		.loc 1 310 0 is_stmt 0 discriminator 1
 4070 0084 A2F57442 		sub	r2, r2, #62464
 4071 0088 9342     		cmp	r3, r2
 4072 008a D1D0     		beq	.L341
 310:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 4073              		.loc 1 310 0 discriminator 2
 4074 008c 02F58062 		add	r2, r2, #1024
 4075 0090 9342     		cmp	r3, r2
 4076 0092 CDD0     		beq	.L341
 310:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 4077              		.loc 1 310 0 discriminator 3
 4078 0094 02F58062 		add	r2, r2, #1024
 4079 0098 9342     		cmp	r3, r2
 4080 009a C9D0     		beq	.L341
 310:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 4081              		.loc 1 310 0 discriminator 4
 4082 009c 02F58062 		add	r2, r2, #1024
 4083 00a0 9342     		cmp	r3, r2
 4084 00a2 C5D0     		beq	.L341
 310:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 4085              		.loc 1 310 0 discriminator 5
 4086 00a4 4FF49B71 		mov	r1, #310
 4087 00a8 0848     		ldr	r0, .L351+4
 4088              	.LVL331:
 4089 00aa FFF7FEFF 		bl	assert_failed
 4090              	.LVL332:
 4091 00ae BFE7     		b	.L341
 4092              	.L349:
 316:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 4093              		.loc 1 316 0 is_stmt 1
ARM GAS  /tmp/cc8tmKB0.s 			page 129


 4094 00b0 84F86830 		strb	r3, [r4, #104]
 319:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 4095              		.loc 1 319 0
 4096 00b4 2046     		mov	r0, r4
 4097 00b6 FFF7FEFF 		bl	HAL_UART_MspInit
 4098              	.LVL333:
 4099 00ba BDE7     		b	.L342
 4100              	.L350:
 335:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 4101              		.loc 1 335 0
 4102 00bc 2046     		mov	r0, r4
 4103 00be FFF7FEFF 		bl	UART_AdvFeatureConfig
 4104              	.LVL334:
 4105 00c2 C8E7     		b	.L343
 4106              	.LVL335:
 4107              	.L344:
 4108              	.LCFI38:
 4109              		.cfi_def_cfa_offset 0
 4110              		.cfi_restore 4
 4111              		.cfi_restore 14
 299:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 4112              		.loc 1 299 0
 4113 00c4 0120     		movs	r0, #1
 4114              	.LVL336:
 349:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 4115              		.loc 1 349 0
 4116 00c6 7047     		bx	lr
 4117              	.L352:
 4118              		.align	2
 4119              	.L351:
 4120 00c8 00380140 		.word	1073821696
 4121 00cc 00000000 		.word	.LC0
 4122              		.cfi_endproc
 4123              	.LFE126:
 4125              		.section	.text.HAL_HalfDuplex_Init,"ax",%progbits
 4126              		.align	1
 4127              		.global	HAL_HalfDuplex_Init
 4128              		.syntax unified
 4129              		.thumb
 4130              		.thumb_func
 4131              		.fpu fpv4-sp-d16
 4133              	HAL_HalfDuplex_Init:
 4134              	.LFB127:
 358:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Check the UART handle allocation */
 4135              		.loc 1 358 0
 4136              		.cfi_startproc
 4137              		@ args = 0, pretend = 0, frame = 0
 4138              		@ frame_needed = 0, uses_anonymous_args = 0
 4139              	.LVL337:
 360:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 4140              		.loc 1 360 0
 4141 0000 0028     		cmp	r0, #0
 4142 0002 4ED0     		beq	.L358
 358:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Check the UART handle allocation */
 4143              		.loc 1 358 0
 4144 0004 10B5     		push	{r4, lr}
 4145              	.LCFI39:
ARM GAS  /tmp/cc8tmKB0.s 			page 130


 4146              		.cfi_def_cfa_offset 8
 4147              		.cfi_offset 4, -8
 4148              		.cfi_offset 14, -4
 4149 0006 0446     		mov	r4, r0
 366:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 4150              		.loc 1 366 0
 4151 0008 0368     		ldr	r3, [r0]
 4152 000a 274A     		ldr	r2, .L365
 4153 000c 9342     		cmp	r3, r2
 4154 000e 14D0     		beq	.L355
 366:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 4155              		.loc 1 366 0 is_stmt 0 discriminator 1
 4156 0010 A2F57442 		sub	r2, r2, #62464
 4157 0014 9342     		cmp	r3, r2
 4158 0016 10D0     		beq	.L355
 366:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 4159              		.loc 1 366 0 discriminator 2
 4160 0018 02F58062 		add	r2, r2, #1024
 4161 001c 9342     		cmp	r3, r2
 4162 001e 0CD0     		beq	.L355
 366:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 4163              		.loc 1 366 0 discriminator 3
 4164 0020 02F58062 		add	r2, r2, #1024
 4165 0024 9342     		cmp	r3, r2
 4166 0026 08D0     		beq	.L355
 366:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 4167              		.loc 1 366 0 discriminator 4
 4168 0028 02F58062 		add	r2, r2, #1024
 4169 002c 9342     		cmp	r3, r2
 4170 002e 04D0     		beq	.L355
 366:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 4171              		.loc 1 366 0 discriminator 5
 4172 0030 4FF4B771 		mov	r1, #366
 4173 0034 1D48     		ldr	r0, .L365+4
 4174              	.LVL338:
 4175 0036 FFF7FEFF 		bl	assert_failed
 4176              	.LVL339:
 4177              	.L355:
 368:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 4178              		.loc 1 368 0 is_stmt 1
 4179 003a 94F86930 		ldrb	r3, [r4, #105]	@ zero_extendqisi2
 4180 003e 33B3     		cbz	r3, .L363
 4181              	.L356:
 377:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 4182              		.loc 1 377 0
 4183 0040 2423     		movs	r3, #36
 4184 0042 84F86930 		strb	r3, [r4, #105]
 380:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 4185              		.loc 1 380 0
 4186 0046 2268     		ldr	r2, [r4]
 4187 0048 1368     		ldr	r3, [r2]
 4188 004a 23F00103 		bic	r3, r3, #1
 4189 004e 1360     		str	r3, [r2]
 383:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 4190              		.loc 1 383 0
 4191 0050 2046     		mov	r0, r4
 4192 0052 FFF7FEFF 		bl	UART_SetConfig
ARM GAS  /tmp/cc8tmKB0.s 			page 131


 4193              	.LVL340:
 4194 0056 0128     		cmp	r0, #1
 4195 0058 18D0     		beq	.L354
 388:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 4196              		.loc 1 388 0
 4197 005a 636A     		ldr	r3, [r4, #36]
 4198 005c EBB9     		cbnz	r3, .L364
 4199              	.L357:
 396:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_IREN | USART_CR3_SCEN));
 4200              		.loc 1 396 0
 4201 005e 2268     		ldr	r2, [r4]
 4202 0060 5368     		ldr	r3, [r2, #4]
 4203 0062 23F49043 		bic	r3, r3, #18432
 4204 0066 5360     		str	r3, [r2, #4]
 397:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 4205              		.loc 1 397 0
 4206 0068 2268     		ldr	r2, [r4]
 4207 006a 9368     		ldr	r3, [r2, #8]
 4208 006c 23F02203 		bic	r3, r3, #34
 4209 0070 9360     		str	r3, [r2, #8]
 400:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 4210              		.loc 1 400 0
 4211 0072 2268     		ldr	r2, [r4]
 4212 0074 9368     		ldr	r3, [r2, #8]
 4213 0076 43F00803 		orr	r3, r3, #8
 4214 007a 9360     		str	r3, [r2, #8]
 403:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 4215              		.loc 1 403 0
 4216 007c 2268     		ldr	r2, [r4]
 4217 007e 1368     		ldr	r3, [r2]
 4218 0080 43F00103 		orr	r3, r3, #1
 4219 0084 1360     		str	r3, [r2]
 406:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
 4220              		.loc 1 406 0
 4221 0086 2046     		mov	r0, r4
 4222 0088 FFF7FEFF 		bl	UART_CheckIdleState
 4223              	.LVL341:
 4224              	.L354:
 407:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 4225              		.loc 1 407 0
 4226 008c 10BD     		pop	{r4, pc}
 4227              	.LVL342:
 4228              	.L363:
 371:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 4229              		.loc 1 371 0
 4230 008e 84F86830 		strb	r3, [r4, #104]
 374:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 4231              		.loc 1 374 0
 4232 0092 2046     		mov	r0, r4
 4233 0094 FFF7FEFF 		bl	HAL_UART_MspInit
 4234              	.LVL343:
 4235 0098 D2E7     		b	.L356
 4236              	.L364:
 390:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 4237              		.loc 1 390 0
 4238 009a 2046     		mov	r0, r4
 4239 009c FFF7FEFF 		bl	UART_AdvFeatureConfig
ARM GAS  /tmp/cc8tmKB0.s 			page 132


 4240              	.LVL344:
 4241 00a0 DDE7     		b	.L357
 4242              	.LVL345:
 4243              	.L358:
 4244              	.LCFI40:
 4245              		.cfi_def_cfa_offset 0
 4246              		.cfi_restore 4
 4247              		.cfi_restore 14
 362:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 4248              		.loc 1 362 0
 4249 00a2 0120     		movs	r0, #1
 4250              	.LVL346:
 407:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 4251              		.loc 1 407 0
 4252 00a4 7047     		bx	lr
 4253              	.L366:
 4254 00a6 00BF     		.align	2
 4255              	.L365:
 4256 00a8 00380140 		.word	1073821696
 4257 00ac 00000000 		.word	.LC0
 4258              		.cfi_endproc
 4259              	.LFE127:
 4261              		.section	.text.HAL_LIN_Init,"ax",%progbits
 4262              		.align	1
 4263              		.global	HAL_LIN_Init
 4264              		.syntax unified
 4265              		.thumb
 4266              		.thumb_func
 4267              		.fpu fpv4-sp-d16
 4269              	HAL_LIN_Init:
 4270              	.LFB128:
 421:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Check the UART handle allocation */
 4271              		.loc 1 421 0
 4272              		.cfi_startproc
 4273              		@ args = 0, pretend = 0, frame = 0
 4274              		@ frame_needed = 0, uses_anonymous_args = 0
 4275              	.LVL347:
 423:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 4276              		.loc 1 423 0
 4277 0000 0028     		cmp	r0, #0
 4278 0002 66D0     		beq	.L373
 421:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Check the UART handle allocation */
 4279              		.loc 1 421 0
 4280 0004 38B5     		push	{r3, r4, r5, lr}
 4281              	.LCFI41:
 4282              		.cfi_def_cfa_offset 16
 4283              		.cfi_offset 3, -16
 4284              		.cfi_offset 4, -12
 4285              		.cfi_offset 5, -8
 4286              		.cfi_offset 14, -4
 4287 0006 0446     		mov	r4, r0
 4288 0008 0D46     		mov	r5, r1
 429:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Check the Break detection length parameter */
 4289              		.loc 1 429 0
 4290 000a 0368     		ldr	r3, [r0]
 4291 000c 344A     		ldr	r2, .L383
 4292 000e 9342     		cmp	r3, r2
ARM GAS  /tmp/cc8tmKB0.s 			page 133


 4293 0010 14D0     		beq	.L369
 429:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Check the Break detection length parameter */
 4294              		.loc 1 429 0 is_stmt 0 discriminator 1
 4295 0012 A2F57442 		sub	r2, r2, #62464
 4296 0016 9342     		cmp	r3, r2
 4297 0018 10D0     		beq	.L369
 429:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Check the Break detection length parameter */
 4298              		.loc 1 429 0 discriminator 2
 4299 001a 02F58062 		add	r2, r2, #1024
 4300 001e 9342     		cmp	r3, r2
 4301 0020 0CD0     		beq	.L369
 429:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Check the Break detection length parameter */
 4302              		.loc 1 429 0 discriminator 3
 4303 0022 02F58062 		add	r2, r2, #1024
 4304 0026 9342     		cmp	r3, r2
 4305 0028 08D0     		beq	.L369
 429:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Check the Break detection length parameter */
 4306              		.loc 1 429 0 discriminator 4
 4307 002a 02F58062 		add	r2, r2, #1024
 4308 002e 9342     		cmp	r3, r2
 4309 0030 04D0     		beq	.L369
 429:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Check the Break detection length parameter */
 4310              		.loc 1 429 0 discriminator 5
 4311 0032 40F2AD11 		movw	r1, #429
 4312              	.LVL348:
 4313 0036 2B48     		ldr	r0, .L383+4
 4314              	.LVL349:
 4315 0038 FFF7FEFF 		bl	assert_failed
 4316              	.LVL350:
 4317              	.L369:
 431:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 4318              		.loc 1 431 0 is_stmt 1
 4319 003c 0DB1     		cbz	r5, .L370
 431:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 4320              		.loc 1 431 0 is_stmt 0 discriminator 1
 4321 003e 202D     		cmp	r5, #32
 4322 0040 37D1     		bne	.L380
 4323              	.L370:
 434:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 4324              		.loc 1 434 0 is_stmt 1
 4325 0042 E369     		ldr	r3, [r4, #28]
 4326 0044 B3F5004F 		cmp	r3, #32768
 4327 0048 45D0     		beq	.L374
 439:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 4328              		.loc 1 439 0
 4329 004a A368     		ldr	r3, [r4, #8]
 4330 004c 002B     		cmp	r3, #0
 4331 004e 44D1     		bne	.L375
 444:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 4332              		.loc 1 444 0
 4333 0050 94F86930 		ldrb	r3, [r4, #105]	@ zero_extendqisi2
 4334 0054 002B     		cmp	r3, #0
 4335 0056 32D0     		beq	.L381
 4336              	.L371:
 453:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 4337              		.loc 1 453 0
 4338 0058 2423     		movs	r3, #36
ARM GAS  /tmp/cc8tmKB0.s 			page 134


 4339 005a 84F86930 		strb	r3, [r4, #105]
 456:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 4340              		.loc 1 456 0
 4341 005e 2268     		ldr	r2, [r4]
 4342 0060 1368     		ldr	r3, [r2]
 4343 0062 23F00103 		bic	r3, r3, #1
 4344 0066 1360     		str	r3, [r2]
 459:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 4345              		.loc 1 459 0
 4346 0068 2046     		mov	r0, r4
 4347 006a FFF7FEFF 		bl	UART_SetConfig
 4348              	.LVL351:
 4349 006e 0128     		cmp	r0, #1
 4350 0070 34D0     		beq	.L368
 464:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 4351              		.loc 1 464 0
 4352 0072 636A     		ldr	r3, [r4, #36]
 4353 0074 4BBB     		cbnz	r3, .L382
 4354              	.L372:
 472:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_HDSEL | USART_CR3_IREN | USART_CR3_SCEN));
 4355              		.loc 1 472 0
 4356 0076 2268     		ldr	r2, [r4]
 4357 0078 5368     		ldr	r3, [r2, #4]
 4358 007a 23F40063 		bic	r3, r3, #2048
 4359 007e 5360     		str	r3, [r2, #4]
 473:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 4360              		.loc 1 473 0
 4361 0080 2268     		ldr	r2, [r4]
 4362 0082 9368     		ldr	r3, [r2, #8]
 4363 0084 23F02A03 		bic	r3, r3, #42
 4364 0088 9360     		str	r3, [r2, #8]
 476:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 4365              		.loc 1 476 0
 4366 008a 2268     		ldr	r2, [r4]
 4367 008c 5368     		ldr	r3, [r2, #4]
 4368 008e 43F48043 		orr	r3, r3, #16384
 4369 0092 5360     		str	r3, [r2, #4]
 479:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 4370              		.loc 1 479 0
 4371 0094 2368     		ldr	r3, [r4]
 4372 0096 5968     		ldr	r1, [r3, #4]
 4373 0098 21F02001 		bic	r1, r1, #32
 4374 009c 0D43     		orrs	r5, r5, r1
 4375              	.LVL352:
 4376 009e 5D60     		str	r5, [r3, #4]
 482:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 4377              		.loc 1 482 0
 4378 00a0 2268     		ldr	r2, [r4]
 4379 00a2 1368     		ldr	r3, [r2]
 4380 00a4 43F00103 		orr	r3, r3, #1
 4381 00a8 1360     		str	r3, [r2]
 485:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
 4382              		.loc 1 485 0
 4383 00aa 2046     		mov	r0, r4
 4384 00ac FFF7FEFF 		bl	UART_CheckIdleState
 4385              	.LVL353:
 4386 00b0 14E0     		b	.L368
ARM GAS  /tmp/cc8tmKB0.s 			page 135


 4387              	.LVL354:
 4388              	.L380:
 431:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 4389              		.loc 1 431 0 discriminator 2
 4390 00b2 40F2AF11 		movw	r1, #431
 4391 00b6 0B48     		ldr	r0, .L383+4
 4392 00b8 FFF7FEFF 		bl	assert_failed
 4393              	.LVL355:
 4394 00bc C1E7     		b	.L370
 4395              	.L381:
 447:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 4396              		.loc 1 447 0
 4397 00be 84F86830 		strb	r3, [r4, #104]
 450:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 4398              		.loc 1 450 0
 4399 00c2 2046     		mov	r0, r4
 4400 00c4 FFF7FEFF 		bl	HAL_UART_MspInit
 4401              	.LVL356:
 4402 00c8 C6E7     		b	.L371
 4403              	.L382:
 466:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 4404              		.loc 1 466 0
 4405 00ca 2046     		mov	r0, r4
 4406 00cc FFF7FEFF 		bl	UART_AdvFeatureConfig
 4407              	.LVL357:
 4408 00d0 D1E7     		b	.L372
 4409              	.LVL358:
 4410              	.L373:
 4411              	.LCFI42:
 4412              		.cfi_def_cfa_offset 0
 4413              		.cfi_restore 3
 4414              		.cfi_restore 4
 4415              		.cfi_restore 5
 4416              		.cfi_restore 14
 425:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 4417              		.loc 1 425 0
 4418 00d2 0120     		movs	r0, #1
 4419              	.LVL359:
 486:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 4420              		.loc 1 486 0
 4421 00d4 7047     		bx	lr
 4422              	.LVL360:
 4423              	.L374:
 4424              	.LCFI43:
 4425              		.cfi_def_cfa_offset 16
 4426              		.cfi_offset 3, -16
 4427              		.cfi_offset 4, -12
 4428              		.cfi_offset 5, -8
 4429              		.cfi_offset 14, -4
 436:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 4430              		.loc 1 436 0
 4431 00d6 0120     		movs	r0, #1
 4432 00d8 00E0     		b	.L368
 4433              	.L375:
 441:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 4434              		.loc 1 441 0
 4435 00da 0120     		movs	r0, #1
ARM GAS  /tmp/cc8tmKB0.s 			page 136


 4436              	.LVL361:
 4437              	.L368:
 486:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 4438              		.loc 1 486 0
 4439 00dc 38BD     		pop	{r3, r4, r5, pc}
 4440              	.LVL362:
 4441              	.L384:
 4442 00de 00BF     		.align	2
 4443              	.L383:
 4444 00e0 00380140 		.word	1073821696
 4445 00e4 00000000 		.word	.LC0
 4446              		.cfi_endproc
 4447              	.LFE128:
 4449              		.section	.text.HAL_MultiProcessor_Init,"ax",%progbits
 4450              		.align	1
 4451              		.global	HAL_MultiProcessor_Init
 4452              		.syntax unified
 4453              		.thumb
 4454              		.thumb_func
 4455              		.fpu fpv4-sp-d16
 4457              	HAL_MultiProcessor_Init:
 4458              	.LFB129:
 508:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Check the UART handle allocation */
 4459              		.loc 1 508 0
 4460              		.cfi_startproc
 4461              		@ args = 0, pretend = 0, frame = 0
 4462              		@ frame_needed = 0, uses_anonymous_args = 0
 4463              	.LVL363:
 510:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 4464              		.loc 1 510 0
 4465 0000 0028     		cmp	r0, #0
 4466 0002 4ED0     		beq	.L391
 508:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Check the UART handle allocation */
 4467              		.loc 1 508 0
 4468 0004 70B5     		push	{r4, r5, r6, lr}
 4469              	.LCFI44:
 4470              		.cfi_def_cfa_offset 16
 4471              		.cfi_offset 4, -16
 4472              		.cfi_offset 5, -12
 4473              		.cfi_offset 6, -8
 4474              		.cfi_offset 14, -4
 4475 0006 0446     		mov	r4, r0
 4476 0008 1546     		mov	r5, r2
 4477 000a 0E46     		mov	r6, r1
 516:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 4478              		.loc 1 516 0
 4479 000c 12B1     		cbz	r2, .L387
 516:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 4480              		.loc 1 516 0 is_stmt 0 discriminator 1
 4481 000e B2F5006F 		cmp	r2, #2048
 4482 0012 2ED1     		bne	.L396
 4483              	.LVL364:
 4484              	.L387:
 518:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 4485              		.loc 1 518 0 is_stmt 1
 4486 0014 94F86930 		ldrb	r3, [r4, #105]	@ zero_extendqisi2
 4487 0018 002B     		cmp	r3, #0
ARM GAS  /tmp/cc8tmKB0.s 			page 137


 4488 001a 30D0     		beq	.L397
 4489              	.L388:
 527:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 4490              		.loc 1 527 0
 4491 001c 2423     		movs	r3, #36
 4492 001e 84F86930 		strb	r3, [r4, #105]
 530:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 4493              		.loc 1 530 0
 4494 0022 2268     		ldr	r2, [r4]
 4495 0024 1368     		ldr	r3, [r2]
 4496 0026 23F00103 		bic	r3, r3, #1
 4497 002a 1360     		str	r3, [r2]
 533:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 4498              		.loc 1 533 0
 4499 002c 2046     		mov	r0, r4
 4500 002e FFF7FEFF 		bl	UART_SetConfig
 4501              	.LVL365:
 4502 0032 0128     		cmp	r0, #1
 4503 0034 1CD0     		beq	.L386
 538:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 4504              		.loc 1 538 0
 4505 0036 636A     		ldr	r3, [r4, #36]
 4506 0038 3BBB     		cbnz	r3, .L398
 4507              	.L389:
 546:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL | USART_CR3_IREN));
 4508              		.loc 1 546 0
 4509 003a 2268     		ldr	r2, [r4]
 4510 003c 5368     		ldr	r3, [r2, #4]
 4511 003e 23F49043 		bic	r3, r3, #18432
 4512 0042 5360     		str	r3, [r2, #4]
 547:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 4513              		.loc 1 547 0
 4514 0044 2268     		ldr	r2, [r4]
 4515 0046 9368     		ldr	r3, [r2, #8]
 4516 0048 23F02A03 		bic	r3, r3, #42
 4517 004c 9360     		str	r3, [r2, #8]
 549:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 4518              		.loc 1 549 0
 4519 004e B5F5006F 		cmp	r5, #2048
 4520 0052 1ED0     		beq	.L399
 4521              	.L390:
 556:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 4522              		.loc 1 556 0
 4523 0054 2368     		ldr	r3, [r4]
 4524 0056 1A68     		ldr	r2, [r3]
 4525 0058 22F40062 		bic	r2, r2, #2048
 4526 005c 1543     		orrs	r5, r5, r2
 4527              	.LVL366:
 4528 005e 1D60     		str	r5, [r3]
 559:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 4529              		.loc 1 559 0
 4530 0060 2268     		ldr	r2, [r4]
 4531 0062 1368     		ldr	r3, [r2]
 4532 0064 43F00103 		orr	r3, r3, #1
 4533 0068 1360     		str	r3, [r2]
 562:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
 4534              		.loc 1 562 0
ARM GAS  /tmp/cc8tmKB0.s 			page 138


 4535 006a 2046     		mov	r0, r4
 4536 006c FFF7FEFF 		bl	UART_CheckIdleState
 4537              	.LVL367:
 4538              	.L386:
 563:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 4539              		.loc 1 563 0
 4540 0070 70BD     		pop	{r4, r5, r6, pc}
 4541              	.LVL368:
 4542              	.L396:
 516:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 4543              		.loc 1 516 0 discriminator 2
 4544 0072 4FF40171 		mov	r1, #516
 4545              	.LVL369:
 4546 0076 0C48     		ldr	r0, .L400
 4547              	.LVL370:
 4548 0078 FFF7FEFF 		bl	assert_failed
 4549              	.LVL371:
 4550 007c CAE7     		b	.L387
 4551              	.L397:
 521:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 4552              		.loc 1 521 0
 4553 007e 84F86830 		strb	r3, [r4, #104]
 524:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 4554              		.loc 1 524 0
 4555 0082 2046     		mov	r0, r4
 4556 0084 FFF7FEFF 		bl	HAL_UART_MspInit
 4557              	.LVL372:
 4558 0088 C8E7     		b	.L388
 4559              	.L398:
 540:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 4560              		.loc 1 540 0
 4561 008a 2046     		mov	r0, r4
 4562 008c FFF7FEFF 		bl	UART_AdvFeatureConfig
 4563              	.LVL373:
 4564 0090 D3E7     		b	.L389
 4565              	.L399:
 552:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 4566              		.loc 1 552 0
 4567 0092 2368     		ldr	r3, [r4]
 4568 0094 5968     		ldr	r1, [r3, #4]
 4569 0096 21F07F41 		bic	r1, r1, #-16777216
 4570 009a 41EA0666 		orr	r6, r1, r6, lsl #24
 4571 009e 5E60     		str	r6, [r3, #4]
 4572 00a0 D8E7     		b	.L390
 4573              	.LVL374:
 4574              	.L391:
 4575              	.LCFI45:
 4576              		.cfi_def_cfa_offset 0
 4577              		.cfi_restore 4
 4578              		.cfi_restore 5
 4579              		.cfi_restore 6
 4580              		.cfi_restore 14
 512:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 4581              		.loc 1 512 0
 4582 00a2 0120     		movs	r0, #1
 4583              	.LVL375:
 563:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
ARM GAS  /tmp/cc8tmKB0.s 			page 139


 4584              		.loc 1 563 0
 4585 00a4 7047     		bx	lr
 4586              	.L401:
 4587 00a6 00BF     		.align	2
 4588              	.L400:
 4589 00a8 00000000 		.word	.LC0
 4590              		.cfi_endproc
 4591              	.LFE129:
 4593              		.section	.text.HAL_MultiProcessor_EnableMuteMode,"ax",%progbits
 4594              		.align	1
 4595              		.global	HAL_MultiProcessor_EnableMuteMode
 4596              		.syntax unified
 4597              		.thumb
 4598              		.thumb_func
 4599              		.fpu fpv4-sp-d16
 4601              	HAL_MultiProcessor_EnableMuteMode:
 4602              	.LFB157:
1913:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Process Locked */
 4603              		.loc 1 1913 0
 4604              		.cfi_startproc
 4605              		@ args = 0, pretend = 0, frame = 0
 4606              		@ frame_needed = 0, uses_anonymous_args = 0
 4607              	.LVL376:
 4608 0000 08B5     		push	{r3, lr}
 4609              	.LCFI46:
 4610              		.cfi_def_cfa_offset 8
 4611              		.cfi_offset 3, -8
 4612              		.cfi_offset 14, -4
1915:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 4613              		.loc 1 1915 0
 4614 0002 90F86830 		ldrb	r3, [r0, #104]	@ zero_extendqisi2
 4615 0006 012B     		cmp	r3, #1
 4616 0008 10D0     		beq	.L404
1915:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 4617              		.loc 1 1915 0 is_stmt 0 discriminator 2
 4618 000a 0123     		movs	r3, #1
 4619 000c 80F86830 		strb	r3, [r0, #104]
1917:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 4620              		.loc 1 1917 0 is_stmt 1 discriminator 2
 4621 0010 2423     		movs	r3, #36
 4622 0012 80F86930 		strb	r3, [r0, #105]
1920:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 4623              		.loc 1 1920 0 discriminator 2
 4624 0016 0268     		ldr	r2, [r0]
 4625 0018 1368     		ldr	r3, [r2]
 4626 001a 43F40053 		orr	r3, r3, #8192
 4627 001e 1360     		str	r3, [r2]
1922:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 4628              		.loc 1 1922 0 discriminator 2
 4629 0020 2023     		movs	r3, #32
 4630 0022 80F86930 		strb	r3, [r0, #105]
1924:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
 4631              		.loc 1 1924 0 discriminator 2
 4632 0026 FFF7FEFF 		bl	UART_CheckIdleState
 4633              	.LVL377:
 4634              	.L403:
1925:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
ARM GAS  /tmp/cc8tmKB0.s 			page 140


 4635              		.loc 1 1925 0
 4636 002a 08BD     		pop	{r3, pc}
 4637              	.LVL378:
 4638              	.L404:
1915:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 4639              		.loc 1 1915 0
 4640 002c 0220     		movs	r0, #2
 4641              	.LVL379:
 4642 002e FCE7     		b	.L403
 4643              		.cfi_endproc
 4644              	.LFE157:
 4646              		.section	.text.HAL_MultiProcessor_DisableMuteMode,"ax",%progbits
 4647              		.align	1
 4648              		.global	HAL_MultiProcessor_DisableMuteMode
 4649              		.syntax unified
 4650              		.thumb
 4651              		.thumb_func
 4652              		.fpu fpv4-sp-d16
 4654              	HAL_MultiProcessor_DisableMuteMode:
 4655              	.LFB158:
1934:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Process Locked */
 4656              		.loc 1 1934 0
 4657              		.cfi_startproc
 4658              		@ args = 0, pretend = 0, frame = 0
 4659              		@ frame_needed = 0, uses_anonymous_args = 0
 4660              	.LVL380:
 4661 0000 08B5     		push	{r3, lr}
 4662              	.LCFI47:
 4663              		.cfi_def_cfa_offset 8
 4664              		.cfi_offset 3, -8
 4665              		.cfi_offset 14, -4
1936:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 4666              		.loc 1 1936 0
 4667 0002 90F86830 		ldrb	r3, [r0, #104]	@ zero_extendqisi2
 4668 0006 012B     		cmp	r3, #1
 4669 0008 10D0     		beq	.L408
1936:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 4670              		.loc 1 1936 0 is_stmt 0 discriminator 2
 4671 000a 0123     		movs	r3, #1
 4672 000c 80F86830 		strb	r3, [r0, #104]
1938:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 4673              		.loc 1 1938 0 is_stmt 1 discriminator 2
 4674 0010 2423     		movs	r3, #36
 4675 0012 80F86930 		strb	r3, [r0, #105]
1941:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 4676              		.loc 1 1941 0 discriminator 2
 4677 0016 0268     		ldr	r2, [r0]
 4678 0018 1368     		ldr	r3, [r2]
 4679 001a 23F40053 		bic	r3, r3, #8192
 4680 001e 1360     		str	r3, [r2]
1943:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 4681              		.loc 1 1943 0 discriminator 2
 4682 0020 2023     		movs	r3, #32
 4683 0022 80F86930 		strb	r3, [r0, #105]
1945:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
 4684              		.loc 1 1945 0 discriminator 2
 4685 0026 FFF7FEFF 		bl	UART_CheckIdleState
ARM GAS  /tmp/cc8tmKB0.s 			page 141


 4686              	.LVL381:
 4687              	.L407:
1946:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 4688              		.loc 1 1946 0
 4689 002a 08BD     		pop	{r3, pc}
 4690              	.LVL382:
 4691              	.L408:
1936:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 4692              		.loc 1 1936 0
 4693 002c 0220     		movs	r0, #2
 4694              	.LVL383:
 4695 002e FCE7     		b	.L407
 4696              		.cfi_endproc
 4697              	.LFE158:
 4699              		.section	.text.UART_Transmit_IT,"ax",%progbits
 4700              		.align	1
 4701              		.global	UART_Transmit_IT
 4702              		.syntax unified
 4703              		.thumb
 4704              		.thumb_func
 4705              		.fpu fpv4-sp-d16
 4707              	UART_Transmit_IT:
 4708              	.LFB181:
2643:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2644:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
2645:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief  Send an amount of data in interrupt mode.
2646:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @note   Function is called under interruption only, once
2647:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *         interruptions have been enabled by HAL_UART_Transmit_IT().
2648:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param  huart UART handle.
2649:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval HAL status
2650:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
2651:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** HAL_StatusTypeDef UART_Transmit_IT(UART_HandleTypeDef *huart)
2652:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
 4709              		.loc 1 2652 0
 4710              		.cfi_startproc
 4711              		@ args = 0, pretend = 0, frame = 0
 4712              		@ frame_needed = 0, uses_anonymous_args = 0
 4713              		@ link register save eliminated.
 4714              	.LVL384:
2653:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   uint16_t* tmp;
2654:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2655:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Check that a Tx process is ongoing */
2656:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_BUSY_TX)
 4715              		.loc 1 2656 0
 4716 0000 90F86930 		ldrb	r3, [r0, #105]	@ zero_extendqisi2
 4717 0004 DBB2     		uxtb	r3, r3
 4718 0006 212B     		cmp	r3, #33
 4719 0008 2ED1     		bne	.L415
2657:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
2658:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     if(huart->TxXferCount == 0U)
 4720              		.loc 1 2658 0
 4721 000a B0F85230 		ldrh	r3, [r0, #82]
 4722 000e 9BB2     		uxth	r3, r3
 4723 0010 8BB1     		cbz	r3, .L416
2659:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
2660:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       /* Disable the UART Transmit Data Register Empty Interrupt */
2661:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       CLEAR_BIT(huart->Instance->CR1, USART_CR1_TXEIE);
ARM GAS  /tmp/cc8tmKB0.s 			page 142


2662:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2663:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       /* Enable the UART Transmit Complete Interrupt */
2664:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       SET_BIT(huart->Instance->CR1, USART_CR1_TCIE);
2665:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2666:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       return HAL_OK;
2667:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
2668:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     else
2669:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
2670:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE
 4724              		.loc 1 2670 0
 4725 0012 8368     		ldr	r3, [r0, #8]
 4726 0014 B3F5805F 		cmp	r3, #4096
 4727 0018 19D0     		beq	.L417
 4728              	.L413:
2671:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       {
2672:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         tmp = (uint16_t*) huart->pTxBuffPtr;
2673:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         huart->Instance->TDR = (*tmp & (uint16_t)0x01FFU);
2674:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         huart->pTxBuffPtr += 2U;
2675:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       }
2676:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       else
2677:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       {
2678:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         huart->Instance->TDR = (uint8_t)(*huart->pTxBuffPtr++ & (uint8_t)0xFFU);
 4729              		.loc 1 2678 0
 4730 001a C36C     		ldr	r3, [r0, #76]
 4731 001c 5A1C     		adds	r2, r3, #1
 4732 001e C264     		str	r2, [r0, #76]
 4733 0020 0268     		ldr	r2, [r0]
 4734 0022 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4735 0024 1385     		strh	r3, [r2, #40]	@ movhi
 4736              	.L414:
2679:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       }
2680:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       huart->TxXferCount--;
 4737              		.loc 1 2680 0
 4738 0026 B0F85230 		ldrh	r3, [r0, #82]
 4739 002a 013B     		subs	r3, r3, #1
 4740 002c 9BB2     		uxth	r3, r3
 4741 002e A0F85230 		strh	r3, [r0, #82]	@ movhi
2681:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2682:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       return HAL_OK;
 4742              		.loc 1 2682 0
 4743 0032 0020     		movs	r0, #0
 4744              	.LVL385:
 4745 0034 7047     		bx	lr
 4746              	.LVL386:
 4747              	.L416:
2661:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 4748              		.loc 1 2661 0
 4749 0036 0268     		ldr	r2, [r0]
 4750 0038 1368     		ldr	r3, [r2]
 4751 003a 23F08003 		bic	r3, r3, #128
 4752 003e 1360     		str	r3, [r2]
2664:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 4753              		.loc 1 2664 0
 4754 0040 0268     		ldr	r2, [r0]
 4755 0042 1368     		ldr	r3, [r2]
 4756 0044 43F04003 		orr	r3, r3, #64
 4757 0048 1360     		str	r3, [r2]
ARM GAS  /tmp/cc8tmKB0.s 			page 143


2666:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
 4758              		.loc 1 2666 0
 4759 004a 0020     		movs	r0, #0
 4760              	.LVL387:
 4761 004c 7047     		bx	lr
 4762              	.LVL388:
 4763              	.L417:
2670:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       {
 4764              		.loc 1 2670 0 discriminator 1
 4765 004e 0369     		ldr	r3, [r0, #16]
 4766 0050 002B     		cmp	r3, #0
 4767 0052 E2D1     		bne	.L413
2672:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         huart->Instance->TDR = (*tmp & (uint16_t)0x01FFU);
 4768              		.loc 1 2672 0
 4769 0054 C36C     		ldr	r3, [r0, #76]
 4770              	.LVL389:
2673:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         huart->pTxBuffPtr += 2U;
 4771              		.loc 1 2673 0
 4772 0056 0268     		ldr	r2, [r0]
 4773 0058 1B88     		ldrh	r3, [r3]
 4774              	.LVL390:
 4775 005a C3F30803 		ubfx	r3, r3, #0, #9
 4776 005e 1385     		strh	r3, [r2, #40]	@ movhi
 4777              	.LVL391:
2674:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       }
 4778              		.loc 1 2674 0
 4779 0060 C36C     		ldr	r3, [r0, #76]
 4780 0062 0233     		adds	r3, r3, #2
 4781 0064 C364     		str	r3, [r0, #76]
 4782 0066 DEE7     		b	.L414
 4783              	.L415:
2683:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
2684:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
2685:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   else
2686:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
2687:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     return HAL_BUSY;
 4784              		.loc 1 2687 0
 4785 0068 0220     		movs	r0, #2
 4786              	.LVL392:
2688:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
2689:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
 4787              		.loc 1 2689 0
 4788 006a 7047     		bx	lr
 4789              		.cfi_endproc
 4790              	.LFE181:
 4792              		.section	.text.UART_EndTransmit_IT,"ax",%progbits
 4793              		.align	1
 4794              		.global	UART_EndTransmit_IT
 4795              		.syntax unified
 4796              		.thumb
 4797              		.thumb_func
 4798              		.fpu fpv4-sp-d16
 4800              	UART_EndTransmit_IT:
 4801              	.LFB182:
2690:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2691:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
2692:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief  Wrap up transmission in non-blocking mode.
ARM GAS  /tmp/cc8tmKB0.s 			page 144


2693:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param  huart pointer to a UART_HandleTypeDef structure that contains
2694:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *               the configuration information for the specified UART module.
2695:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval HAL status
2696:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
2697:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** HAL_StatusTypeDef UART_EndTransmit_IT(UART_HandleTypeDef *huart)
2698:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
 4802              		.loc 1 2698 0
 4803              		.cfi_startproc
 4804              		@ args = 0, pretend = 0, frame = 0
 4805              		@ frame_needed = 0, uses_anonymous_args = 0
 4806              	.LVL393:
 4807 0000 08B5     		push	{r3, lr}
 4808              	.LCFI48:
 4809              		.cfi_def_cfa_offset 8
 4810              		.cfi_offset 3, -8
 4811              		.cfi_offset 14, -4
2699:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Disable the UART Transmit Complete Interrupt */
2700:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, USART_CR1_TCIE);
 4812              		.loc 1 2700 0
 4813 0002 0168     		ldr	r1, [r0]
 4814 0004 0B68     		ldr	r3, [r1]
 4815 0006 23F04003 		bic	r3, r3, #64
 4816 000a 0B60     		str	r3, [r1]
2701:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2702:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Tx process is ended, restore huart->gState to Ready */
2703:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
 4817              		.loc 1 2703 0
 4818 000c 2023     		movs	r3, #32
 4819 000e 80F86930 		strb	r3, [r0, #105]
2704:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2705:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   HAL_UART_TxCpltCallback(huart);
 4820              		.loc 1 2705 0
 4821 0012 FFF7FEFF 		bl	HAL_UART_TxCpltCallback
 4822              	.LVL394:
2706:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2707:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   return HAL_OK;
2708:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
 4823              		.loc 1 2708 0
 4824 0016 0020     		movs	r0, #0
 4825 0018 08BD     		pop	{r3, pc}
 4826              		.cfi_endproc
 4827              	.LFE182:
 4829              		.section	.text.UART_Receive_IT,"ax",%progbits
 4830              		.align	1
 4831              		.global	UART_Receive_IT
 4832              		.syntax unified
 4833              		.thumb
 4834              		.thumb_func
 4835              		.fpu fpv4-sp-d16
 4837              	UART_Receive_IT:
 4838              	.LFB183:
2709:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2710:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
2711:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief  Receive an amount of data in interrupt mode.
2712:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @note   Function is called under interruption only, once
2713:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *         interruptions have been enabled by HAL_UART_Receive_IT()
2714:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param  huart UART handle.
ARM GAS  /tmp/cc8tmKB0.s 			page 145


2715:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval HAL status
2716:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
2717:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** HAL_StatusTypeDef UART_Receive_IT(UART_HandleTypeDef *huart)
2718:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
 4839              		.loc 1 2718 0
 4840              		.cfi_startproc
 4841              		@ args = 0, pretend = 0, frame = 0
 4842              		@ frame_needed = 0, uses_anonymous_args = 0
 4843              	.LVL395:
2719:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   uint16_t* tmp;
2720:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   uint16_t  uhMask = huart->Mask;
 4844              		.loc 1 2720 0
 4845 0000 B0F85C20 		ldrh	r2, [r0, #92]
 4846              	.LVL396:
2721:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   uint16_t  uhdata;
2722:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2723:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Check that a Rx process is ongoing */
2724:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if(huart->RxState == HAL_UART_STATE_BUSY_RX)
 4847              		.loc 1 2724 0
 4848 0004 90F86A30 		ldrb	r3, [r0, #106]	@ zero_extendqisi2
 4849 0008 DBB2     		uxtb	r3, r3
 4850 000a 222B     		cmp	r3, #34
 4851 000c 31D1     		bne	.L421
2718:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   uint16_t* tmp;
 4852              		.loc 1 2718 0
 4853 000e 10B5     		push	{r4, lr}
 4854              	.LCFI49:
 4855              		.cfi_def_cfa_offset 8
 4856              		.cfi_offset 4, -8
 4857              		.cfi_offset 14, -4
2725:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
2726:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     uhdata = (uint16_t) READ_REG(huart->Instance->RDR);
 4858              		.loc 1 2726 0
 4859 0010 0368     		ldr	r3, [r0]
 4860 0012 9B8C     		ldrh	r3, [r3, #36]
 4861 0014 9BB2     		uxth	r3, r3
 4862              	.LVL397:
2727:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
 4863              		.loc 1 2727 0
 4864 0016 8168     		ldr	r1, [r0, #8]
 4865 0018 B1F5805F 		cmp	r1, #4096
 4866 001c 0ED0     		beq	.L430
 4867              	.L422:
2728:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
2729:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       tmp = (uint16_t*) huart->pRxBuffPtr ;
2730:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       *tmp = (uint16_t)(uhdata & uhMask);
2731:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       huart->pRxBuffPtr +=2U;
2732:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
2733:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     else
2734:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
2735:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       *huart->pRxBuffPtr++ = (uint8_t)(uhdata & (uint8_t)uhMask);
 4868              		.loc 1 2735 0
 4869 001e D2B2     		uxtb	r2, r2
 4870              	.LVL398:
 4871 0020 416D     		ldr	r1, [r0, #84]
 4872 0022 4C1C     		adds	r4, r1, #1
 4873 0024 4465     		str	r4, [r0, #84]
ARM GAS  /tmp/cc8tmKB0.s 			page 146


 4874 0026 1A40     		ands	r2, r2, r3
 4875 0028 0A70     		strb	r2, [r1]
 4876              	.LVL399:
 4877              	.L423:
2736:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
2737:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2738:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     if(--huart->RxXferCount == 0U)
 4878              		.loc 1 2738 0
 4879 002a B0F85A30 		ldrh	r3, [r0, #90]
 4880 002e 013B     		subs	r3, r3, #1
 4881 0030 9BB2     		uxth	r3, r3
 4882 0032 A0F85A30 		strh	r3, [r0, #90]	@ movhi
 4883 0036 5BB1     		cbz	r3, .L431
2739:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
2740:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       /* Disable the UART Parity Error Interrupt and RXNE interrupt*/
2741:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE));
2742:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2743:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       /* Disable the UART Error Interrupt: (Frame error, noise error, overrun error) */
2744:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
2745:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2746:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       /* Rx process is completed, restore huart->RxState to Ready */
2747:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       huart->RxState = HAL_UART_STATE_READY;
2748:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2749:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       HAL_UART_RxCpltCallback(huart);
2750:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2751:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       return HAL_OK;
2752:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
2753:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2754:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     return HAL_OK;
 4884              		.loc 1 2754 0
 4885 0038 0020     		movs	r0, #0
 4886              	.LVL400:
 4887              	.L424:
2755:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
2756:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   else
2757:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
2758:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Clear RXNE interrupt flag */
2759:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     __HAL_UART_SEND_REQ(huart, UART_RXDATA_FLUSH_REQUEST);
2760:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2761:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     return HAL_BUSY;
2762:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
2763:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
 4888              		.loc 1 2763 0
 4889 003a 10BD     		pop	{r4, pc}
 4890              	.LVL401:
 4891              	.L430:
2727:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 4892              		.loc 1 2727 0 discriminator 1
 4893 003c 0169     		ldr	r1, [r0, #16]
 4894 003e 0029     		cmp	r1, #0
 4895 0040 EDD1     		bne	.L422
2729:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       *tmp = (uint16_t)(uhdata & uhMask);
 4896              		.loc 1 2729 0
 4897 0042 416D     		ldr	r1, [r0, #84]
 4898              	.LVL402:
2730:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       huart->pRxBuffPtr +=2U;
 4899              		.loc 1 2730 0
ARM GAS  /tmp/cc8tmKB0.s 			page 147


 4900 0044 1A40     		ands	r2, r2, r3
 4901              	.LVL403:
 4902 0046 0A80     		strh	r2, [r1]	@ movhi
 4903              	.LVL404:
2731:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
 4904              		.loc 1 2731 0
 4905 0048 436D     		ldr	r3, [r0, #84]
 4906              	.LVL405:
 4907 004a 0233     		adds	r3, r3, #2
 4908 004c 4365     		str	r3, [r0, #84]
 4909 004e ECE7     		b	.L423
 4910              	.LVL406:
 4911              	.L431:
2741:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 4912              		.loc 1 2741 0
 4913 0050 0268     		ldr	r2, [r0]
 4914 0052 1368     		ldr	r3, [r2]
 4915 0054 23F49073 		bic	r3, r3, #288
 4916 0058 1360     		str	r3, [r2]
2744:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 4917              		.loc 1 2744 0
 4918 005a 0268     		ldr	r2, [r0]
 4919 005c 9368     		ldr	r3, [r2, #8]
 4920 005e 23F00103 		bic	r3, r3, #1
 4921 0062 9360     		str	r3, [r2, #8]
2747:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 4922              		.loc 1 2747 0
 4923 0064 2023     		movs	r3, #32
 4924 0066 80F86A30 		strb	r3, [r0, #106]
2749:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 4925              		.loc 1 2749 0
 4926 006a FFF7FEFF 		bl	HAL_UART_RxCpltCallback
 4927              	.LVL407:
2751:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
 4928              		.loc 1 2751 0
 4929 006e 0020     		movs	r0, #0
 4930 0070 E3E7     		b	.L424
 4931              	.LVL408:
 4932              	.L421:
 4933              	.LCFI50:
 4934              		.cfi_def_cfa_offset 0
 4935              		.cfi_restore 4
 4936              		.cfi_restore 14
2759:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 4937              		.loc 1 2759 0
 4938 0072 0268     		ldr	r2, [r0]
 4939              	.LVL409:
 4940 0074 9369     		ldr	r3, [r2, #24]
 4941 0076 43F00803 		orr	r3, r3, #8
 4942 007a 9361     		str	r3, [r2, #24]
 4943              	.LVL410:
2761:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 4944              		.loc 1 2761 0
 4945 007c 0220     		movs	r0, #2
 4946              	.LVL411:
 4947              		.loc 1 2763 0
 4948 007e 7047     		bx	lr
ARM GAS  /tmp/cc8tmKB0.s 			page 148


 4949              		.cfi_endproc
 4950              	.LFE183:
 4952              		.section	.text.HAL_UART_IRQHandler,"ax",%progbits
 4953              		.align	1
 4954              		.global	HAL_UART_IRQHandler
 4955              		.syntax unified
 4956              		.thumb
 4957              		.thumb_func
 4958              		.fpu fpv4-sp-d16
 4960              	HAL_UART_IRQHandler:
 4961              	.LFB148:
1617:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   uint32_t isrflags   = READ_REG(huart->Instance->ISR);
 4962              		.loc 1 1617 0
 4963              		.cfi_startproc
 4964              		@ args = 0, pretend = 0, frame = 0
 4965              		@ frame_needed = 0, uses_anonymous_args = 0
 4966              	.LVL412:
 4967 0000 38B5     		push	{r3, r4, r5, lr}
 4968              	.LCFI51:
 4969              		.cfi_def_cfa_offset 16
 4970              		.cfi_offset 3, -16
 4971              		.cfi_offset 4, -12
 4972              		.cfi_offset 5, -8
 4973              		.cfi_offset 14, -4
 4974 0002 0446     		mov	r4, r0
1618:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   uint32_t cr1its     = READ_REG(huart->Instance->CR1);
 4975              		.loc 1 1618 0
 4976 0004 0268     		ldr	r2, [r0]
 4977 0006 D369     		ldr	r3, [r2, #28]
 4978              	.LVL413:
1619:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   uint32_t cr3its;
 4979              		.loc 1 1619 0
 4980 0008 1168     		ldr	r1, [r2]
 4981              	.LVL414:
1625:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 4982              		.loc 1 1625 0
 4983 000a 13F00F05 		ands	r5, r3, #15
 4984              	.LVL415:
 4985 000e 05D1     		bne	.L433
1628:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 4986              		.loc 1 1628 0
 4987 0010 13F0200F 		tst	r3, #32
 4988 0014 02D0     		beq	.L433
1628:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 4989              		.loc 1 1628 0 is_stmt 0 discriminator 1
 4990 0016 11F0200F 		tst	r1, #32
 4991 001a 60D1     		bne	.L450
 4992              	.L433:
1636:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if(   (errorflags != RESET)
 4993              		.loc 1 1636 0 is_stmt 1
 4994 001c 9068     		ldr	r0, [r2, #8]
 4995              	.LVL416:
1637:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****      && (   ((cr3its & USART_CR3_EIE) != RESET)
 4996              		.loc 1 1637 0
 4997 001e 002D     		cmp	r5, #0
 4998 0020 72D0     		beq	.L435
1638:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****          || ((cr1its & (USART_CR1_RXNEIE | USART_CR1_PEIE)) != RESET)) )
ARM GAS  /tmp/cc8tmKB0.s 			page 149


 4999              		.loc 1 1638 0
 5000 0022 10F00105 		ands	r5, r0, #1
 5001              	.LVL417:
 5002 0026 02D1     		bne	.L436
1639:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 5003              		.loc 1 1639 0
 5004 0028 11F4907F 		tst	r1, #288
 5005 002c 6CD0     		beq	.L435
 5006              	.L436:
1642:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 5007              		.loc 1 1642 0
 5008 002e 13F0010F 		tst	r3, #1
 5009 0032 07D0     		beq	.L437
1642:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 5010              		.loc 1 1642 0 is_stmt 0 discriminator 1
 5011 0034 11F4807F 		tst	r1, #256
 5012 0038 04D0     		beq	.L437
1644:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 5013              		.loc 1 1644 0 is_stmt 1
 5014 003a 0120     		movs	r0, #1
 5015              	.LVL418:
 5016 003c 1062     		str	r0, [r2, #32]
1646:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
 5017              		.loc 1 1646 0
 5018 003e E26E     		ldr	r2, [r4, #108]
 5019 0040 0243     		orrs	r2, r2, r0
 5020 0042 E266     		str	r2, [r4, #108]
 5021              	.L437:
1650:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 5022              		.loc 1 1650 0
 5023 0044 13F0020F 		tst	r3, #2
 5024 0048 07D0     		beq	.L438
1650:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 5025              		.loc 1 1650 0 is_stmt 0 discriminator 1
 5026 004a 35B1     		cbz	r5, .L438
1652:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 5027              		.loc 1 1652 0 is_stmt 1
 5028 004c 2268     		ldr	r2, [r4]
 5029 004e 0220     		movs	r0, #2
 5030 0050 1062     		str	r0, [r2, #32]
1654:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
 5031              		.loc 1 1654 0
 5032 0052 E26E     		ldr	r2, [r4, #108]
 5033 0054 42F00402 		orr	r2, r2, #4
 5034 0058 E266     		str	r2, [r4, #108]
 5035              	.L438:
1658:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 5036              		.loc 1 1658 0
 5037 005a 13F0040F 		tst	r3, #4
 5038 005e 07D0     		beq	.L439
1658:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 5039              		.loc 1 1658 0 is_stmt 0 discriminator 1
 5040 0060 35B1     		cbz	r5, .L439
1660:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 5041              		.loc 1 1660 0 is_stmt 1
 5042 0062 2268     		ldr	r2, [r4]
 5043 0064 0420     		movs	r0, #4
ARM GAS  /tmp/cc8tmKB0.s 			page 150


 5044 0066 1062     		str	r0, [r2, #32]
1662:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
 5045              		.loc 1 1662 0
 5046 0068 E26E     		ldr	r2, [r4, #108]
 5047 006a 42F00202 		orr	r2, r2, #2
 5048 006e E266     		str	r2, [r4, #108]
 5049              	.L439:
1666:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****        (((cr1its & USART_CR1_RXNEIE) != RESET) || ((cr3its & USART_CR3_EIE) != RESET)))
 5050              		.loc 1 1666 0
 5051 0070 13F0080F 		tst	r3, #8
 5052 0074 09D0     		beq	.L440
1666:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****        (((cr1its & USART_CR1_RXNEIE) != RESET) || ((cr3its & USART_CR3_EIE) != RESET)))
 5053              		.loc 1 1666 0 is_stmt 0 discriminator 1
 5054 0076 11F0200F 		tst	r1, #32
 5055 007a 00D1     		bne	.L441
1667:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 5056              		.loc 1 1667 0 is_stmt 1
 5057 007c 2DB1     		cbz	r5, .L440
 5058              	.L441:
1669:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 5059              		.loc 1 1669 0
 5060 007e 2268     		ldr	r2, [r4]
 5061 0080 0820     		movs	r0, #8
 5062 0082 1062     		str	r0, [r2, #32]
1671:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
 5063              		.loc 1 1671 0
 5064 0084 E26E     		ldr	r2, [r4, #108]
 5065 0086 0243     		orrs	r2, r2, r0
 5066 0088 E266     		str	r2, [r4, #108]
 5067              	.L440:
1675:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 5068              		.loc 1 1675 0
 5069 008a E26E     		ldr	r2, [r4, #108]
 5070 008c 002A     		cmp	r2, #0
 5071 008e 4DD0     		beq	.L432
1678:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       {
 5072              		.loc 1 1678 0
 5073 0090 13F0200F 		tst	r3, #32
 5074 0094 02D0     		beq	.L442
1678:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       {
 5075              		.loc 1 1678 0 is_stmt 0 discriminator 1
 5076 0096 11F0200F 		tst	r1, #32
 5077 009a 23D1     		bne	.L451
 5078              	.LVL419:
 5079              	.L442:
1685:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****           (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR)))
 5080              		.loc 1 1685 0 is_stmt 1
 5081 009c E36E     		ldr	r3, [r4, #108]
 5082 009e 13F0080F 		tst	r3, #8
 5083 00a2 04D1     		bne	.L443
1686:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       {  
 5084              		.loc 1 1686 0 discriminator 1
 5085 00a4 2368     		ldr	r3, [r4]
 5086 00a6 9B68     		ldr	r3, [r3, #8]
1685:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****           (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR)))
 5087              		.loc 1 1685 0 discriminator 1
 5088 00a8 13F0400F 		tst	r3, #64
ARM GAS  /tmp/cc8tmKB0.s 			page 151


 5089 00ac 26D0     		beq	.L444
 5090              	.L443:
1691:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 5091              		.loc 1 1691 0
 5092 00ae 2046     		mov	r0, r4
 5093 00b0 FFF7FEFF 		bl	UART_EndRxTransfer
 5094              	.LVL420:
1694:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         {
 5095              		.loc 1 1694 0
 5096 00b4 2368     		ldr	r3, [r4]
 5097 00b6 9A68     		ldr	r2, [r3, #8]
 5098 00b8 12F0400F 		tst	r2, #64
 5099 00bc 1AD0     		beq	.L445
1696:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 5100              		.loc 1 1696 0
 5101 00be 9A68     		ldr	r2, [r3, #8]
 5102 00c0 22F04002 		bic	r2, r2, #64
 5103 00c4 9A60     		str	r2, [r3, #8]
1699:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****           {
 5104              		.loc 1 1699 0
 5105 00c6 636E     		ldr	r3, [r4, #100]
 5106 00c8 83B1     		cbz	r3, .L446
1703:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 5107              		.loc 1 1703 0
 5108 00ca 234A     		ldr	r2, .L455
 5109 00cc 5A63     		str	r2, [r3, #52]
1706:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****             {
 5110              		.loc 1 1706 0
 5111 00ce 606E     		ldr	r0, [r4, #100]
 5112 00d0 FFF7FEFF 		bl	HAL_DMA_Abort_IT
 5113              	.LVL421:
 5114 00d4 50B3     		cbz	r0, .L432
1709:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****             }
 5115              		.loc 1 1709 0
 5116 00d6 606E     		ldr	r0, [r4, #100]
 5117 00d8 436B     		ldr	r3, [r0, #52]
 5118 00da 9847     		blx	r3
 5119              	.LVL422:
 5120 00dc 26E0     		b	.L432
 5121              	.LVL423:
 5122              	.L450:
1630:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       return;
 5123              		.loc 1 1630 0
 5124 00de FFF7FEFF 		bl	UART_Receive_IT
 5125              	.LVL424:
1631:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
 5126              		.loc 1 1631 0
 5127 00e2 23E0     		b	.L432
 5128              	.LVL425:
 5129              	.L451:
1680:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       }
 5130              		.loc 1 1680 0
 5131 00e4 2046     		mov	r0, r4
 5132 00e6 FFF7FEFF 		bl	UART_Receive_IT
 5133              	.LVL426:
 5134 00ea D7E7     		b	.L442
 5135              	.L446:
ARM GAS  /tmp/cc8tmKB0.s 			page 152


1715:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****           }
 5136              		.loc 1 1715 0
 5137 00ec 2046     		mov	r0, r4
 5138 00ee FFF7FEFF 		bl	HAL_UART_ErrorCallback
 5139              	.LVL427:
 5140 00f2 1BE0     		b	.L432
 5141              	.L445:
1721:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         }
 5142              		.loc 1 1721 0
 5143 00f4 2046     		mov	r0, r4
 5144 00f6 FFF7FEFF 		bl	HAL_UART_ErrorCallback
 5145              	.LVL428:
 5146 00fa 17E0     		b	.L432
 5147              	.L444:
1728:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         huart->ErrorCode = HAL_UART_ERROR_NONE;
 5148              		.loc 1 1728 0
 5149 00fc 2046     		mov	r0, r4
 5150 00fe FFF7FEFF 		bl	HAL_UART_ErrorCallback
 5151              	.LVL429:
1729:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       }
 5152              		.loc 1 1729 0
 5153 0102 0023     		movs	r3, #0
 5154 0104 E366     		str	r3, [r4, #108]
 5155 0106 11E0     		b	.L432
 5156              	.LVL430:
 5157              	.L435:
1737:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 5158              		.loc 1 1737 0
 5159 0108 13F4801F 		tst	r3, #1048576
 5160 010c 02D0     		beq	.L447
1737:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 5161              		.loc 1 1737 0 is_stmt 0 discriminator 1
 5162 010e 10F4800F 		tst	r0, #4194304
 5163 0112 0CD1     		bne	.L452
 5164              	.L447:
1748:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 5165              		.loc 1 1748 0 is_stmt 1
 5166 0114 13F0800F 		tst	r3, #128
 5167 0118 02D0     		beq	.L448
1748:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 5168              		.loc 1 1748 0 is_stmt 0 discriminator 1
 5169 011a 11F0800F 		tst	r1, #128
 5170 011e 12D1     		bne	.L453
 5171              	.L448:
1755:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 5172              		.loc 1 1755 0 is_stmt 1
 5173 0120 13F0400F 		tst	r3, #64
 5174 0124 02D0     		beq	.L432
1755:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 5175              		.loc 1 1755 0 is_stmt 0 discriminator 1
 5176 0126 11F0400F 		tst	r1, #64
 5177 012a 10D1     		bne	.L454
 5178              	.LVL431:
 5179              	.L432:
1761:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 5180              		.loc 1 1761 0 is_stmt 1
 5181 012c 38BD     		pop	{r3, r4, r5, pc}
ARM GAS  /tmp/cc8tmKB0.s 			page 153


 5182              	.LVL432:
 5183              	.L452:
1739:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Set the UART state ready to be able to start again the process */
 5184              		.loc 1 1739 0
 5185 012e 4FF48013 		mov	r3, #1048576
 5186              	.LVL433:
 5187 0132 1362     		str	r3, [r2, #32]
1741:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_READY;
 5188              		.loc 1 1741 0
 5189 0134 2023     		movs	r3, #32
 5190 0136 84F86930 		strb	r3, [r4, #105]
1742:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     HAL_UARTEx_WakeupCallback(huart);
 5191              		.loc 1 1742 0
 5192 013a 84F86A30 		strb	r3, [r4, #106]
1743:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     return;
 5193              		.loc 1 1743 0
 5194 013e 2046     		mov	r0, r4
 5195              	.LVL434:
 5196 0140 FFF7FEFF 		bl	HAL_UARTEx_WakeupCallback
 5197              	.LVL435:
1744:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 5198              		.loc 1 1744 0
 5199 0144 F2E7     		b	.L432
 5200              	.LVL436:
 5201              	.L453:
1750:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     return;
 5202              		.loc 1 1750 0
 5203 0146 2046     		mov	r0, r4
 5204              	.LVL437:
 5205 0148 FFF7FEFF 		bl	UART_Transmit_IT
 5206              	.LVL438:
1751:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 5207              		.loc 1 1751 0
 5208 014c EEE7     		b	.L432
 5209              	.LVL439:
 5210              	.L454:
1757:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     return;
 5211              		.loc 1 1757 0
 5212 014e 2046     		mov	r0, r4
 5213              	.LVL440:
 5214 0150 FFF7FEFF 		bl	UART_EndTransmit_IT
 5215              	.LVL441:
1758:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 5216              		.loc 1 1758 0
 5217 0154 EAE7     		b	.L432
 5218              	.L456:
 5219 0156 00BF     		.align	2
 5220              	.L455:
 5221 0158 00000000 		.word	UART_DMAAbortOnError
 5222              		.cfi_endproc
 5223              	.LFE148:
 5225              		.section	.text.UART_Wakeup_AddressConfig,"ax",%progbits
 5226              		.align	1
 5227              		.global	UART_Wakeup_AddressConfig
 5228              		.syntax unified
 5229              		.thumb
 5230              		.thumb_func
ARM GAS  /tmp/cc8tmKB0.s 			page 154


 5231              		.fpu fpv4-sp-d16
 5233              	UART_Wakeup_AddressConfig:
 5234              	.LFB184:
2764:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2765:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
2766:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief Initialize the UART wake-up from stop mode parameters when triggered by address detectio
2767:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param huart UART handle.
2768:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param WakeUpSelection UART wake up from stop mode parameters.
2769:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval None
2770:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
2771:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** void UART_Wakeup_AddressConfig(UART_HandleTypeDef *huart, UART_WakeUpTypeDef WakeUpSelection)
2772:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
 5235              		.loc 1 2772 0
 5236              		.cfi_startproc
 5237              		@ args = 0, pretend = 0, frame = 8
 5238              		@ frame_needed = 0, uses_anonymous_args = 0
 5239              	.LVL442:
 5240 0000 30B5     		push	{r4, r5, lr}
 5241              	.LCFI52:
 5242              		.cfi_def_cfa_offset 12
 5243              		.cfi_offset 4, -12
 5244              		.cfi_offset 5, -8
 5245              		.cfi_offset 14, -4
 5246 0002 83B0     		sub	sp, sp, #12
 5247              	.LCFI53:
 5248              		.cfi_def_cfa_offset 24
 5249 0004 0546     		mov	r5, r0
 5250 0006 02AB     		add	r3, sp, #8
 5251 0008 03E90600 		stmdb	r3, {r1, r2}
2773:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   assert_param(IS_UART_ADDRESSLENGTH_DETECT(WakeUpSelection.AddressLength));
 5252              		.loc 1 2773 0
 5253 000c BDF80440 		ldrh	r4, [sp, #4]
 5254 0010 34B1     		cbz	r4, .L458
 5255              		.loc 1 2773 0 is_stmt 0 discriminator 1
 5256 0012 102C     		cmp	r4, #16
 5257 0014 04D0     		beq	.L458
 5258              		.loc 1 2773 0 discriminator 2
 5259 0016 40F6D521 		movw	r1, #2773
 5260 001a 0A48     		ldr	r0, .L460
 5261              	.LVL443:
 5262 001c FFF7FEFF 		bl	assert_failed
 5263              	.LVL444:
 5264              	.L458:
2774:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2775:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Set the USART address length */
2776:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   MODIFY_REG(huart->Instance->CR2, USART_CR2_ADDM7, WakeUpSelection.AddressLength);
 5265              		.loc 1 2776 0 is_stmt 1
 5266 0020 2A68     		ldr	r2, [r5]
 5267 0022 5368     		ldr	r3, [r2, #4]
 5268 0024 23F01003 		bic	r3, r3, #16
 5269 0028 2343     		orrs	r3, r3, r4
 5270 002a 5360     		str	r3, [r2, #4]
2777:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2778:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Set the USART address node */
2779:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   MODIFY_REG(huart->Instance->CR2, USART_CR2_ADD, ((uint32_t)WakeUpSelection.Address << UART_CR2_AD
 5271              		.loc 1 2779 0
 5272 002c 2A68     		ldr	r2, [r5]
ARM GAS  /tmp/cc8tmKB0.s 			page 155


 5273 002e 5368     		ldr	r3, [r2, #4]
 5274 0030 23F07F43 		bic	r3, r3, #-16777216
 5275 0034 9DF80610 		ldrb	r1, [sp, #6]	@ zero_extendqisi2
 5276 0038 43EA0163 		orr	r3, r3, r1, lsl #24
 5277 003c 5360     		str	r3, [r2, #4]
2780:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
 5278              		.loc 1 2780 0
 5279 003e 03B0     		add	sp, sp, #12
 5280              	.LCFI54:
 5281              		.cfi_def_cfa_offset 12
 5282              		@ sp needed
 5283 0040 30BD     		pop	{r4, r5, pc}
 5284              	.LVL445:
 5285              	.L461:
 5286 0042 00BF     		.align	2
 5287              	.L460:
 5288 0044 00000000 		.word	.LC0
 5289              		.cfi_endproc
 5290              	.LFE184:
 5292              		.section	.rodata.HAL_UART_DeInit.str1.4,"aMS",%progbits,1
 5293              		.align	2
 5294              	.LC0:
 5295 0000 44726976 		.ascii	"Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart"
 5295      6572732F 
 5295      53544D33 
 5295      32463378 
 5295      785F4841 
 5296 0033 2E6300   		.ascii	".c\000"
 5297              		.text
 5298              	.Letext0:
 5299              		.file 2 "/home/logic/STM32Toolchain/gcc-arm/arm-none-eabi/include/machine/_default_types.h"
 5300              		.file 3 "/home/logic/STM32Toolchain/gcc-arm/arm-none-eabi/include/sys/_stdint.h"
 5301              		.file 4 "Drivers/CMSIS/Include/core_cm4.h"
 5302              		.file 5 "Drivers/CMSIS/Device/ST/STM32F3xx/Include/system_stm32f3xx.h"
 5303              		.file 6 "Drivers/CMSIS/Device/ST/STM32F3xx/Include/stm32f303xe.h"
 5304              		.file 7 "Drivers/CMSIS/Device/ST/STM32F3xx/Include/stm32f3xx.h"
 5305              		.file 8 "/home/logic/STM32Toolchain/gcc-arm/arm-none-eabi/include/sys/lock.h"
 5306              		.file 9 "/home/logic/STM32Toolchain/gcc-arm/arm-none-eabi/include/sys/_types.h"
 5307              		.file 10 "/home/logic/STM32Toolchain/gcc-arm/lib/gcc/arm-none-eabi/7.3.1/include/stddef.h"
 5308              		.file 11 "/home/logic/STM32Toolchain/gcc-arm/arm-none-eabi/include/sys/reent.h"
 5309              		.file 12 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_def.h"
 5310              		.file 13 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_dma.h"
 5311              		.file 14 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_uart.h"
 5312              		.file 15 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal.h"
 5313              		.file 16 "Inc/stm32f3xx_hal_conf.h"
 5314              		.file 17 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_rcc.h"
 5315              		.file 18 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_uart_ex.h"
ARM GAS  /tmp/cc8tmKB0.s 			page 156


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32f3xx_hal_uart.c
     /tmp/cc8tmKB0.s:18     .text.UART_EndTxTransfer:0000000000000000 $t
     /tmp/cc8tmKB0.s:24     .text.UART_EndTxTransfer:0000000000000000 UART_EndTxTransfer
     /tmp/cc8tmKB0.s:47     .text.UART_EndRxTransfer:0000000000000000 $t
     /tmp/cc8tmKB0.s:53     .text.UART_EndRxTransfer:0000000000000000 UART_EndRxTransfer
     /tmp/cc8tmKB0.s:80     .text.HAL_UART_MspInit:0000000000000000 $t
     /tmp/cc8tmKB0.s:87     .text.HAL_UART_MspInit:0000000000000000 HAL_UART_MspInit
     /tmp/cc8tmKB0.s:101    .text.HAL_UART_MspDeInit:0000000000000000 $t
     /tmp/cc8tmKB0.s:108    .text.HAL_UART_MspDeInit:0000000000000000 HAL_UART_MspDeInit
     /tmp/cc8tmKB0.s:122    .text.HAL_UART_DeInit:0000000000000000 $t
     /tmp/cc8tmKB0.s:129    .text.HAL_UART_DeInit:0000000000000000 HAL_UART_DeInit
     /tmp/cc8tmKB0.s:226    .text.HAL_UART_DeInit:0000000000000074 $d
     /tmp/cc8tmKB0.s:232    .text.HAL_UART_Transmit_IT:0000000000000000 $t
     /tmp/cc8tmKB0.s:239    .text.HAL_UART_Transmit_IT:0000000000000000 HAL_UART_Transmit_IT
     /tmp/cc8tmKB0.s:314    .text.HAL_UART_Receive_IT:0000000000000000 $t
     /tmp/cc8tmKB0.s:321    .text.HAL_UART_Receive_IT:0000000000000000 HAL_UART_Receive_IT
     /tmp/cc8tmKB0.s:454    .text.HAL_UART_Transmit_DMA:0000000000000000 $t
     /tmp/cc8tmKB0.s:461    .text.HAL_UART_Transmit_DMA:0000000000000000 HAL_UART_Transmit_DMA
     /tmp/cc8tmKB0.s:575    .text.HAL_UART_Transmit_DMA:0000000000000084 $d
     /tmp/cc8tmKB0.s:1213   .text.UART_DMATransmitCplt:0000000000000000 UART_DMATransmitCplt
     /tmp/cc8tmKB0.s:1291   .text.UART_DMATxHalfCplt:0000000000000000 UART_DMATxHalfCplt
     /tmp/cc8tmKB0.s:1473   .text.UART_DMAError:0000000000000000 UART_DMAError
     /tmp/cc8tmKB0.s:582    .text.HAL_UART_Receive_DMA:0000000000000000 $t
     /tmp/cc8tmKB0.s:589    .text.HAL_UART_Receive_DMA:0000000000000000 HAL_UART_Receive_DMA
     /tmp/cc8tmKB0.s:707    .text.HAL_UART_Receive_DMA:0000000000000090 $d
     /tmp/cc8tmKB0.s:1342   .text.UART_DMAReceiveCplt:0000000000000000 UART_DMAReceiveCplt
     /tmp/cc8tmKB0.s:1422   .text.UART_DMARxHalfCplt:0000000000000000 UART_DMARxHalfCplt
     /tmp/cc8tmKB0.s:714    .text.HAL_UART_DMAPause:0000000000000000 $t
     /tmp/cc8tmKB0.s:721    .text.HAL_UART_DMAPause:0000000000000000 HAL_UART_DMAPause
     /tmp/cc8tmKB0.s:800    .text.HAL_UART_DMAResume:0000000000000000 $t
     /tmp/cc8tmKB0.s:807    .text.HAL_UART_DMAResume:0000000000000000 HAL_UART_DMAResume
     /tmp/cc8tmKB0.s:880    .text.HAL_UART_DMAStop:0000000000000000 $t
     /tmp/cc8tmKB0.s:887    .text.HAL_UART_DMAStop:0000000000000000 HAL_UART_DMAStop
     /tmp/cc8tmKB0.s:968    .text.HAL_UART_Abort:0000000000000000 $t
     /tmp/cc8tmKB0.s:975    .text.HAL_UART_Abort:0000000000000000 HAL_UART_Abort
     /tmp/cc8tmKB0.s:1061   .text.HAL_UART_AbortTransmit:0000000000000000 $t
     /tmp/cc8tmKB0.s:1068   .text.HAL_UART_AbortTransmit:0000000000000000 HAL_UART_AbortTransmit
     /tmp/cc8tmKB0.s:1119   .text.HAL_UART_AbortReceive:0000000000000000 $t
     /tmp/cc8tmKB0.s:1126   .text.HAL_UART_AbortReceive:0000000000000000 HAL_UART_AbortReceive
     /tmp/cc8tmKB0.s:1186   .text.HAL_UART_TxCpltCallback:0000000000000000 $t
     /tmp/cc8tmKB0.s:1193   .text.HAL_UART_TxCpltCallback:0000000000000000 HAL_UART_TxCpltCallback
     /tmp/cc8tmKB0.s:1207   .text.UART_DMATransmitCplt:0000000000000000 $t
     /tmp/cc8tmKB0.s:1264   .text.HAL_UART_TxHalfCpltCallback:0000000000000000 $t
     /tmp/cc8tmKB0.s:1271   .text.HAL_UART_TxHalfCpltCallback:0000000000000000 HAL_UART_TxHalfCpltCallback
     /tmp/cc8tmKB0.s:1285   .text.UART_DMATxHalfCplt:0000000000000000 $t
     /tmp/cc8tmKB0.s:1315   .text.HAL_UART_RxCpltCallback:0000000000000000 $t
     /tmp/cc8tmKB0.s:1322   .text.HAL_UART_RxCpltCallback:0000000000000000 HAL_UART_RxCpltCallback
     /tmp/cc8tmKB0.s:1336   .text.UART_DMAReceiveCplt:0000000000000000 $t
     /tmp/cc8tmKB0.s:1395   .text.HAL_UART_RxHalfCpltCallback:0000000000000000 $t
     /tmp/cc8tmKB0.s:1402   .text.HAL_UART_RxHalfCpltCallback:0000000000000000 HAL_UART_RxHalfCpltCallback
     /tmp/cc8tmKB0.s:1416   .text.UART_DMARxHalfCplt:0000000000000000 $t
     /tmp/cc8tmKB0.s:1446   .text.HAL_UART_ErrorCallback:0000000000000000 $t
     /tmp/cc8tmKB0.s:1453   .text.HAL_UART_ErrorCallback:0000000000000000 HAL_UART_ErrorCallback
     /tmp/cc8tmKB0.s:1467   .text.UART_DMAError:0000000000000000 $t
     /tmp/cc8tmKB0.s:1545   .text.UART_DMAAbortOnError:0000000000000000 $t
     /tmp/cc8tmKB0.s:1551   .text.UART_DMAAbortOnError:0000000000000000 UART_DMAAbortOnError
ARM GAS  /tmp/cc8tmKB0.s 			page 157


     /tmp/cc8tmKB0.s:1580   .text.HAL_UART_AbortCpltCallback:0000000000000000 $t
     /tmp/cc8tmKB0.s:1587   .text.HAL_UART_AbortCpltCallback:0000000000000000 HAL_UART_AbortCpltCallback
     /tmp/cc8tmKB0.s:1601   .text.HAL_UART_Abort_IT:0000000000000000 $t
     /tmp/cc8tmKB0.s:1608   .text.HAL_UART_Abort_IT:0000000000000000 HAL_UART_Abort_IT
     /tmp/cc8tmKB0.s:1762   .text.HAL_UART_Abort_IT:00000000000000c8 $d
     /tmp/cc8tmKB0.s:1835   .text.UART_DMATxAbortCallback:0000000000000000 UART_DMATxAbortCallback
     /tmp/cc8tmKB0.s:1774   .text.UART_DMARxAbortCallback:0000000000000000 UART_DMARxAbortCallback
     /tmp/cc8tmKB0.s:1768   .text.UART_DMARxAbortCallback:0000000000000000 $t
     /tmp/cc8tmKB0.s:1829   .text.UART_DMATxAbortCallback:0000000000000000 $t
     /tmp/cc8tmKB0.s:1890   .text.HAL_UART_AbortTransmitCpltCallback:0000000000000000 $t
     /tmp/cc8tmKB0.s:1897   .text.HAL_UART_AbortTransmitCpltCallback:0000000000000000 HAL_UART_AbortTransmitCpltCallback
     /tmp/cc8tmKB0.s:1911   .text.HAL_UART_AbortTransmit_IT:0000000000000000 $t
     /tmp/cc8tmKB0.s:1918   .text.HAL_UART_AbortTransmit_IT:0000000000000000 HAL_UART_AbortTransmit_IT
     /tmp/cc8tmKB0.s:1993   .text.HAL_UART_AbortTransmit_IT:0000000000000060 $d
     /tmp/cc8tmKB0.s:2004   .text.UART_DMATxOnlyAbortCallback:0000000000000000 UART_DMATxOnlyAbortCallback
     /tmp/cc8tmKB0.s:1998   .text.UART_DMATxOnlyAbortCallback:0000000000000000 $t
     /tmp/cc8tmKB0.s:2034   .text.HAL_UART_AbortReceiveCpltCallback:0000000000000000 $t
     /tmp/cc8tmKB0.s:2041   .text.HAL_UART_AbortReceiveCpltCallback:0000000000000000 HAL_UART_AbortReceiveCpltCallback
     /tmp/cc8tmKB0.s:2055   .text.HAL_UART_AbortReceive_IT:0000000000000000 $t
     /tmp/cc8tmKB0.s:2062   .text.HAL_UART_AbortReceive_IT:0000000000000000 HAL_UART_AbortReceive_IT
     /tmp/cc8tmKB0.s:2149   .text.HAL_UART_AbortReceive_IT:0000000000000074 $d
     /tmp/cc8tmKB0.s:2160   .text.UART_DMARxOnlyAbortCallback:0000000000000000 UART_DMARxOnlyAbortCallback
     /tmp/cc8tmKB0.s:2154   .text.UART_DMARxOnlyAbortCallback:0000000000000000 $t
     /tmp/cc8tmKB0.s:2194   .text.HAL_MultiProcessor_EnterMuteMode:0000000000000000 $t
     /tmp/cc8tmKB0.s:2201   .text.HAL_MultiProcessor_EnterMuteMode:0000000000000000 HAL_MultiProcessor_EnterMuteMode
     /tmp/cc8tmKB0.s:2220   .text.HAL_HalfDuplex_EnableTransmitter:0000000000000000 $t
     /tmp/cc8tmKB0.s:2227   .text.HAL_HalfDuplex_EnableTransmitter:0000000000000000 HAL_HalfDuplex_EnableTransmitter
     /tmp/cc8tmKB0.s:2276   .text.HAL_HalfDuplex_EnableReceiver:0000000000000000 $t
     /tmp/cc8tmKB0.s:2283   .text.HAL_HalfDuplex_EnableReceiver:0000000000000000 HAL_HalfDuplex_EnableReceiver
     /tmp/cc8tmKB0.s:2332   .text.HAL_LIN_SendBreak:0000000000000000 $t
     /tmp/cc8tmKB0.s:2339   .text.HAL_LIN_SendBreak:0000000000000000 HAL_LIN_SendBreak
     /tmp/cc8tmKB0.s:2412   .text.HAL_LIN_SendBreak:0000000000000068 $d
     /tmp/cc8tmKB0.s:2418   .text.HAL_UART_GetState:0000000000000000 $t
     /tmp/cc8tmKB0.s:2425   .text.HAL_UART_GetState:0000000000000000 HAL_UART_GetState
     /tmp/cc8tmKB0.s:2447   .text.HAL_UART_GetError:0000000000000000 $t
     /tmp/cc8tmKB0.s:2454   .text.HAL_UART_GetError:0000000000000000 HAL_UART_GetError
     /tmp/cc8tmKB0.s:2471   .text.UART_SetConfig:0000000000000000 $t
     /tmp/cc8tmKB0.s:2478   .text.UART_SetConfig:0000000000000000 UART_SetConfig
     /tmp/cc8tmKB0.s:2643   .text.UART_SetConfig:00000000000000f4 $d
     /tmp/cc8tmKB0.s:2653   .text.UART_SetConfig:0000000000000106 $t
     /tmp/cc8tmKB0.s:2714   .text.UART_SetConfig:000000000000016c $d
     /tmp/cc8tmKB0.s:2718   .text.UART_SetConfig:0000000000000170 $t
     /tmp/cc8tmKB0.s:2893   .text.UART_SetConfig:000000000000025c $d
     /tmp/cc8tmKB0.s:2906   .text.UART_SetConfig:0000000000000268 $d
     /tmp/cc8tmKB0.s:2916   .text.UART_SetConfig:0000000000000288 $t
     /tmp/cc8tmKB0.s:3091   .text.UART_AdvFeatureConfig:0000000000000000 $t
     /tmp/cc8tmKB0.s:3098   .text.UART_AdvFeatureConfig:0000000000000000 UART_AdvFeatureConfig
     /tmp/cc8tmKB0.s:3391   .text.UART_AdvFeatureConfig:00000000000001dc $d
     /tmp/cc8tmKB0.s:3397   .text.UART_WaitOnFlagUntilTimeout:0000000000000000 $t
     /tmp/cc8tmKB0.s:3404   .text.UART_WaitOnFlagUntilTimeout:0000000000000000 UART_WaitOnFlagUntilTimeout
     /tmp/cc8tmKB0.s:3479   .text.HAL_UART_Transmit:0000000000000000 $t
     /tmp/cc8tmKB0.s:3486   .text.HAL_UART_Transmit:0000000000000000 HAL_UART_Transmit
     /tmp/cc8tmKB0.s:3652   .text.HAL_UART_Receive:0000000000000000 $t
     /tmp/cc8tmKB0.s:3659   .text.HAL_UART_Receive:0000000000000000 HAL_UART_Receive
     /tmp/cc8tmKB0.s:3869   .text.UART_CheckIdleState:0000000000000000 $t
     /tmp/cc8tmKB0.s:3876   .text.UART_CheckIdleState:0000000000000000 UART_CheckIdleState
     /tmp/cc8tmKB0.s:3969   .text.HAL_UART_Init:0000000000000000 $t
ARM GAS  /tmp/cc8tmKB0.s 			page 158


     /tmp/cc8tmKB0.s:3976   .text.HAL_UART_Init:0000000000000000 HAL_UART_Init
     /tmp/cc8tmKB0.s:4120   .text.HAL_UART_Init:00000000000000c8 $d
     /tmp/cc8tmKB0.s:4126   .text.HAL_HalfDuplex_Init:0000000000000000 $t
     /tmp/cc8tmKB0.s:4133   .text.HAL_HalfDuplex_Init:0000000000000000 HAL_HalfDuplex_Init
     /tmp/cc8tmKB0.s:4256   .text.HAL_HalfDuplex_Init:00000000000000a8 $d
     /tmp/cc8tmKB0.s:4262   .text.HAL_LIN_Init:0000000000000000 $t
     /tmp/cc8tmKB0.s:4269   .text.HAL_LIN_Init:0000000000000000 HAL_LIN_Init
     /tmp/cc8tmKB0.s:4444   .text.HAL_LIN_Init:00000000000000e0 $d
     /tmp/cc8tmKB0.s:4450   .text.HAL_MultiProcessor_Init:0000000000000000 $t
     /tmp/cc8tmKB0.s:4457   .text.HAL_MultiProcessor_Init:0000000000000000 HAL_MultiProcessor_Init
     /tmp/cc8tmKB0.s:4589   .text.HAL_MultiProcessor_Init:00000000000000a8 $d
     /tmp/cc8tmKB0.s:4594   .text.HAL_MultiProcessor_EnableMuteMode:0000000000000000 $t
     /tmp/cc8tmKB0.s:4601   .text.HAL_MultiProcessor_EnableMuteMode:0000000000000000 HAL_MultiProcessor_EnableMuteMode
     /tmp/cc8tmKB0.s:4647   .text.HAL_MultiProcessor_DisableMuteMode:0000000000000000 $t
     /tmp/cc8tmKB0.s:4654   .text.HAL_MultiProcessor_DisableMuteMode:0000000000000000 HAL_MultiProcessor_DisableMuteMode
     /tmp/cc8tmKB0.s:4700   .text.UART_Transmit_IT:0000000000000000 $t
     /tmp/cc8tmKB0.s:4707   .text.UART_Transmit_IT:0000000000000000 UART_Transmit_IT
     /tmp/cc8tmKB0.s:4793   .text.UART_EndTransmit_IT:0000000000000000 $t
     /tmp/cc8tmKB0.s:4800   .text.UART_EndTransmit_IT:0000000000000000 UART_EndTransmit_IT
     /tmp/cc8tmKB0.s:4830   .text.UART_Receive_IT:0000000000000000 $t
     /tmp/cc8tmKB0.s:4837   .text.UART_Receive_IT:0000000000000000 UART_Receive_IT
     /tmp/cc8tmKB0.s:4953   .text.HAL_UART_IRQHandler:0000000000000000 $t
     /tmp/cc8tmKB0.s:4960   .text.HAL_UART_IRQHandler:0000000000000000 HAL_UART_IRQHandler
     /tmp/cc8tmKB0.s:5221   .text.HAL_UART_IRQHandler:0000000000000158 $d
     /tmp/cc8tmKB0.s:5226   .text.UART_Wakeup_AddressConfig:0000000000000000 $t
     /tmp/cc8tmKB0.s:5233   .text.UART_Wakeup_AddressConfig:0000000000000000 UART_Wakeup_AddressConfig
     /tmp/cc8tmKB0.s:5288   .text.UART_Wakeup_AddressConfig:0000000000000044 $d
     /tmp/cc8tmKB0.s:5293   .rodata.HAL_UART_DeInit.str1.4:0000000000000000 $d
     /tmp/cc8tmKB0.s:2902   .text.UART_SetConfig:0000000000000265 $d
     /tmp/cc8tmKB0.s:2902   .text.UART_SetConfig:0000000000000266 $t

UNDEFINED SYMBOLS
assert_failed
HAL_DMA_Start_IT
HAL_DMA_Abort
HAL_DMA_Abort_IT
HAL_RCC_GetPCLK1Freq
HAL_RCC_GetPCLK2Freq
HAL_RCC_GetSysClockFreq
HAL_GetTick
HAL_UARTEx_WakeupCallback
